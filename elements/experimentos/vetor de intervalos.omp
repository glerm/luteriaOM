; OM File Header - Saved 2014/11/25 22:35:28
; (6.080003 :patc (om-make-point 10 110) (om-make-point 50 50) (om-make-point 1366 639) "" 183 0 "2014/04/25 19:38:34" "2014/04/25 20:27:35")
; End File Header
(in-package :om)(load-lib-for (quote nil))(setf *om-current-persistent* (om-load-patch1 "vetor de intervalos" (quote ((om-load-boxcomment "comment 10" (om-make-point 119 112) (quote "possuem$mesmo$conteudo$intervalar") "" (om-make-point 1211 304) nil (om-make-color 0 0 0) (om-make-font "Courier 10 Pitch" 17.33203125D0 :family "Courier 10 Pitch" :style (quote (:plain)) :mode (quote nil))) (om-load-boxcall (quote genfun) "X-APPEND 4" (quote x-append) (quote ((om-load-inputfun (quote input-funbox) "first element" "L1?" nil) (om-load-inputfun (quote input-funbox) "second element" "L2?" nil))) (om-make-point 525 407) nil nil nil nil 1) (om-load-boxcall (quote lispfun) "LAST 4" (quote last) (quote ((om-load-inputfun (quote input-funbox) "LIST" "LIST" nil))) (om-make-point 441 337) nil nil nil nil 1) (om-load-editor-box1 "TEXT-BOX 6" (quote text-box) (quote ((om-load-inputfun (quote input-funbox) "dialog-item text (string)" "text" "untitled"))) (om-make-point 603 351) (om-make-point 130 50) (om-make-dialog-item (quote text-box) (om-make-point 1 1) (om-make-point 110 23) "(4 3 7)" :font (om-make-font "DejaVu Sans" 11.0D0 :family "DejaVu Sans" :style (quote (:plain)) :mode (quote nil))) "x" nil (pairlis (quote (winsize winpos)) (list (om-make-point 335 275) (om-make-point 10 40))) t nil nil nil) (om-load-boxcall (quote genfun) "X->DX 4" (quote x->dx) (quote ((om-load-inputfun (quote input-funbox) "a list of numbers" "SELF" 0))) (om-make-point 413 415) nil nil nil nil 1) (om-load-boxcall (quote genfun) "X-APPEND 3" (quote x-append) (quote ((om-load-inputfun (quote input-funbox) "first element" "L1?" nil) (om-load-inputfun (quote input-funbox) "second element" "L2?" nil))) (om-make-point 1219 166) nil nil nil nil 1) (om-load-boxcall (quote lispfun) "LAST 3" (quote last) (quote ((om-load-inputfun (quote input-funbox) "LIST" "LIST" nil))) (om-make-point 1186 201) nil nil nil nil 1) (om-load-editor-box1 "TEXT-BOX 5" (quote text-box) (quote ((om-load-inputfun (quote input-funbox) "dialog-item text (string)" "text" "untitled"))) (om-make-point 1200 249) (om-make-point 130 50) (om-make-dialog-item (quote text-box) (om-make-point 1 1) (om-make-point 110 23) "(3 4 7)" :font (om-make-font "DejaVu Sans" 11.0D0 :family "DejaVu Sans" :style (quote (:plain)) :mode (quote nil))) nil nil (pairlis (quote (winsize winpos)) (list (om-make-point 335 275) (om-make-point 10 40))) t nil nil nil) (om-load-boxcall (quote genfun) "X->DX 3" (quote x->dx) (quote ((om-load-inputfun (quote input-funbox) "a list of numbers" "SELF" 0))) (om-make-point 1132 139) nil nil nil nil 1) (om-load-boxcall (quote bastype) "aux 8" (quote t) (quote nil) (om-make-point 402 267) (om-make-point 57 32) (list 0 4 7) "(0 4 7)" nil) (om-load-boxcomment "comment 9" (om-make-point 90 47) (quote "maior") "" (om-make-point 358 302) nil (om-make-color 0 0 0) (om-make-font "Courier 10 Pitch" 17.33203125D0 :family "Courier 10 Pitch" :style (quote (:plain)) :mode (quote nil))) (om-load-editor-box1 "N-CERCLE 6" (quote n-cercle) (quote ((om-load-inputfun (quote input-funbox) "object" "self" nil) (om-load-inputfun (quote input-funbox) "" "n" 12) (om-load-inputfun (quote input-funbox) "" "puntos" (list 1 5 7 9)))) (om-make-point 268 412) (om-make-point 109 117) (if (find-class (quote n-cercle) nil) (make-instance (quote n-cercle) :n 12 :puntos (list (list 0 4 7)) :from-file t)) nil nil (pairlis (quote (winsize winpos)) (list (om-make-point 335 275) (om-make-point 10 40))) t nil nil nil) (om-load-boxcomment "comment 8" (om-make-point 90 47) (quote "menor") "" (om-make-point 316 64) nil (om-make-color 0 0 0) (om-make-font "Courier 10 Pitch" 17.33203125D0 :family "Courier 10 Pitch" :style (quote (:plain)) :mode (quote nil))) (om-load-boxcall (quote bastype) "aux 7" (quote t) (quote nil) (om-make-point 1092 15) (om-make-point 68 32) (list 0 2 3 5) "(0 2 3 5)" nil) (om-load-boxcomment "comment 7" (om-make-point 167 89) (quote "assimetria$tríade$\"maior-menor\"") "" (om-make-point 884 9) nil (om-make-color 0.8206444S0 0.29629898S0 0.16322565S0) (om-make-font "Courier 10 Pitch" 17.33203125D0 :family "Courier 10 Pitch" :style (quote (:plain)) :mode (quote nil))) (om-load-editor-box1 "N-CERCLE 5" (quote n-cercle) (quote ((om-load-inputfun (quote input-funbox) "object" "self" nil) (om-load-inputfun (quote input-funbox) "" "n" 12) (om-load-inputfun (quote input-funbox) "" "puntos" (list 1 5 7 9)))) (om-make-point 1003 107) (om-make-point 109 117) (if (find-class (quote n-cercle) nil) (make-instance (quote n-cercle) :n 12 :puntos (list (list 0 2 3 5)) :from-file t)) "x" nil (pairlis (quote (winsize winpos)) (list (om-make-point 335 275) (om-make-point 10 40))) t nil nil nil) (om-load-boxcomment "comment 6" (om-make-point 253 39) (quote "1,11 2,10 3,9 4,8 5,7 6") "" (om-make-point 1076 642) nil (om-make-color 0 0 0) (om-make-font "Courier 10 Pitch" 17.33203125D0 :family "Courier 10 Pitch" :style (quote (:plain)) :mode (quote nil))) (om-load-editor-box1 "TEXT-BOX 4" (quote text-box) (quote ((om-load-inputfun (quote input-funbox) "dialog-item text (string)" "text" "untitled"))) (om-make-point 1198 591) (om-make-point 130 50) (om-make-dialog-item (quote text-box) (om-make-point 1 1) (om-make-point 110 23) "(0 1 3 5)" :font (om-make-font "DejaVu Sans" 11.0D0 :family "DejaVu Sans" :style (quote (:plain)) :mode (quote nil))) nil nil (pairlis (quote (winsize winpos)) (list (om-make-point 335 275) (om-make-point 10 40))) t nil nil nil) (om-load-boxcall (quote bastype) "aux 6" (quote t) (quote nil) (om-make-point 1289 466) (om-make-point 53 32) (quote |4-11|) "|4-11|" nil) (om-load-boxcall (quote genfun) "PC-SET 2" (quote pc-set) (quote ((om-load-inputfunmenu1 (quote input-funmenu) "" "TYPE" (quote :integer) (list (list "integer" (quote :integer)) (list "vector" (quote :vector)) (list "pitch" (quote :pitch)))) (om-load-inputfun (quote input-funbox) "" "FN-NAME" (quote |3-11|)))) (om-make-point 1265 515) nil nil nil nil 1) (om-load-boxcomment "comment 5" (om-make-point 253 39) (quote "1,11 2,10 3,9 4,8 5,7 6") "" (om-make-point 370 637) nil (om-make-color 0 0 0) (om-make-font "Courier 10 Pitch" 17.33203125D0 :family "Courier 10 Pitch" :style (quote (:plain)) :mode (quote nil))) (om-load-editor-box1 "TEXT-BOX 3" (quote text-box) (quote ((om-load-inputfun (quote input-funbox) "dialog-item text (string)" "text" "untitled"))) (om-make-point 459 590) (om-make-point 130 50) (om-make-dialog-item (quote text-box) (om-make-point 1 1) (om-make-point 110 23) "(0 0 1 1 1 0)" :font (om-make-font "DejaVu Sans" 11.0D0 :family "DejaVu Sans" :style (quote (:plain)) :mode (quote nil))) "x" nil (pairlis (quote (winsize winpos)) (list (om-make-point 335 275) (om-make-point 10 40))) t nil nil nil) (om-load-boxcall (quote bastype) "aux 5" (quote t) (quote nil) (om-make-point 310 551) (om-make-point 53 32) (quote |3-11|) "|3-11|" nil) (om-load-boxcall (quote genfun) "PC-SET" (quote pc-set) (quote ((om-load-inputfunmenu1 (quote input-funmenu) "" "TYPE" (quote :vector) (list (list "integer" (quote :integer)) (list "vector" (quote :vector)) (list "pitch" (quote :pitch)))) (om-load-inputfun (quote input-funbox) "" "FN-NAME" (quote |3-11|)))) (om-make-point 488 498) nil nil nil nil 1) (om-load-boxcomment "comment 4" (om-make-point 119 112) (quote "possuem$mesmo$conteudo$intervalar") "" (om-make-point 737 275) nil (om-make-color 0 0 0) (om-make-font "Courier 10 Pitch" 17.33203125D0 :family "Courier 10 Pitch" :style (quote (:plain)) :mode (quote nil))) (om-load-boxcall (quote genfun) "X-APPEND 2" (quote x-append) (quote ((om-load-inputfun (quote input-funbox) "first element" "L1?" nil) (om-load-inputfun (quote input-funbox) "second element" "L2?" nil))) (om-make-point 990 493) nil nil nil nil 1) (om-load-boxcall (quote lispfun) "LAST 2" (quote last) (quote ((om-load-inputfun (quote input-funbox) "LIST" "LIST" nil))) (om-make-point 930 502) nil nil nil nil 1) (om-load-editor-box1 "TEXT-BOX 2" (quote text-box) (quote ((om-load-inputfun (quote input-funbox) "dialog-item text (string)" "text" "untitled"))) (om-make-point 925 569) (om-make-point 130 50) (om-make-dialog-item (quote text-box) (om-make-point 1 1) (om-make-point 110 23) "(1 2 2 5)" :font (om-make-font "DejaVu Sans" 11.0D0 :family "DejaVu Sans" :style (quote (:plain)) :mode (quote nil))) "x" nil (pairlis (quote (winsize winpos)) (list (om-make-point 335 275) (om-make-point 10 40))) t nil nil nil) (om-load-boxcall (quote genfun) "X->DX 2" (quote x->dx) (quote ((om-load-inputfun (quote input-funbox) "a list of numbers" "SELF" 0))) (om-make-point 1116 342) nil nil nil nil 1) (om-load-boxcall (quote genfun) "X-APPEND" (quote x-append) (quote ((om-load-inputfun (quote input-funbox) "first element" "L1?" nil) (om-load-inputfun (quote input-funbox) "second element" "L2?" nil))) (om-make-point 631 207) nil nil nil nil 1) (om-load-boxcall (quote lispfun) "LAST" (quote last) (quote ((om-load-inputfun (quote input-funbox) "LIST" "LIST" nil))) (om-make-point 554 205) nil nil nil nil 1) (om-load-editor-box1 "TEXT-BOX" (quote text-box) (quote ((om-load-inputfun (quote input-funbox) "dialog-item text (string)" "text" "untitled"))) (om-make-point 603 280) (om-make-point 130 50) (om-make-dialog-item (quote text-box) (om-make-point 1 1) (om-make-point 110 23) "(3 4 7)" :font (om-make-font "DejaVu Sans" 11.0D0 :family "DejaVu Sans" :style (quote (:plain)) :mode (quote nil))) "x" nil (pairlis (quote (winsize winpos)) (list (om-make-point 335 275) (om-make-point 10 40))) t nil nil nil) (om-load-boxcall (quote genfun) "X->DX" (quote x->dx) (quote ((om-load-inputfun (quote input-funbox) "a list of numbers" "SELF" 0))) (om-make-point 610 125) nil nil nil nil 1) (om-load-boxcomment "comment 3" (om-make-point 90 47) (quote "maior") "" (om-make-point 338 282) nil (om-make-color 0 0 0) (om-make-font "Courier 10 Pitch" 17.33203125D0 :family "Courier 10 Pitch" :style (quote (:plain)) :mode (quote nil))) (om-load-boxcall (quote bastype) "aux 4" (quote t) (quote nil) (om-make-point 1082 279) (om-make-point 68 32) (list 0 1 3 5) "(0 1 3 5)" nil) (om-load-editor-box1 "N-CERCLE 4" (quote n-cercle) (quote ((om-load-inputfun (quote input-funbox) "object" "self" nil) (om-load-inputfun (quote input-funbox) "" "n" 12) (om-load-inputfun (quote input-funbox) "" "puntos" (list 1 5 7 9)))) (om-make-point 927 277) (om-make-point 109 117) (if (find-class (quote n-cercle) nil) (make-instance (quote n-cercle) :n 12 :puntos (list (list 0 1 3 5)) :from-file t)) "x" nil (pairlis (quote (winsize winpos)) (list (om-make-point 335 275) (om-make-point 10 40))) t nil nil nil) (om-load-boxcomment "comment 2" (om-make-point 90 47) (quote "menor") "" (om-make-point 296 44) nil (om-make-color 0 0 0) (om-make-font "Courier 10 Pitch" 17.33203125D0 :family "Courier 10 Pitch" :style (quote (:plain)) :mode (quote nil))) (om-load-boxcomment "comment" (om-make-point 167 89) (quote "assimetria$tríade$\"maior-menor\"") "" (om-make-point 479 6) nil (om-make-color 0.8206444S0 0.29629898S0 0.16322565S0) (om-make-font "Courier 10 Pitch" 17.33203125D0 :family "Courier 10 Pitch" :style (quote (:plain)) :mode (quote nil))) (om-load-boxcall (quote bastype) "aux 3" (quote t) (quote nil) (om-make-point 413 37) (om-make-point 57 32) (list 0 3 7) "(0 3 7)" nil) (om-load-editor-box1 "N-CERCLE 3" (quote n-cercle) (quote ((om-load-inputfun (quote input-funbox) "object" "self" nil) (om-load-inputfun (quote input-funbox) "" "n" 12) (om-load-inputfun (quote input-funbox) "" "puntos" (list 1 5 7 9)))) (om-make-point 351 100) (om-make-point 109 117) (if (find-class (quote n-cercle) nil) (make-instance (quote n-cercle) :n 12 :puntos (list (list 0 3 7)) :from-file t)) "x" nil (pairlis (quote (winsize winpos)) (list (om-make-point 335 275) (om-make-point 10 40))) t nil nil nil) (om-load-boxcall (quote bastype) "aux 2" (quote t) (quote nil) (om-make-point 162 245) (om-make-point 122 32) (list 12 11 10 9 8 7 6) "(12 11 10 9 8 7 6)" nil) (om-load-editor-box1 "N-CERCLE 2" (quote n-cercle) (quote ((om-load-inputfun (quote input-funbox) "object" "self" nil) (om-load-inputfun (quote input-funbox) "" "n" 12) (om-load-inputfun (quote input-funbox) "" "puntos" (list 1 5 7 9)))) (om-make-point 79 308) (om-make-point 109 117) (if (find-class (quote n-cercle) nil) (make-instance (quote n-cercle) :n 12 :puntos (list (list 12 11 10 9 8 7 6)) :from-file t)) "x" nil (pairlis (quote (winsize winpos)) (list (om-make-point 335 275) (om-make-point 10 40))) t nil nil nil) (om-load-boxcall (quote bastype) "aux" (quote t) (quote nil) (om-make-point 148 27) (om-make-point 101 32) (list 0 1 2 3 4 5 6) "(0 1 2 3 4 5 6)" nil) (om-load-editor-box1 "N-CERCLE" (quote n-cercle) (quote ((om-load-inputfun (quote input-funbox) "object" "self" nil) (om-load-inputfun (quote input-funbox) "" "n" 12) (om-load-inputfun (quote input-funbox) "" "puntos" (list 1 5 7 9)))) (om-make-point 86 90) (om-make-point 109 117) (if (find-class (quote n-cercle) nil) (make-instance (quote n-cercle) :n 12 :puntos (list (list 0 1 2 3 4 5 6)) :from-file t)) "x" nil (pairlis (quote (winsize winpos)) (list (om-make-point 335 275) (om-make-point 10 40))) t nil nil nil))) (quote ((4 0 1 0 nil 0) (2 0 1 1 nil 0) (9 0 2 0 nil 0) (1 0 3 0 nil 0) (9 0 4 0 nil 0) (8 0 5 0 nil 0) (6 0 5 1 nil 0) (13 0 6 0 nil 0) (5 0 7 0 nil 0) (13 0 8 0 nil 0) (9 0 11 2 nil 0) (13 0 15 2 nil 0) (19 0 17 0 nil 0) (18 0 19 1 nil 0) (23 0 21 0 nil 0) (22 0 23 1 nil 0) (28 0 25 0 nil 0) (26 0 25 1 nil 0) (34 0 26 0 nil 0) (25 0 27 0 nil 0) (34 0 28 0 nil 0) (32 0 29 0 nil 0) (30 0 29 1 nil 0) (38 0 30 0 nil 0) (29 0 31 0 nil 0) (38 0 32 0 nil 0) (34 0 35 2 nil 0) (38 0 39 2 nil 0) (40 0 41 2 nil 0) (42 0 43 2 nil 0))) nil 6.080003))
