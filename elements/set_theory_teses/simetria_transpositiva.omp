; OM File Header - Saved 2014/06/24 22:46:06
; (6.080003 :patc (om-make-point 118 10) (om-make-point 0 44) (om-make-point 1018 672) "" 183 0 "2014/06/24 22:14:47" "2014/06/24 22:46:06")
; End File Header
(in-package :om)(load-lib-for (quote nil))(setf *om-current-persistent* (om-load-patch1 "simetria_transpositiva" (quote ((om-load-editor-box1 "TEXT-VIEW 7" (quote text-view) (quote ((om-load-inputfun (quote input-funbox) "dialog-item text (string)" "text" "untitled"))) (om-make-point 880 639) (om-make-point 92 50) (let ((rep (om-make-dialog-item (quote text-view) (om-make-point 1 1) (om-make-point 80 21) "untitled"))) (om-set-dialog-item-text rep "(9 12 15 18)
") rep) nil nil (pairlis (quote (winpos winsize)) (list (om-make-point 10 40) (om-make-point 335 275))) t nil nil nil) (om-load-editor-box1 "TEXT-VIEW 6" (quote text-view) (quote ((om-load-inputfun (quote input-funbox) "dialog-item text (string)" "text" "untitled"))) (om-make-point 577 639) (om-make-point 71 50) (let ((rep (om-make-dialog-item (quote text-view) (om-make-point 1 1) (om-make-point 59 21) "untitled"))) (om-set-dialog-item-text rep "(0 3 6 9)
") rep) nil nil (pairlis (quote (winpos winsize)) (list (om-make-point 10 40) (om-make-point 335 275))) t nil nil nil) (om-load-editor-box1 "TEXT-VIEW 5" (quote text-view) (quote ((om-load-inputfun (quote input-funbox) "dialog-item text (string)" "text" "untitled"))) (om-make-point 689 639) (om-make-point 76 50) (let ((rep (om-make-dialog-item (quote text-view) (om-make-point 1 1) (om-make-point 64 21) "untitled"))) (om-set-dialog-item-text rep "(3 6 9 12)
") rep) nil nil (pairlis (quote (winpos winsize)) (list (om-make-point 10 40) (om-make-point 335 275))) t nil nil nil) (om-load-editor-box1 "TEXT-VIEW 4" (quote text-view) (quote ((om-load-inputfun (quote input-funbox) "dialog-item text (string)" "text" "untitled"))) (om-make-point 770 639) (om-make-point 92 50) (let ((rep (om-make-dialog-item (quote text-view) (om-make-point 1 1) (om-make-point 80 21) "untitled"))) (om-set-dialog-item-text rep "(6 9 12 15)
") rep) nil nil (pairlis (quote (winpos winsize)) (list (om-make-point 10 40) (om-make-point 335 275))) t nil nil nil) (om-load-editor-box1 "TEXT-VIEW 3" (quote text-view) (quote ((om-load-inputfun (quote input-funbox) "dialog-item text (string)" "text" "untitled"))) (om-make-point 107 597) (om-make-point 64 50) (let ((rep (om-make-dialog-item (quote text-view) (om-make-point 1 1) (om-make-point 52 21) "untitled"))) (om-set-dialog-item-text rep "(0 4 8)
") rep) nil nil (pairlis (quote (winpos winsize)) (list (om-make-point 10 40) (om-make-point 335 275))) t nil nil nil) (om-load-editor-box1 "TEXT-VIEW 2" (quote text-view) (quote ((om-load-inputfun (quote input-funbox) "dialog-item text (string)" "text" "untitled"))) (om-make-point 225 596) (om-make-point 70 50) (let ((rep (om-make-dialog-item (quote text-view) (om-make-point 1 1) (om-make-point 58 21) "untitled"))) (om-set-dialog-item-text rep "(4 8 12)
") rep) nil nil (pairlis (quote (winpos winsize)) (list (om-make-point 10 40) (om-make-point 335 275))) t nil nil nil) (om-load-editor-box1 "TEXT-VIEW" (quote text-view) (quote ((om-load-inputfun (quote input-funbox) "dialog-item text (string)" "text" "untitled"))) (om-make-point 324 595) (om-make-point 92 50) (let ((rep (om-make-dialog-item (quote text-view) (om-make-point 1 1) (om-make-point 80 21) "untitled"))) (om-set-dialog-item-text rep "(8 12 16)
") rep) nil nil (pairlis (quote (winpos winsize)) (list (om-make-point 10 40) (om-make-point 335 275))) t nil nil nil) (om-load-boxcall (quote bastype) "aux 7" (quote t) (quote nil) (om-make-point 922 460) (om-make-point 27 32) 9 "9" nil) (om-load-editor-box1 "N-CERCLE 10" (quote n-cercle) (quote ((om-load-inputfun (quote input-funbox) "object" "self" nil) (om-load-inputfun (quote input-funbox) "" "n" 12) (om-load-inputfun (quote input-funbox) "" "puntos" (list 0 5 7)))) (om-make-point 870 527) (om-make-point 101 108) (if (find-class (quote n-cercle) nil) (make-instance (quote n-cercle) :n 12 :puntos (list (list 9 12 15 18)) :from-file t)) nil nil (pairlis (quote (winsize winpos)) (list (om-make-point 335 275) (om-make-point 0 0))) t nil nil nil) (om-load-boxcall (quote genfun) "OM+ 7" (quote om+) (quote ((om-load-inputfun (quote input-funbox) "number or list" "ARG1" 0) (om-load-inputfun (quote input-funbox) "number or list" "ARG2" 0))) (om-make-point 908 497) nil nil nil nil 1) (om-load-boxcall (quote bastype) "aux 6" (quote t) (quote nil) (om-make-point 703 459) (om-make-point 27 32) 3 "3" nil) (om-load-boxcall (quote bastype) "aux 5" (quote t) (quote nil) (om-make-point 813 460) (om-make-point 27 32) 6 "6" nil) (om-load-boxcall (quote bastype) "list 3" (quote list) (quote nil) (om-make-point 694 350) (om-make-point 68 32) (list 0 3 6 9) "(0 3 6 9)" nil) (om-load-editor-box1 "TEXT-BOX 6" (quote text-box) (quote ((om-load-inputfun (quote input-funbox) "dialog-item text (string)" "text" "untitled"))) (om-make-point 496 431) (om-make-point 98 50) (om-make-dialog-item (quote text-box) (om-make-point 1 1) (om-make-point 78 23) "(0 0 4 0 0 2)" :font (om-make-font "DejaVu Sans" 11.0D0 :family "DejaVu Sans" :style (quote (:plain)) :mode (quote nil))) nil nil (pairlis (quote (winpos winsize)) (list (om-make-point 10 40) (om-make-point 335 275))) t nil nil nil) (om-load-boxcall (quote genfun) "PC-SET 3" (quote pc-set) (quote ((om-load-inputfunmenu1 (quote input-funmenu) "" "TYPE" (quote :vector) (list (list "integer" (quote :integer)) (list "vector" (quote :vector)) (list "pitch" (quote :pitch)))) (om-load-inputfun (quote input-funbox) "" "FN-NAME" (quote |6-Z10|)))) (om-make-point 476 362) nil nil nil nil 1) (om-load-editor-box1 "TEXT-BOX 5" (quote text-box) (quote ((om-load-inputfun (quote input-funbox) "dialog-item text (string)" "text" "untitled"))) (om-make-point 535 366) (om-make-point 69 50) (om-make-dialog-item (quote text-box) (om-make-point 1 1) (om-make-point 49 23) "4-28" :font (om-make-font "DejaVu Sans" 11.0D0 :family "DejaVu Sans" :style (quote (:plain)) :mode (quote nil))) nil nil (pairlis (quote (winpos winsize)) (list (om-make-point 10 40) (om-make-point 335 275))) t nil nil nil) (om-load-boxcall (quote genfun) "P-FORM 3" (quote p-form) (quote ((om-load-inputfunmenu1 (quote input-funmenu) "" "TYPE" (quote :fn) (list (list "fn" (quote :fn)) (list "integer" (quote :integer)) (list "pitch" (quote :pitch)))) (om-load-inputfun (quote input-funbox) "" "SET" (list 4 9 10)))) (om-make-point 622 335) nil nil nil nil 1) (om-load-editor-box1 "N-CERCLE 9" (quote n-cercle) (quote ((om-load-inputfun (quote input-funbox) "object" "self" nil) (om-load-inputfun (quote input-funbox) "" "n" 12) (om-load-inputfun (quote input-funbox) "" "puntos" (list 0 5 7)))) (om-make-point 497 486) (om-make-point 143 149) (if (find-class (quote n-cercle) nil) (make-instance (quote n-cercle) :n 12 :puntos (list (list 0 3 6 9)) :from-file t)) nil nil (pairlis (quote (winsize winpos)) (list (om-make-point 335 275) (om-make-point 10 40))) t nil nil nil) (om-load-boxcall (quote genfun) "OM+ 6" (quote om+) (quote ((om-load-inputfun (quote input-funbox) "number or list" "ARG1" 0) (om-load-inputfun (quote input-funbox) "number or list" "ARG2" 0))) (om-make-point 689 497) nil nil nil nil 1) (om-load-editor-box1 "N-CERCLE 8" (quote n-cercle) (quote ((om-load-inputfun (quote input-funbox) "object" "self" nil) (om-load-inputfun (quote input-funbox) "" "n" 12) (om-load-inputfun (quote input-funbox) "" "puntos" (list 0 5 7)))) (om-make-point 651 527) (om-make-point 101 108) (if (find-class (quote n-cercle) nil) (make-instance (quote n-cercle) :n 12 :puntos (list (list 3 6 9 12)) :from-file t)) nil nil (pairlis (quote (winsize winpos)) (list (om-make-point 335 275) (om-make-point 0 0))) t nil nil nil) (om-load-editor-box1 "N-CERCLE 7" (quote n-cercle) (quote ((om-load-inputfun (quote input-funbox) "object" "self" nil) (om-load-inputfun (quote input-funbox) "" "n" 12) (om-load-inputfun (quote input-funbox) "" "puntos" (list 0 5 7)))) (om-make-point 761 527) (om-make-point 101 108) (if (find-class (quote n-cercle) nil) (make-instance (quote n-cercle) :n 12 :puntos (list (list 6 9 12 15)) :from-file t)) nil nil (pairlis (quote (winsize winpos)) (list (om-make-point 335 275) (om-make-point 0 0))) t nil nil nil) (om-load-boxcall (quote genfun) "OM+ 5" (quote om+) (quote ((om-load-inputfun (quote input-funbox) "number or list" "ARG1" 0) (om-load-inputfun (quote input-funbox) "number or list" "ARG2" 0))) (om-make-point 799 497) nil nil nil nil 1) (om-load-editor-box1 "TEXT-BOX 4" (quote text-box) (quote ((om-load-inputfun (quote input-funbox) "dialog-item text (string)" "text" "untitled"))) (om-make-point 613 109) (om-make-point 98 50) (om-make-dialog-item (quote text-box) (om-make-point 1 1) (om-make-point 78 23) "(2 0 0 0 2 2)" :font (om-make-font "DejaVu Sans" 11.0D0 :family "DejaVu Sans" :style (quote (:plain)) :mode (quote nil))) nil nil (pairlis (quote (winpos winsize)) (list (om-make-point 10 40) (om-make-point 335 275))) t nil nil nil) (om-load-boxcall (quote genfun) "PC-SET 2" (quote pc-set) (quote ((om-load-inputfunmenu1 (quote input-funmenu) "" "TYPE" (quote :vector) (list (list "integer" (quote :integer)) (list "vector" (quote :vector)) (list "pitch" (quote :pitch)))) (om-load-inputfun (quote input-funbox) "" "FN-NAME" (quote |6-Z10|)))) (om-make-point 593 31) nil nil nil nil 1) (om-load-editor-box1 "TEXT-BOX" (quote text-box) (quote ((om-load-inputfun (quote input-funbox) "dialog-item text (string)" "text" "untitled"))) (om-make-point 652 35) (om-make-point 69 50) (om-make-dialog-item (quote text-box) (om-make-point 1 1) (om-make-point 49 23) "4-9" :font (om-make-font "DejaVu Sans" 11.0D0 :family "DejaVu Sans" :style (quote (:plain)) :mode (quote nil))) nil nil (pairlis (quote (winpos winsize)) (list (om-make-point 10 40) (om-make-point 335 275))) t nil nil nil) (om-load-boxcall (quote genfun) "P-FORM" (quote p-form) (quote ((om-load-inputfunmenu1 (quote input-funmenu) "" "TYPE" (quote :fn) (list (list "fn" (quote :fn)) (list "integer" (quote :integer)) (list "pitch" (quote :pitch)))) (om-load-inputfun (quote input-funbox) "" "SET" (list 4 9 10)))) (om-make-point 739 4) nil nil nil nil 1) (om-load-editor-box1 "N-CERCLE 6" (quote n-cercle) (quote ((om-load-inputfun (quote input-funbox) "object" "self" nil) (om-load-inputfun (quote input-funbox) "" "n" 12) (om-load-inputfun (quote input-funbox) "" "puntos" (list 0 5 7)))) (om-make-point 614 175) (om-make-point 143 149) (if (find-class (quote n-cercle) nil) (make-instance (quote n-cercle) :n 12 :puntos (list (list 0 1 6 7)) :from-file t)) nil nil (pairlis (quote (winsize winpos)) (list (om-make-point 335 275) (om-make-point 10 40))) t nil nil nil) (om-load-boxcall (quote genfun) "OM+ 4" (quote om+) (quote ((om-load-inputfun (quote input-funbox) "number or list" "ARG1" 0) (om-load-inputfun (quote input-funbox) "number or list" "ARG2" 0))) (om-make-point 806 166) nil nil nil nil 1) (om-load-boxcall (quote bastype) "aux 4" (quote t) (quote nil) (om-make-point 820 129) (om-make-point 27 32) 6 "6" nil) (om-load-editor-box1 "N-CERCLE 5" (quote n-cercle) (quote ((om-load-inputfun (quote input-funbox) "object" "self" nil) (om-load-inputfun (quote input-funbox) "" "n" 12) (om-load-inputfun (quote input-funbox) "" "puntos" (list 0 5 7)))) (om-make-point 768 196) (om-make-point 101 108) (if (find-class (quote n-cercle) nil) (make-instance (quote n-cercle) :n 12 :puntos (list (list 6 7 12 13)) :from-file t)) nil nil (pairlis (quote (winsize winpos)) (list (om-make-point 335 275) (om-make-point 0 0))) t nil nil nil) (om-load-boxcall (quote bastype) "list 2" (quote list) (quote nil) (om-make-point 811 19) (om-make-point 68 32) (list 0 1 6 7) "(0 1 6 7)" nil) (om-load-editor-box1 "N-CERCLE 4" (quote n-cercle) (quote ((om-load-inputfun (quote input-funbox) "object" "self" nil) (om-load-inputfun (quote input-funbox) "" "n" 12) (om-load-inputfun (quote input-funbox) "" "puntos" (list 0 5 7)))) (om-make-point 878 196) (om-make-point 101 108) (if (find-class (quote n-cercle) nil) (make-instance (quote n-cercle) :n 12 :puntos (list (list 7 8 13 14)) :from-file t)) nil nil (pairlis (quote (winsize winpos)) (list (om-make-point 335 275) (om-make-point 0 0))) t nil nil nil) (om-load-boxcall (quote genfun) "OM+ 3" (quote om+) (quote ((om-load-inputfun (quote input-funbox) "number or list" "ARG1" 0) (om-load-inputfun (quote input-funbox) "number or list" "ARG2" 0))) (om-make-point 916 166) nil nil nil nil 1) (om-load-boxcall (quote bastype) "aux 2" (quote t) (quote nil) (om-make-point 930 129) (om-make-point 27 32) 7 "7" nil) (om-load-boxcall (quote bastype) "aux" (quote t) (quote nil) (om-make-point 349 413) (om-make-point 27 32) 8 "8" nil) (om-load-boxcall (quote genfun) "OM+ 2" (quote om+) (quote ((om-load-inputfun (quote input-funbox) "number or list" "ARG1" 0) (om-load-inputfun (quote input-funbox) "number or list" "ARG2" 0))) (om-make-point 335 450) nil nil nil nil 1) (om-load-editor-box1 "N-CERCLE" (quote n-cercle) (quote ((om-load-inputfun (quote input-funbox) "object" "self" nil) (om-load-inputfun (quote input-funbox) "" "n" 12) (om-load-inputfun (quote input-funbox) "" "puntos" (list 0 5 7)))) (om-make-point 297 480) (om-make-point 101 108) (if (find-class (quote n-cercle) nil) (make-instance (quote n-cercle) :n 12 :puntos (list (list 8 12 16)) :from-file t)) nil nil (pairlis (quote (winsize winpos)) (list (om-make-point 335 275) (om-make-point 0 0))) t nil nil nil) (om-load-boxcall (quote bastype) "list" (quote list) (quote nil) (om-make-point 230 303) (om-make-point 57 32) (list 0 4 8) "(0 4 8)" nil) (om-load-editor-box1 "N-CERCLE 3" (quote n-cercle) (quote ((om-load-inputfun (quote input-funbox) "object" "self" nil) (om-load-inputfun (quote input-funbox) "" "n" 12) (om-load-inputfun (quote input-funbox) "" "puntos" (list 0 5 7)))) (om-make-point 187 480) (om-make-point 101 108) (if (find-class (quote n-cercle) nil) (make-instance (quote n-cercle) :n 12 :puntos (list (list 4 8 12)) :from-file t)) nil nil (pairlis (quote (winsize winpos)) (list (om-make-point 335 275) (om-make-point 0 0))) t nil nil nil) (om-load-boxcall (quote bastype) "aux 3" (quote t) (quote nil) (om-make-point 239 413) (om-make-point 27 32) 4 "4" nil) (om-load-boxcall (quote genfun) "OM+" (quote om+) (quote ((om-load-inputfun (quote input-funbox) "number or list" "ARG1" 0) (om-load-inputfun (quote input-funbox) "number or list" "ARG2" 0))) (om-make-point 225 450) nil nil nil nil 1) (om-load-editor-box1 "N-CERCLE 2" (quote n-cercle) (quote ((om-load-inputfun (quote input-funbox) "object" "self" nil) (om-load-inputfun (quote input-funbox) "" "n" 12) (om-load-inputfun (quote input-funbox) "" "puntos" (list 0 5 7)))) (om-make-point 33 441) (om-make-point 143 149) (if (find-class (quote n-cercle) nil) (make-instance (quote n-cercle) :n 12 :puntos (list (list 0 4 8)) :from-file t)) nil nil (pairlis (quote (winsize winpos)) (list (om-make-point 335 275) (om-make-point 10 40))) t nil nil nil) (om-load-boxcall (quote genfun) "P-FORM 2" (quote p-form) (quote ((om-load-inputfunmenu1 (quote input-funmenu) "" "TYPE" (quote :fn) (list (list "fn" (quote :fn)) (list "integer" (quote :integer)) (list "pitch" (quote :pitch)))) (om-load-inputfun (quote input-funbox) "" "SET" (list 4 9 10)))) (om-make-point 158 288) nil nil nil nil 1) (om-load-editor-box1 "TEXT-BOX 3" (quote text-box) (quote ((om-load-inputfun (quote input-funbox) "dialog-item text (string)" "text" "untitled"))) (om-make-point 71 319) (om-make-point 69 50) (om-make-dialog-item (quote text-box) (om-make-point 1 1) (om-make-point 49 23) "3-12" :font (om-make-font "DejaVu Sans" 11.0D0 :family "DejaVu Sans" :style (quote (:plain)) :mode (quote nil))) nil nil (pairlis (quote (winpos winsize)) (list (om-make-point 10 40) (om-make-point 335 275))) t nil nil nil) (om-load-boxcall (quote genfun) "PC-SET" (quote pc-set) (quote ((om-load-inputfunmenu1 (quote input-funmenu) "" "TYPE" (quote :vector) (list (list "integer" (quote :integer)) (list "vector" (quote :vector)) (list "pitch" (quote :pitch)))) (om-load-inputfun (quote input-funbox) "" "FN-NAME" (quote |6-Z10|)))) (om-make-point 12 315) nil nil nil nil 1) (om-load-editor-box1 "TEXT-BOX 2" (quote text-box) (quote ((om-load-inputfun (quote input-funbox) "dialog-item text (string)" "text" "untitled"))) (om-make-point 32 393) (om-make-point 98 50) (om-make-dialog-item (quote text-box) (om-make-point 1 1) (om-make-point 78 23) "(0 0 0 3 0 0)" :font (om-make-font "DejaVu Sans" 11.0D0 :family "DejaVu Sans" :style (quote (:plain)) :mode (quote nil))) nil nil (pairlis (quote (winpos winsize)) (list (om-make-point 10 40) (om-make-point 335 275))) t nil nil nil))) (quote ((8 2 0 0 nil 0) (17 2 1 0 nil 0) (19 2 2 0 nil 0) (20 2 3 0 nil 0) (41 2 4 0 nil 0) (38 2 5 0 nil 0) (36 2 6 0 nil 0) (9 0 8 2 nil 0) (12 0 9 0 nil 2) (7 0 9 1 nil 0) (14 0 13 0 nil 0) (15 0 14 1 nil 0) (16 0 15 0 nil 0) (12 0 16 1 nil 0) (12 0 17 2 nil 0) (12 0 18 0 nil 2) (10 0 18 1 nil 0) (18 0 19 2 nil 0) (21 0 20 2 nil 0) (12 0 21 0 nil 2) (11 0 21 1 nil 0) (23 0 22 0 nil 0) (24 0 23 1 nil 0) (25 0 24 0 nil 0) (30 0 25 1 nil 0) (30 0 26 2 nil 0) (30 0 27 0 nil 2) (28 0 27 1 nil 0) (27 0 29 2 nil 0) (32 0 31 2 nil 0) (30 0 32 0 nil 2) (33 0 32 1 nil 0) (37 0 35 0 nil 2) (34 0 35 1 nil 0) (35 0 36 2 nil 0) (40 0 38 2 nil 0) (37 0 40 0 nil 2) (39 0 40 1 nil 0) (37 0 41 2 nil 0) (37 0 42 1 nil 0) (42 0 43 0 nil 0) (43 0 44 1 nil 0) (44 0 45 0 nil 0))) nil 6.080003))