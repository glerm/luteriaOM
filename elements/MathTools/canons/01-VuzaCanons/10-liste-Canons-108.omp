; OM File Header - Saved 2014/04/26 5:39:37
; (6.04 :patc (om-make-point 4 226) (om-make-point 50 50) (om-make-point 1193 806) "non documentation" 183 0 nil "2014/04/26 5:39:37")
; End File Header
(in-package :om)(load-lib-for 'nil)(setf *om-current-persistent* (om-load-patch1 "10-liste-Canons-108" '((om-load-editor-box1 "N-CERCLE" 'n-cercle '((om-load-inputfun 'input-funbox "objs" "SELF" nil) (om-load-inputfun 'input-funbox "no documentation" "N" 108) (om-load-inputfun 'input-funbox "no documentation" "PUNTOS" (list 0 5 7))) (om-make-point 55 513) (om-make-point 236 159) (if (find-class 'n-cercle nil) (make-instance 'n-cercle :n 108 :puntos (list (list 0 30 34 35 36 43 44 52 53 66 72 88 89 97 98 102 106 107) (list 57 87 91 92 93 100 101 1 2 15 21 37 38 46 47 51 55 56) (list 69 99 103 104 105 4 5 13 14 27 33 49 50 58 59 63 67 68) (list 81 3 7 8 9 16 17 25 26 39 45 61 62 70 71 75 79 80) (list 84 6 10 11 12 19 20 28 29 42 48 64 65 73 74 78 82 83) (list 96 18 22 23 24 31 32 40 41 54 60 76 77 85 86 90 94 95)) :from-file t)) "x" nil (corrige (pairlis '(obj-mode palette-mode winpos winsize mode grillestep notechancolor? cmnpref zoom inport outport deltapict show-stems) (list 0 0 2621450 18350450 0 1000 nil (let ((newobj (make-instance 'edition-values))) (setf (paper-size newobj) (om-make-point 600 800)) (setf (top-margin newobj) 2) (setf (left-margin newobj) 1) (setf (right-margin newobj) 1) (setf (bottom-margin newobj) 1) (setf (orientation newobj) nil) (setf (scale newobj) nil) (setf (system-space newobj) '(1)) (setf (line-space newobj) 1) (setf (title newobj) nil) (setf (show-title? newobj) nil) (setf (show-page? newobj) nil) (setf (sheet-id newobj) nil) (setf (page-mode newobj) nil) newobj) 1 0 0 (om-make-point 0 0) 't))) t nil nil) (om-load-boxcall 'genfun "TRANSP-COMB" 'transp-comb '((om-load-inputfun 'input-funbox "no documentation" "A" nil) (om-load-inputfun 'input-funbox "no documentation" "TID" nil) (om-load-inputfun 'input-funbox "no documentation" "N" 108)) (om-make-point 331 430) nil nil nil nil 1) (om-load-boxcall 'genfun "TRANSP-COMB" 'transp-comb '((om-load-inputfun 'input-funbox "no documentation" "A" nil) (om-load-inputfun 'input-funbox "no documentation" "TID" nil) (om-load-inputfun 'input-funbox "no documentation" "N" 108)) (om-make-point 422 431) nil nil nil nil 1) (om-load-editor-box1 "N-CERCLE" 'n-cercle '((om-load-inputfun 'input-funbox "objs" "SELF" nil) (om-load-inputfun 'input-funbox "no documentation" "N" 108) (om-load-inputfun 'input-funbox "no documentation" "PUNTOS" (list 57 12 12 3 12 12))) (om-make-point 348 214) (om-make-point 131 163) (if (find-class 'n-cercle nil) (make-instance 'n-cercle :n 108 :puntos (list (list 0 30 34 35 36 43 44 52 53 66 72 88 89 97 98 102 106 107)) :from-file t)) nil nil (corrige (pairlis '(winpos winsize mode grillestep notechancolor? cmnpref zoom inport outport deltapict palette-mode obj-mode show-stems) (list 2621450 18350450 0 1000 nil (let ((newobj (make-instance 'edition-values))) (setf (paper-size newobj) (om-make-point 600 800)) (setf (top-margin newobj) 2) (setf (left-margin newobj) 1) (setf (right-margin newobj) 1) (setf (bottom-margin newobj) 1) (setf (orientation newobj) nil) (setf (scale newobj) nil) (setf (system-space newobj) '(1)) (setf (line-space newobj) 1) (setf (title newobj) nil) (setf (show-title? newobj) nil) (setf (show-page? newobj) nil) (setf (sheet-id newobj) nil) (setf (page-mode newobj) nil) newobj) 1 0 0 (om-make-point 0 0) 0 0 't))) t nil nil) (om-load-boxcall 'bastype "aux7" 't 'nil (om-make-point 333 102) (om-make-point 210 28) (list 30 4 1 1 7 1 8 1 13 6 16 1 8 1 4 4 1 1) "(30 4 1 1 7 1 8 1 13 6 16 1 8 1 4 4 1 1)" nil) (om-load-boxcall 'genfun "N-SCALE" 'n-scale '((om-load-inputfun 'input-funbox "values" "L" (list 2 2 2 6))) (om-make-point 310 141) nil nil nil nil 1) (om-load-boxcall 'genfun "N-SCALE" 'n-scale '((om-load-inputfun 'input-funbox "values" "L" (list 2 2 2 6))) (om-make-point 673 144) nil nil nil nil 1) (om-load-boxcall 'bastype "aux7" 't 'nil (om-make-point 547 100) (om-make-point 107 29) (list 57 12 12 3 12 12) "(57 12 12 3 12 12)" nil) (om-load-editor-box1 "TEXTFILE" 'textfile '((om-load-inputfun 'input-funbox "object or object list" "self" nil) (om-load-inputfun 'input-funbox "text to put in the file" "exp-list" nil) (om-load-inputfunmenu1 'input-funmenu "append or supersede mode" "ed-mode" "append" (list (list "append" "append") (list "supersede" "supersede")))) (om-make-point 124 131) (om-make-point 143 249) (load-buffer-textfile '("N=108=2*3*2*3*3" "" "S" "(57 12 12 3 12 12)" "(33 24 3 21 3 24)" "(27 21 12 15 12 21)" "totale : 3 solutions" "" "R" "(30 4 1 1 7 1 8 1 13 6 16 1 8 1 4 4 1 1) " "(30 2 2 2 5 2 7 2 14 6 14 2 7 2 5 2 2 2) " "(30 1 4 1 4 4 5 4 13 6 13 4 5 4 4 1 4 1) " "(30 1 1 4 4 1 8 1 16 6 13 1 8 1 7 1 1 4) " "(29 5 1 1 7 2 7 2 11 6 17 2 7 2 2 5 1 1) " "(29 2 4 1 4 5 4 5 11 6 14 5 4 5 2 2 4 1) " "(29 1 4 2 2 5 4 5 14 6 11 5 4 5 4 1 4 2) " "(29 1 4 1 1 7 9 13 1 5 1 16 9 4 1 4 1 1) " "(29 1 1 5 2 2 7 2 17 6 11 2 7 2 7 1 1 5) " "(29 1 1 4 1 4 9 16 1 5 1 13 9 7 1 1 4 1) " "(28 6 1 1 8 1 8 1 10 6 19 1 8 1 1 6 1 1) " "(28 4 2 2 5 4 5 4 10 6 16 4 5 4 1 4 2 2) " "(28 2 5 1 1 7 2 7 13 6 10 7 2 7 2 2 5 1) " "(28 2 4 1 1 8 9 11 2 4 2 17 9 2 2 4 1 1) " "(28 2 2 4 1 4 5 4 16 6 10 4 5 4 5 2 2 4) " "(28 2 2 2 2 5 9 14 2 4 2 14 9 5 2 2 2 2) " "(28 1 6 1 1 8 1 8 11 6 11 8 1 8 1 1 6 1) " "(28 1 5 2 2 7 2 7 10 6 13 7 2 7 1 1 5 2) " "(28 1 5 1 1 9 9 10 1 5 1 19 9 1 1 5 1 1) " "(28 1 1 6 1 1 8 1 19 6 10 1 8 1 8 1 1 6) " "(28 1 1 5 1 1 9 19 1 5 1 10 9 9 1 1 5 1) " "(28 1 1 4 2 2 9 17 2 4 2 11 9 8 1 1 4 2) " "(26 6 2 2 7 2 7 2 8 6 20 2 7 1 1 5 2 2) " "(26 5 1 4 4 5 4 5 8 6 17 5 4 4 1 4 1 4) " "(26 4 4 1 1 7 1 8 14 6 8 8 1 8 1 4 4 2) " "(26 4 2 2 2 7 9 10 4 2 4 16 9 1 4 2 2 2) " "(26 4 1 4 1 4 4 5 17 6 8 5 4 5 4 4 1 5) " "(26 4 1 1 4 4 9 13 4 2 4 13 9 4 4 1 1 4) " "(26 2 6 1 1 8 1 9 10 6 10 9 1 8 1 1 6 2) " "(26 2 4 4 1 8 1 8 8 6 14 8 1 7 1 1 4 4) " "(26 2 4 2 2 9 9 8 2 4 2 20 8 1 1 4 2 2) " "(26 2 2 5 1 1 7 2 20 6 8 2 7 2 7 2 2 6) " "(26 2 2 4 1 1 8 20 2 4 2 8 9 9 2 2 4 2) " "(26 2 2 2 4 1 9 16 4 2 4 10 9 7 2 2 2 4) " "(25 6 4 1 8 1 8 1 7 6 22 1 7 1 1 4 4 1) " "(25 6 1 4 5 4 5 4 7 6 19 4 5 2 2 4 1 4) " "(25 5 4 1 1 7 1 9 13 6 7 9 1 8 1 4 5 1) " "(25 5 2 2 2 5 2 7 16 6 7 7 2 7 2 5 2 4) " "(25 5 1 4 1 8 9 8 5 1 5 17 8 1 4 1 4 1) " "(25 5 1 1 4 5 9 11 5 1 5 14 9 2 5 1 1 4) " "(25 4 5 1 1 7 2 9 11 6 8 9 2 7 2 2 6 1) " "(25 4 2 5 2 7 2 7 7 6 16 7 2 5 2 2 2 5) " "(25 4 2 4 1 9 9 7 4 2 4 19 7 2 2 2 4 1) " "(25 4 1 4 2 2 5 4 19 6 7 4 5 4 5 4 1 6) " "(25 4 1 4 1 1 7 22 1 5 1 7 9 9 4 1 5 1) " "(25 4 1 1 5 2 9 14 5 1 5 11 9 5 4 1 1 5) " "(25 1 6 2 2 7 2 9 8 6 11 9 2 7 1 1 5 4) " "(25 1 5 4 1 8 1 9 7 6 13 9 1 7 1 1 4 5) " "(25 1 5 1 4 9 9 7 1 5 1 22 7 1 1 4 1 4) " "(25 1 4 4 1 1 7 1 22 6 7 1 8 1 8 1 4 6) " "(25 1 4 2 2 2 7 19 4 2 4 7 9 9 1 4 2 4) " "(25 1 4 1 4 1 8 17 5 1 5 8 9 8 1 4 1 5) " "(23 7 2 2 2 5 2 9 14 6 5 9 2 7 2 5 4 2) " "(23 7 1 1 4 4 1 8 17 6 5 8 1 8 1 7 1 5) " "(23 6 5 2 7 2 7 2 5 6 23 2 5 2 2 2 5 2) " "(23 6 2 5 4 5 4 5 5 6 20 5 4 1 4 2 2 5) " "(23 6 1 4 2 7 9 7 6 1 6 16 7 2 4 1 4 2) " "(23 6 1 1 5 4 9 10 6 1 6 13 9 1 6 1 1 5) " "(23 5 4 2 2 5 4 9 10 6 7 9 4 5 4 1 6 2) " "(23 5 2 2 4 1 4 5 20 6 5 5 4 5 4 5 2 6) " "(23 5 2 2 2 2 5 23 2 4 2 5 9 9 5 2 4 2)  " "(23 5 1 7 1 8 1 8 5 6 17 8 1 4 4 1 1 7) " "(23 5 1 5 2 9 9 5 5 1 5 20 5 4 1 1 5 2) " "(23 5 1 1 6 1 9 13 6 1 6 10 9 4 5 1 1 6) " "(23 2 6 1 4 5 4 9 7 6 10 9 4 5 2 2 4 5) " "(23 2 5 1 1 4 5 20 5 1 5 5 9 9 2 5 1 5) " "(23 2 4 5 2 7 2 9 5 6 14 9 2 5 2 2 2 7) " "(23 2 4 1 4 2 7 16 6 1 6 7 9 7 2 4 1 6) " "(22 8 1 4 1 4 4 9 13 6 4 9 4 5 4 4 5 1) " "(22 8 1 1 4 4 1 9 16 6 4 9 1 8 1 7 2 4) " "(22 7 2 4 1 4 5 9 11 6 5 9 5 4 5 2 6 1) " "(22 7 1 1 5 2 2 7 19 6 4 7 2 7 2 7 1 6) " "(22 6 4 4 5 4 5 4 4 6 22 4 4 1 4 1 4 4) " "(22 6 2 5 1 8 9 5 6 2 6 17 5 4 2 2 5 1) " "(22 6 2 2 4 5 9 8 6 2 6 14 8 1 5 2 2 4) " "(22 6 1 7 2 7 2 7 4 6 19 7 2 2 5 1 1 7)" "(22 6 1 6 1 9 9 4 6 1 6 19 4 5 1 1 6 1) " "(22 6 1 1 6 2 9 11 6 2 6 11 9 2 6 1 1 6) " "(22 4 5 1 4 4 5 9 8 6 8 9 5 4 4 1 5 4) " "(22 4 4 1 1 4 4 22 4 2 4 4 9 9 4 4 2 4) " "(22 4 2 7 1 8 1 9 4 6 16 9 1 4 4 1 1 8) " "(22 4 2 2 5 1 8 14 6 2 6 8 9 5 4 2 2 6) " "(22 1 6 2 5 4 5 9 5 6 11 9 5 4 1 4 2 7) " "(22 1 6 1 1 5 4 19 6 1 6 4 9 9 1 6 1 6) " "(22 1 5 4 4 5 4 9 4 6 13 9 4 4 1 4 1 8) " "(22 1 5 2 2 4 5 17 6 2 6 5 9 8 1 5 2 6) " "(20 9 1 4 2 2 5 9 14 6 2 9 5 4 5 5 4 2) " "(20 9 1 1 5 2 2 9 17 6 2 9 2 7 2 8 1 5) " "(20 8 1 5 2 2 7 9 10 6 4 9 7 2 7 1 6 2) " "(20 8 1 1 6 1 1 8 20 6 2 8 1 8 1 8 2 6) " "(20 6 4 4 2 7 9 4 6 4 6 16 4 5 1 4 4 2) " "(20 6 4 1 5 4 9 7 6 4 6 13 7 2 4 4 1 5) " "(20 6 2 6 2 9 9 2 6 2 6 20 2 6 1 1 6 2) " "(20 6 2 2 6 1 9 10 6 4 6 10 9 1 6 2 2 6) " "(20 5 4 2 5 2 7 9 7 6 7 9 7 2 5 2 4 5) " "(20 5 1 8 2 7 2 9 2 6 17 9 2 2 5 1 1 9) " "(20 5 1 4 4 2 7 13 6 4 6 7 9 4 5 1 4 6) " "(20 2 6 1 7 2 7 9 4 6 10 9 7 2 2 5 1 8) " "(20 2 4 5 5 4 5 9 2 6 14 9 5 2 2 4 1 9) " "(20 2 4 4 1 5 4 16 6 4 6 4 9 7 2 4 4 6) " "(19 9 2 5 1 1 7 9 13 6 1 9 7 2 7 4 5 1) " "(19 9 2 2 4 1 4 9 16 6 1 9 4 5 4 7 2 4) " "(19 9 1 6 1 1 8 9 11 6 2 9 8 1 8 2 6 1) " "(19 9 1 1 6 1 1 9 19 6 1 9 1 8 1 9 1 6) " "(19 7 2 4 4 1 8 9 8 6 5 9 8 1 7 1 5 4) " "(19 6 5 5 1 8 9 2 6 5 6 17 2 6 1 4 5 1) " "(19 6 5 2 4 5 9 5 6 5 6 14 5 4 2 5 2 4) " "(19 6 4 6 1 9 9 1 6 4 6 19 1 6 2 2 6 1) " "(19 6 4 1 6 2 9 8 6 5 6 11 8 1 5 4 1 6) " "(19 6 1 4 5 1 8 11 6 5 6 8 9 2 6 1 4 6) " "(19 4 5 1 7 1 8 9 5 6 8 9 8 1 4 4 2 7) " "(19 4 2 7 4 5 4 9 1 6 16 9 4 1 4 2 2 9) " "(19 4 2 5 2 4 5 14 6 5 6 5 9 5 4 2 5 6) " "(19 1 6 2 8 1 8 9 2 6 11 9 8 1 1 6 1 9) " "(19 1 5 4 7 2 7 9 1 6 13 9 7 1 1 5 2 9) " "(19 1 5 4 1 6 2 17 6 5 6 2 9 8 1 5 5 6) " "(17 9 4 4 1 1 7 9 14 5 1 8 8 1 8 5 4 2) " "(17 9 4 1 4 1 4 9 17 5 1 8 5 4 5 8 1 5) " "(17 9 2 6 1 1 9 9 10 6 1 9 9 1 9 1 6 2) " "(17 8 1 5 4 1 9 9 7 6 4 9 9 1 7 2 4 5) " "(17 6 7 4 2 7 9 1 6 7 6 16 1 6 2 5 4 2) " "(17 6 7 1 5 4 9 4 6 7 6 13 4 5 1 7 1 5) " "(17 6 5 2 6 1 9 7 6 7 6 10 7 2 4 5 2 6) " "(17 6 2 5 4 2 7 10 6 7 6 7 9 1 6 2 5 6) " "(17 5 4 2 7 1 9 9 4 6 7 9 9 1 4 5 1 8) " "(17 5 1 7 1 5 4 13 6 7 6 4 9 4 5 1 7 6) " "(17 2 6 1 9 1 9 9 1 6 10 9 9 1 1 6 2 9) " "(17 2 4 5 8 1 8 8 1 5 14 9 7 1 1 4 4 9) " "(17 2 4 5 2 6 1 16 6 7 6 1 9 7 2 4 7 6) " "(16 9 5 4 1 1 8 9 13 4 2 7 9 1 9 4 5 1) " "(16 9 5 2 2 2 5 9 16 4 2 7 7 2 7 7 2 4) " "(16 9 4 5 1 1 9 9 11 5 1 8 9 2 9 2 6 1) " "(16 9 1 6 2 2 9 9 8 6 2 9 9 2 8 1 5 4) " "(16 7 2 4 5 2 9 9 5 6 5 9 9 2 5 4 2 7) " "(16 6 8 5 1 8 8 1 5 8 6 16 1 5 4 4 5 1) " "(16 6 8 2 4 5 9 2 6 8 6 14 2 6 1 7 2 4) " "(16 6 7 1 6 2 9 5 6 8 6 11 5 4 2 7 1 6) " "(16 6 4 4 5 1 8 8 6 8 6 8 8 1 5 4 4 6) " "(16 6 1 7 2 4 5 11 6 8 6 5 9 2 6 1 7 6) " "(16 4 5 1 8 2 9 9 2 6 8 9 9 2 2 6 1 9) " "(16 4 2 7 1 6 2 14 6 8 6 2 9 5 4 2 8 6) " "(16 1 6 2 9 2 9 8 1 5 11 9 9 1 1 5 4 9) " "(16 1 5 4 9 1 9 7 2 4 13 9 8 1 1 4 5 9) " "(14 9 7 2 2 2 7 9 14 2 4 5 9 2 9 5 4 2) " "(14 9 5 4 2 2 9 9 10 4 2 7 9 4 9 1 6 2) " "(14 9 2 6 1 4 9 9 7 6 1 9 9 4 7 2 4 5) " "(14 8 1 5 4 4 9 9 4 6 4 9 9 4 4 5 1 8) " "(14 6 10 4 2 7 7 2 4 10 6 14 2 4 5 5 4 2) " "(14 6 10 1 5 4 9 1 6 10 6 13 1 6 2 8 1 5) " "(14 6 8 2 6 1 9 4 6 10 6 10 4 5 1 8 2 6) " "(14 6 5 5 4 2 7 7 6 10 6 7 7 2 4 5 5 6) " "(14 6 2 8 1 5 4 10 6 10 6 4 9 1 6 2 8 6) " "(14 5 4 2 7 4 9 9 1 6 7 9 9 4 1 6 2 9)" "(14 5 1 8 2 6 1 13 6 10 6 1 9 4 5 1 10 6) " "(14 2 6 1 9 4 9 7 2 4 10 9 9 2 2 4 5 9) " "(13 9 8 1 4 1 8 9 13 1 5 4 9 4 9 4 5 1) " "(13 9 7 2 4 1 9 9 11 2 4 5 9 5 9 2 6 1) " "(13 9 4 5 1 4 9 9 8 5 1 8 9 5 8 1 5 4) " "(13 9 1 6 2 5 9 9 5 6 2 9 9 5 5 4 2 7) " "(13 7 2 4 5 5 9 9 2 6 5 9 9 5 2 6 1 9) " "(13 6 11 5 1 8 5 4 2 11 6 13 4 2 7 4 5 1) " "(13 6 11 2 4 5 8 1 5 11 6 13 1 5 4 7 2 4) " "(13 6 10 1 6 2 9 2 6 11 6 11 2 6 1 9 1 6) " "(13 6 7 4 5 1 8 5 6 11 6 8 5 4 2 7 4 6) " "(13 6 4 7 2 4 5 8 6 11 6 5 8 1 5 4 7 6) " "(13 6 1 9 1 6 2 11 6 11 6 2 9 2 6 1 10 6) " "(13 4 5 1 8 5 9 8 1 5 8 9 9 4 1 5 4 9) " "(13 1 6 2 9 5 9 5 4 2 11 9 9 1 4 2 7 9) " "(11 9 8 1 5 2 9 9 10 1 5 4 9 7 9 1 6 2) " "(11 9 5 4 2 5 9 9 7 4 2 7 9 7 7 2 4 5) " "(11 9 2 6 1 7 9 9 4 6 1 9 9 7 4 5 1 8) " "(11 8 1 5 4 7 9 9 1 6 4 9 9 7 1 6 2 9) " "(11 5 4 2 7 7 9 7 2 4 7 9 9 5 2 4 5 9) " "(11 2 6 1 9 7 9 4 5 1 10 9 9 2 5 1 8 9) " "(10 9 9 1 6 1 9 9 10 1 6 2 9 8 9 2 6 1) " "(10 9 7 2 4 4 9 9 8 2 4 5 9 8 8 1 5 4) " "(10 9 4 5 1 7 9 9 5 5 1 8 9 8 5 4 2 7) " "(10 9 1 6 2 8 9 9 2 6 2 9 9 8 2 6 1 9) " "(10 7 2 4 5 8 9 8 1 5 5 9 9 7 1 5 4 9) " "(10 4 5 1 8 8 9 5 4 2 8 9 9 4 4 2 7 9) " "" "totale : 180 solutions" "totale : 540 canons") 'textfile "append") "x" nil (corrige (pairlis '(mode grillestep notechancolor? cmnpref zoom inport outport deltapict winsize winpos palette-mode obj-mode show-stems) (list 0 1000 nil (let ((newobj (make-instance 'edition-values))) (setf (paper-size newobj) (om-make-point 600 800)) (setf (top-margin newobj) 2) (setf (left-margin newobj) 1) (setf (right-margin newobj) 1) (setf (bottom-margin newobj) 1) (setf (orientation newobj) nil) (setf (scale newobj) nil) (setf (system-space newobj) '(1)) (setf (line-space newobj) 1) (setf (title newobj) nil) (setf (show-title? newobj) nil) (setf (show-page? newobj) nil) (setf (sheet-id newobj) nil) (setf (page-mode newobj) nil) newobj) 1 0 0 (om-make-point 0 0) (om-make-point 370 280) (om-make-point 40 10) 0 0 't))) nil nil nil) (om-load-boxcomment "comment" (om-make-point 131 57) '"Duality" "" (om-make-point 895 651) nil (om-make-color 10/51 52/255 199/255) (om-make-font "Geneva" 36 :family nil :style 'nil :mode nil)) (om-load-editor-box1 "MULTI-SEQ1" 'multi-seq '((om-load-inputfun 'input-funbox "objs" "SELF" nil) (om-load-inputfun 'input-funbox "no documentation" "CHORD-SEQS" (list (let ((newobj (when (find-class 'chord-seq nil) (make-instance 'chord-seq :lmidic '((6000)) :lonset '(0 1000) :ldur '((1000)) :lvel '((100)) :loffset '((0)) :lchan '((1)) :legato 0)))) (load-port-info newobj '((0))) (init-mus-color newobj (list (list nil (om-make-color 0 0 0)) (list (list 0) (om-make-color 0 0 0)) (list (list 0 0) (om-make-color 0 0 0)))) (set-extra-pairs newobj 'nil) (set-patch-pairs newobj 'nil) (set-tonalite newobj nil) newobj)))) (om-make-point 882 427) (om-make-point 169 224) (if (find-class 'multi-seq nil) (let ((newobj (make-instance 'multi-seq :chord-seqs (list (let ((newobj (when (find-class 'chord-seq nil) (make-instance 'chord-seq :lmidic '((6000) (6100) (6200) (6300) (6400) (6500) (6600) (6700) (6800) (6900) (7000) (7100) (6000) (6100) (6200) (6300) (6400) (6500) (6600) (6700) (6800) (6900) (7000) (7100) (6000) (6100) (6200) (6300) (6400) (6500) (6600) (6700) (6800) (6900) (7000) (7100) (6000) (6100) (6200) (6300) (6400) (6500) (6600) (6700) (6800) (6900) (7000) (7100) (7100) (7100) (7100) (7100) (7100) (7100)) :lonset '(0 6000 6800 7000 7200 8600 8800 10400 10600 13200 14400 17600 17800 19400 19600 20400 21200 21400 21600 27600 28400 28600 28800 30200 30400 32000 32200 34800 36000 39200 39400 41000 41200 42000 42800 43000 43200 49200 50000 50200 50400 51800 52000 53600 53800 56400 57600 60800 61000 62600 62800 63600 64400 64600 84000) :ldur '((1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000)) :lvel '((100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100)) :loffset '((0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0)) :lchan '((1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1)) :legato 0)))) (load-port-info newobj '((0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0))) (init-mus-color newobj nil) (set-extra-pairs newobj 'nil) (set-patch-pairs newobj 'nil) (set-tonalite newobj nil) newobj) (let ((newobj (when (find-class 'chord-seq nil) (make-instance 'chord-seq :lmidic '((6000) (6100) (6200) (6300) (6400) (6500) (6600) (6700) (6800) (6900) (7000) (7100) (6000) (6100) (6200) (6300) (6400) (6500) (6600) (6700) (6800) (6900) (7000) (7100) (6000) (6100) (6200) (6300) (6400) (6500) (6600) (6700) (6800) (6900) (7000) (7100) (6000) (6100) (6200) (6300) (6400) (6500) (6600) (6700) (6800) (6900) (7000) (7100) (7100) (7100) (7100) (7100) (7100) (7100)) :lonset '(11400 17400 18200 18400 18600 20000 20200 21800 22000 24600 25800 29000 29200 30800 31000 31800 32600 32800 33000 39000 39800 40000 40200 41600 41800 43400 43600 46200 47400 50600 50800 52400 52600 53400 54200 54400 54600 60600 61400 61600 61800 63200 63400 65000 65200 67800 69000 72200 72400 74000 74200 75000 75800 76000 84000) :ldur '((1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000)) :lvel '((100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100)) :loffset '((0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0)) :lchan '((2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2)) :legato 0)))) (load-port-info newobj '((0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0))) (init-mus-color newobj nil) (set-extra-pairs newobj 'nil) (set-patch-pairs newobj 'nil) (set-tonalite newobj nil) newobj) (let ((newobj (when (find-class 'chord-seq nil) (make-instance 'chord-seq :lmidic '((6000) (6100) (6200) (6300) (6400) (6500) (6600) (6700) (6800) (6900) (7000) (7100) (6000) (6100) (6200) (6300) (6400) (6500) (6600) (6700) (6800) (6900) (7000) (7100) (6000) (6100) (6200) (6300) (6400) (6500) (6600) (6700) (6800) (6900) (7000) (7100) (6000) (6100) (6200) (6300) (6400) (6500) (6600) (6700) (6800) (6900) (7000) (7100) (7100) (7100) (7100) (7100) (7100) (7100)) :lonset '(13800 19800 20600 20800 21000 22400 22600 24200 24400 27000 28200 31400 31600 33200 33400 34200 35000 35200 35400 41400 42200 42400 42600 44000 44200 45800 46000 48600 49800 53000 53200 54800 55000 55800 56600 56800 57000 63000 63800 64000 64200 65600 65800 67400 67600 70200 71400 74600 74800 76400 76600 77400 78200 78400 84000) :ldur '((1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000)) :lvel '((100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100)) :loffset '((0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0)) :lchan '((3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3)) :legato 0)))) (load-port-info newobj '((0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0))) (init-mus-color newobj nil) (set-extra-pairs newobj 'nil) (set-patch-pairs newobj 'nil) (set-tonalite newobj nil) newobj) (let ((newobj (when (find-class 'chord-seq nil) (make-instance 'chord-seq :lmidic '((6000) (6100) (6200) (6300) (6400) (6500) (6600) (6700) (6800) (6900) (7000) (7100) (6000) (6100) (6200) (6300) (6400) (6500) (6600) (6700) (6800) (6900) (7000) (7100) (6000) (6100) (6200) (6300) (6400) (6500) (6600) (6700) (6800) (6900) (7000) (7100) (6000) (6100) (6200) (6300) (6400) (6500) (6600) (6700) (6800) (6900) (7000) (7100) (7100) (7100) (7100) (7100) (7100) (7100)) :lonset '(16200 22200 23000 23200 23400 24800 25000 26600 26800 29400 30600 33800 34000 35600 35800 36600 37400 37600 37800 43800 44600 44800 45000 46400 46600 48200 48400 51000 52200 55400 55600 57200 57400 58200 59000 59200 59400 65400 66200 66400 66600 68000 68200 69800 70000 72600 73800 77000 77200 78800 79000 79800 80600 80800 84000) :ldur '((1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000)) :lvel '((100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100)) :loffset '((0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0)) :lchan '((4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4)) :legato 0)))) (load-port-info newobj '((0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0))) (init-mus-color newobj nil) (set-extra-pairs newobj 'nil) (set-patch-pairs newobj 'nil) (set-tonalite newobj nil) newobj) (let ((newobj (when (find-class 'chord-seq nil) (make-instance 'chord-seq :lmidic '((6000) (6100) (6200) (6300) (6400) (6500) (6600) (6700) (6800) (6900) (7000) (7100) (6000) (6100) (6200) (6300) (6400) (6500) (6600) (6700) (6800) (6900) (7000) (7100) (6000) (6100) (6200) (6300) (6400) (6500) (6600) (6700) (6800) (6900) (7000) (7100) (6000) (6100) (6200) (6300) (6400) (6500) (6600) (6700) (6800) (6900) (7000) (7100) (7100) (7100) (7100) (7100) (7100) (7100)) :lonset '(16800 22800 23600 23800 24000 25400 25600 27200 27400 30000 31200 34400 34600 36200 36400 37200 38000 38200 38400 44400 45200 45400 45600 47000 47200 48800 49000 51600 52800 56000 56200 57800 58000 58800 59600 59800 60000 66000 66800 67000 67200 68600 68800 70400 70600 73200 74400 77600 77800 79400 79600 80400 81200 81400 84000) :ldur '((1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000)) :lvel '((100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100)) :loffset '((0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0)) :lchan '((5) (5) (5) (5) (5) (5) (5) (5) (5) (5) (5) (5) (5) (5) (5) (5) (5) (5) (5) (5) (5) (5) (5) (5) (5) (5) (5) (5) (5) (5) (5) (5) (5) (5) (5) (5) (5) (5) (5) (5) (5) (5) (5) (5) (5) (5) (5) (5) (5) (5) (5) (5) (5) (5)) :legato 0)))) (load-port-info newobj '((0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0))) (init-mus-color newobj nil) (set-extra-pairs newobj 'nil) (set-patch-pairs newobj 'nil) (set-tonalite newobj nil) newobj) (let ((newobj (when (find-class 'chord-seq nil) (make-instance 'chord-seq :lmidic '((6000) (6100) (6200) (6300) (6400) (6500) (6600) (6700) (6800) (6900) (7000) (7100) (6000) (6100) (6200) (6300) (6400) (6500) (6600) (6700) (6800) (6900) (7000) (7100) (6000) (6100) (6200) (6300) (6400) (6500) (6600) (6700) (6800) (6900) (7000) (7100) (6000) (6100) (6200) (6300) (6400) (6500) (6600) (6700) (6800) (6900) (7000) (7100) (7100) (7100) (7100) (7100) (7100) (7100)) :lonset '(19200 25200 26000 26200 26400 27800 28000 29600 29800 32400 33600 36800 37000 38600 38800 39600 40400 40600 40800 46800 47600 47800 48000 49400 49600 51200 51400 54000 55200 58400 58600 60200 60400 61200 62000 62200 62400 68400 69200 69400 69600 71000 71200 72800 73000 75600 76800 80000 80200 81800 82000 82800 83600 83800 84000) :ldur '((1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000)) :lvel '((100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100)) :loffset '((0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0)) :lchan '((6) (6) (6) (6) (6) (6) (6) (6) (6) (6) (6) (6) (6) (6) (6) (6) (6) (6) (6) (6) (6) (6) (6) (6) (6) (6) (6) (6) (6) (6) (6) (6) (6) (6) (6) (6) (6) (6) (6) (6) (6) (6) (6) (6) (6) (6) (6) (6) (6) (6) (6) (6) (6) (6)) :legato 0)))) (load-port-info newobj '((0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0))) (init-mus-color newobj nil) (set-extra-pairs newobj 'nil) (set-patch-pairs newobj 'nil) (set-tonalite newobj nil) newobj)) :from-file t))) (load-port-info newobj '(((0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0)) ((0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0)) ((0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0)) ((0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0)) ((0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0)) ((0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0)))) (init-mus-color newobj (list (list nil (om-make-color 0 0 0)) (list (list 0) (om-make-color 0 0 0)) (list (list 0 0) (om-make-color 0 0 0)) (list (list 0 0 0) (om-make-color 0 0 0)) (list (list 0 1) (om-make-color 0 0 0)) (list (list 0 1 0) (om-make-color 0 0 0)) (list (list 0 2) (om-make-color 0 0 0)) (list (list 0 2 0) (om-make-color 0 0 0)) (list (list 0 3) (om-make-color 0 0 0)) (list (list 0 3 0) (om-make-color 0 0 0)) (list (list 0 4) (om-make-color 0 0 0)) (list (list 0 4 0) (om-make-color 0 0 0)) (list (list 0 5) (om-make-color 0 0 0)) (list (list 0 5 0) (om-make-color 0 0 0)) (list (list 0 6) (om-make-color 0 0 0)) (list (list 0 6 0) (om-make-color 0 0 0)) (list (list 0 7) (om-make-color 0 0 0)) (list (list 0 7 0) (om-make-color 0 0 0)) (list (list 0 8) (om-make-color 0 0 0)) (list (list 0 8 0) (om-make-color 0 0 0)) (list (list 0 9) (om-make-color 0 0 0)) (list (list 0 9 0) (om-make-color 0 0 0)) (list (list 0 10) (om-make-color 0 0 0)) (list (list 0 10 0) (om-make-color 0 0 0)) (list (list 0 11) (om-make-color 0 0 0)) (list (list 0 11 0) (om-make-color 0 0 0)) (list (list 0 12) (om-make-color 0 0 0)) (list (list 0 12 0) (om-make-color 0 0 0)) (list (list 0 13) (om-make-color 0 0 0)) (list (list 0 13 0) (om-make-color 0 0 0)) (list (list 0 14) (om-make-color 0 0 0)) (list (list 0 14 0) (om-make-color 0 0 0)) (list (list 0 15) (om-make-color 0 0 0)) (list (list 0 15 0) (om-make-color 0 0 0)) (list (list 0 16) (om-make-color 0 0 0)) (list (list 0 16 0) (om-make-color 0 0 0)) (list (list 0 17) (om-make-color 0 0 0)) (list (list 0 17 0) (om-make-color 0 0 0)) (list (list 0 18) (om-make-color 0 0 0)) (list (list 0 18 0) (om-make-color 0 0 0)) (list (list 0 19) (om-make-color 0 0 0)) (list (list 0 19 0) (om-make-color 0 0 0)) (list (list 0 20) (om-make-color 0 0 0)) (list (list 0 20 0) (om-make-color 0 0 0)) (list (list 0 21) (om-make-color 0 0 0)) (list (list 0 21 0) (om-make-color 0 0 0)) (list (list 0 22) (om-make-color 0 0 0)) (list (list 0 22 0) (om-make-color 0 0 0)) (list (list 0 23) (om-make-color 0 0 0)) (list (list 0 23 0) (om-make-color 0 0 0)) (list (list 0 24) (om-make-color 0 0 0)) (list (list 0 24 0) (om-make-color 0 0 0)) (list (list 0 25) (om-make-color 0 0 0)) (list (list 0 25 0) (om-make-color 0 0 0)) (list (list 0 26) (om-make-color 0 0 0)) (list (list 0 26 0) (om-make-color 0 0 0)) (list (list 0 27) (om-make-color 0 0 0)) (list (list 0 27 0) (om-make-color 0 0 0)) (list (list 0 28) (om-make-color 0 0 0)) (list (list 0 28 0) (om-make-color 0 0 0)) (list (list 0 29) (om-make-color 0 0 0)) (list (list 0 29 0) (om-make-color 0 0 0)) (list (list 0 30) (om-make-color 0 0 0)) (list (list 0 30 0) (om-make-color 0 0 0)) (list (list 0 31) (om-make-color 0 0 0)) (list (list 0 31 0) (om-make-color 0 0 0)) (list (list 0 32) (om-make-color 0 0 0)) (list (list 0 32 0) (om-make-color 0 0 0)) (list (list 0 33) (om-make-color 0 0 0)) (list (list 0 33 0) (om-make-color 0 0 0)) (list (list 0 34) (om-make-color 0 0 0)) (list (list 0 34 0) (om-make-color 0 0 0)) (list (list 0 35) (om-make-color 0 0 0)) (list (list 0 35 0) (om-make-color 0 0 0)) (list (list 0 36) (om-make-color 0 0 0)) (list (list 0 36 0) (om-make-color 0 0 0)) (list (list 0 37) (om-make-color 0 0 0)) (list (list 0 37 0) (om-make-color 0 0 0)) (list (list 0 38) (om-make-color 0 0 0)) (list (list 0 38 0) (om-make-color 0 0 0)) (list (list 0 39) (om-make-color 0 0 0)) (list (list 0 39 0) (om-make-color 0 0 0)) (list (list 0 40) (om-make-color 0 0 0)) (list (list 0 40 0) (om-make-color 0 0 0)) (list (list 0 41) (om-make-color 0 0 0)) (list (list 0 41 0) (om-make-color 0 0 0)) (list (list 0 42) (om-make-color 0 0 0)) (list (list 0 42 0) (om-make-color 0 0 0)) (list (list 0 43) (om-make-color 0 0 0)) (list (list 0 43 0) (om-make-color 0 0 0)) (list (list 0 44) (om-make-color 0 0 0)) (list (list 0 44 0) (om-make-color 0 0 0)) (list (list 0 45) (om-make-color 0 0 0)) (list (list 0 45 0) (om-make-color 0 0 0)) (list (list 0 46) (om-make-color 0 0 0)) (list (list 0 46 0) (om-make-color 0 0 0)) (list (list 0 47) (om-make-color 0 0 0)) (list (list 0 47 0) (om-make-color 0 0 0)) (list (list 0 48) (om-make-color 0 0 0)) (list (list 0 48 0) (om-make-color 0 0 0)) (list (list 0 49) (om-make-color 0 0 0)) (list (list 0 49 0) (om-make-color 0 0 0)) (list (list 0 50) (om-make-color 0 0 0)) (list (list 0 50 0) (om-make-color 0 0 0)) (list (list 0 51) (om-make-color 0 0 0)) (list (list 0 51 0) (om-make-color 0 0 0)) (list (list 0 52) (om-make-color 0 0 0)) (list (list 0 52 0) (om-make-color 0 0 0)) (list (list 0 53) (om-make-color 0 0 0)) (list (list 0 53 0) (om-make-color 0 0 0)) (list (list 1) (om-make-color 0 0 0)) (list (list 1 0) (om-make-color 0 0 0)) (list (list 1 0 0) (om-make-color 0 0 0)) (list (list 1 1) (om-make-color 0 0 0)) (list (list 1 1 0) (om-make-color 0 0 0)) (list (list 1 2) (om-make-color 0 0 0)) (list (list 1 2 0) (om-make-color 0 0 0)) (list (list 1 3) (om-make-color 0 0 0)) (list (list 1 3 0) (om-make-color 0 0 0)) (list (list 1 4) (om-make-color 0 0 0)) (list (list 1 4 0) (om-make-color 0 0 0)) (list (list 1 5) (om-make-color 0 0 0)) (list (list 1 5 0) (om-make-color 0 0 0)) (list (list 1 6) (om-make-color 0 0 0)) (list (list 1 6 0) (om-make-color 0 0 0)) (list (list 1 7) (om-make-color 0 0 0)) (list (list 1 7 0) (om-make-color 0 0 0)) (list (list 1 8) (om-make-color 0 0 0)) (list (list 1 8 0) (om-make-color 0 0 0)) (list (list 1 9) (om-make-color 0 0 0)) (list (list 1 9 0) (om-make-color 0 0 0)) (list (list 1 10) (om-make-color 0 0 0)) (list (list 1 10 0) (om-make-color 0 0 0)) (list (list 1 11) (om-make-color 0 0 0)) (list (list 1 11 0) (om-make-color 0 0 0)) (list (list 1 12) (om-make-color 0 0 0)) (list (list 1 12 0) (om-make-color 0 0 0)) (list (list 1 13) (om-make-color 0 0 0)) (list (list 1 13 0) (om-make-color 0 0 0)) (list (list 1 14) (om-make-color 0 0 0)) (list (list 1 14 0) (om-make-color 0 0 0)) (list (list 1 15) (om-make-color 0 0 0)) (list (list 1 15 0) (om-make-color 0 0 0)) (list (list 1 16) (om-make-color 0 0 0)) (list (list 1 16 0) (om-make-color 0 0 0)) (list (list 1 17) (om-make-color 0 0 0)) (list (list 1 17 0) (om-make-color 0 0 0)) (list (list 1 18) (om-make-color 0 0 0)) (list (list 1 18 0) (om-make-color 0 0 0)) (list (list 1 19) (om-make-color 0 0 0)) (list (list 1 19 0) (om-make-color 0 0 0)) (list (list 1 20) (om-make-color 0 0 0)) (list (list 1 20 0) (om-make-color 0 0 0)) (list (list 1 21) (om-make-color 0 0 0)) (list (list 1 21 0) (om-make-color 0 0 0)) (list (list 1 22) (om-make-color 0 0 0)) (list (list 1 22 0) (om-make-color 0 0 0)) (list (list 1 23) (om-make-color 0 0 0)) (list (list 1 23 0) (om-make-color 0 0 0)) (list (list 1 24) (om-make-color 0 0 0)) (list (list 1 24 0) (om-make-color 0 0 0)) (list (list 1 25) (om-make-color 0 0 0)) (list (list 1 25 0) (om-make-color 0 0 0)) (list (list 1 26) (om-make-color 0 0 0)) (list (list 1 26 0) (om-make-color 0 0 0)) (list (list 1 27) (om-make-color 0 0 0)) (list (list 1 27 0) (om-make-color 0 0 0)) (list (list 1 28) (om-make-color 0 0 0)) (list (list 1 28 0) (om-make-color 0 0 0)) (list (list 1 29) (om-make-color 0 0 0)) (list (list 1 29 0) (om-make-color 0 0 0)) (list (list 1 30) (om-make-color 0 0 0)) (list (list 1 30 0) (om-make-color 0 0 0)) (list (list 1 31) (om-make-color 0 0 0)) (list (list 1 31 0) (om-make-color 0 0 0)) (list (list 1 32) (om-make-color 0 0 0)) (list (list 1 32 0) (om-make-color 0 0 0)) (list (list 1 33) (om-make-color 0 0 0)) (list (list 1 33 0) (om-make-color 0 0 0)) (list (list 1 34) (om-make-color 0 0 0)) (list (list 1 34 0) (om-make-color 0 0 0)) (list (list 1 35) (om-make-color 0 0 0)) (list (list 1 35 0) (om-make-color 0 0 0)) (list (list 1 36) (om-make-color 0 0 0)) (list (list 1 36 0) (om-make-color 0 0 0)) (list (list 1 37) (om-make-color 0 0 0)) (list (list 1 37 0) (om-make-color 0 0 0)) (list (list 1 38) (om-make-color 0 0 0)) (list (list 1 38 0) (om-make-color 0 0 0)) (list (list 1 39) (om-make-color 0 0 0)) (list (list 1 39 0) (om-make-color 0 0 0)) (list (list 1 40) (om-make-color 0 0 0)) (list (list 1 40 0) (om-make-color 0 0 0)) (list (list 1 41) (om-make-color 0 0 0)) (list (list 1 41 0) (om-make-color 0 0 0)) (list (list 1 42) (om-make-color 0 0 0)) (list (list 1 42 0) (om-make-color 0 0 0)) (list (list 1 43) (om-make-color 0 0 0)) (list (list 1 43 0) (om-make-color 0 0 0)) (list (list 1 44) (om-make-color 0 0 0)) (list (list 1 44 0) (om-make-color 0 0 0)) (list (list 1 45) (om-make-color 0 0 0)) (list (list 1 45 0) (om-make-color 0 0 0)) (list (list 1 46) (om-make-color 0 0 0)) (list (list 1 46 0) (om-make-color 0 0 0)) (list (list 1 47) (om-make-color 0 0 0)) (list (list 1 47 0) (om-make-color 0 0 0)) (list (list 1 48) (om-make-color 0 0 0)) (list (list 1 48 0) (om-make-color 0 0 0)) (list (list 1 49) (om-make-color 0 0 0)) (list (list 1 49 0) (om-make-color 0 0 0)) (list (list 1 50) (om-make-color 0 0 0)) (list (list 1 50 0) (om-make-color 0 0 0)) (list (list 1 51) (om-make-color 0 0 0)) (list (list 1 51 0) (om-make-color 0 0 0)) (list (list 1 52) (om-make-color 0 0 0)) (list (list 1 52 0) (om-make-color 0 0 0)) (list (list 1 53) (om-make-color 0 0 0)) (list (list 1 53 0) (om-make-color 0 0 0)) (list (list 2) (om-make-color 0 0 0)) (list (list 2 0) (om-make-color 0 0 0)) (list (list 2 0 0) (om-make-color 0 0 0)) (list (list 2 1) (om-make-color 0 0 0)) (list (list 2 1 0) (om-make-color 0 0 0)) (list (list 2 2) (om-make-color 0 0 0)) (list (list 2 2 0) (om-make-color 0 0 0)) (list (list 2 3) (om-make-color 0 0 0)) (list (list 2 3 0) (om-make-color 0 0 0)) (list (list 2 4) (om-make-color 0 0 0)) (list (list 2 4 0) (om-make-color 0 0 0)) (list (list 2 5) (om-make-color 0 0 0)) (list (list 2 5 0) (om-make-color 0 0 0)) (list (list 2 6) (om-make-color 0 0 0)) (list (list 2 6 0) (om-make-color 0 0 0)) (list (list 2 7) (om-make-color 0 0 0)) (list (list 2 7 0) (om-make-color 0 0 0)) (list (list 2 8) (om-make-color 0 0 0)) (list (list 2 8 0) (om-make-color 0 0 0)) (list (list 2 9) (om-make-color 0 0 0)) (list (list 2 9 0) (om-make-color 0 0 0)) (list (list 2 10) (om-make-color 0 0 0)) (list (list 2 10 0) (om-make-color 0 0 0)) (list (list 2 11) (om-make-color 0 0 0)) (list (list 2 11 0) (om-make-color 0 0 0)) (list (list 2 12) (om-make-color 0 0 0)) (list (list 2 12 0) (om-make-color 0 0 0)) (list (list 2 13) (om-make-color 0 0 0)) (list (list 2 13 0) (om-make-color 0 0 0)) (list (list 2 14) (om-make-color 0 0 0)) (list (list 2 14 0) (om-make-color 0 0 0)) (list (list 2 15) (om-make-color 0 0 0)) (list (list 2 15 0) (om-make-color 0 0 0)) (list (list 2 16) (om-make-color 0 0 0)) (list (list 2 16 0) (om-make-color 0 0 0)) (list (list 2 17) (om-make-color 0 0 0)) (list (list 2 17 0) (om-make-color 0 0 0)) (list (list 2 18) (om-make-color 0 0 0)) (list (list 2 18 0) (om-make-color 0 0 0)) (list (list 2 19) (om-make-color 0 0 0)) (list (list 2 19 0) (om-make-color 0 0 0)) (list (list 2 20) (om-make-color 0 0 0)) (list (list 2 20 0) (om-make-color 0 0 0)) (list (list 2 21) (om-make-color 0 0 0)) (list (list 2 21 0) (om-make-color 0 0 0)) (list (list 2 22) (om-make-color 0 0 0)) (list (list 2 22 0) (om-make-color 0 0 0)) (list (list 2 23) (om-make-color 0 0 0)) (list (list 2 23 0) (om-make-color 0 0 0)) (list (list 2 24) (om-make-color 0 0 0)) (list (list 2 24 0) (om-make-color 0 0 0)) (list (list 2 25) (om-make-color 0 0 0)) (list (list 2 25 0) (om-make-color 0 0 0)) (list (list 2 26) (om-make-color 0 0 0)) (list (list 2 26 0) (om-make-color 0 0 0)) (list (list 2 27) (om-make-color 0 0 0)) (list (list 2 27 0) (om-make-color 0 0 0)) (list (list 2 28) (om-make-color 0 0 0)) (list (list 2 28 0) (om-make-color 0 0 0)) (list (list 2 29) (om-make-color 0 0 0)) (list (list 2 29 0) (om-make-color 0 0 0)) (list (list 2 30) (om-make-color 0 0 0)) (list (list 2 30 0) (om-make-color 0 0 0)) (list (list 2 31) (om-make-color 0 0 0)) (list (list 2 31 0) (om-make-color 0 0 0)) (list (list 2 32) (om-make-color 0 0 0)) (list (list 2 32 0) (om-make-color 0 0 0)) (list (list 2 33) (om-make-color 0 0 0)) (list (list 2 33 0) (om-make-color 0 0 0)) (list (list 2 34) (om-make-color 0 0 0)) (list (list 2 34 0) (om-make-color 0 0 0)) (list (list 2 35) (om-make-color 0 0 0)) (list (list 2 35 0) (om-make-color 0 0 0)) (list (list 2 36) (om-make-color 0 0 0)) (list (list 2 36 0) (om-make-color 0 0 0)) (list (list 2 37) (om-make-color 0 0 0)) (list (list 2 37 0) (om-make-color 0 0 0)) (list (list 2 38) (om-make-color 0 0 0)) (list (list 2 38 0) (om-make-color 0 0 0)) (list (list 2 39) (om-make-color 0 0 0)) (list (list 2 39 0) (om-make-color 0 0 0)) (list (list 2 40) (om-make-color 0 0 0)) (list (list 2 40 0) (om-make-color 0 0 0)) (list (list 2 41) (om-make-color 0 0 0)) (list (list 2 41 0) (om-make-color 0 0 0)) (list (list 2 42) (om-make-color 0 0 0)) (list (list 2 42 0) (om-make-color 0 0 0)) (list (list 2 43) (om-make-color 0 0 0)) (list (list 2 43 0) (om-make-color 0 0 0)) (list (list 2 44) (om-make-color 0 0 0)) (list (list 2 44 0) (om-make-color 0 0 0)) (list (list 2 45) (om-make-color 0 0 0)) (list (list 2 45 0) (om-make-color 0 0 0)) (list (list 2 46) (om-make-color 0 0 0)) (list (list 2 46 0) (om-make-color 0 0 0)) (list (list 2 47) (om-make-color 0 0 0)) (list (list 2 47 0) (om-make-color 0 0 0)) (list (list 2 48) (om-make-color 0 0 0)) (list (list 2 48 0) (om-make-color 0 0 0)) (list (list 2 49) (om-make-color 0 0 0)) (list (list 2 49 0) (om-make-color 0 0 0)) (list (list 2 50) (om-make-color 0 0 0)) (list (list 2 50 0) (om-make-color 0 0 0)) (list (list 2 51) (om-make-color 0 0 0)) (list (list 2 51 0) (om-make-color 0 0 0)) (list (list 2 52) (om-make-color 0 0 0)) (list (list 2 52 0) (om-make-color 0 0 0)) (list (list 2 53) (om-make-color 0 0 0)) (list (list 2 53 0) (om-make-color 0 0 0)) (list (list 3) (om-make-color 0 0 0)) (list (list 3 0) (om-make-color 0 0 0)) (list (list 3 0 0) (om-make-color 0 0 0)) (list (list 3 1) (om-make-color 0 0 0)) (list (list 3 1 0) (om-make-color 0 0 0)) (list (list 3 2) (om-make-color 0 0 0)) (list (list 3 2 0) (om-make-color 0 0 0)) (list (list 3 3) (om-make-color 0 0 0)) (list (list 3 3 0) (om-make-color 0 0 0)) (list (list 3 4) (om-make-color 0 0 0)) (list (list 3 4 0) (om-make-color 0 0 0)) (list (list 3 5) (om-make-color 0 0 0)) (list (list 3 5 0) (om-make-color 0 0 0)) (list (list 3 6) (om-make-color 0 0 0)) (list (list 3 6 0) (om-make-color 0 0 0)) (list (list 3 7) (om-make-color 0 0 0)) (list (list 3 7 0) (om-make-color 0 0 0)) (list (list 3 8) (om-make-color 0 0 0)) (list (list 3 8 0) (om-make-color 0 0 0)) (list (list 3 9) (om-make-color 0 0 0)) (list (list 3 9 0) (om-make-color 0 0 0)) (list (list 3 10) (om-make-color 0 0 0)) (list (list 3 10 0) (om-make-color 0 0 0)) (list (list 3 11) (om-make-color 0 0 0)) (list (list 3 11 0) (om-make-color 0 0 0)) (list (list 3 12) (om-make-color 0 0 0)) (list (list 3 12 0) (om-make-color 0 0 0)) (list (list 3 13) (om-make-color 0 0 0)) (list (list 3 13 0) (om-make-color 0 0 0)) (list (list 3 14) (om-make-color 0 0 0)) (list (list 3 14 0) (om-make-color 0 0 0)) (list (list 3 15) (om-make-color 0 0 0)) (list (list 3 15 0) (om-make-color 0 0 0)) (list (list 3 16) (om-make-color 0 0 0)) (list (list 3 16 0) (om-make-color 0 0 0)) (list (list 3 17) (om-make-color 0 0 0)) (list (list 3 17 0) (om-make-color 0 0 0)) (list (list 3 18) (om-make-color 0 0 0)) (list (list 3 18 0) (om-make-color 0 0 0)) (list (list 3 19) (om-make-color 0 0 0)) (list (list 3 19 0) (om-make-color 0 0 0)) (list (list 3 20) (om-make-color 0 0 0)) (list (list 3 20 0) (om-make-color 0 0 0)) (list (list 3 21) (om-make-color 0 0 0)) (list (list 3 21 0) (om-make-color 0 0 0)) (list (list 3 22) (om-make-color 0 0 0)) (list (list 3 22 0) (om-make-color 0 0 0)) (list (list 3 23) (om-make-color 0 0 0)) (list (list 3 23 0) (om-make-color 0 0 0)) (list (list 3 24) (om-make-color 0 0 0)) (list (list 3 24 0) (om-make-color 0 0 0)) (list (list 3 25) (om-make-color 0 0 0)) (list (list 3 25 0) (om-make-color 0 0 0)) (list (list 3 26) (om-make-color 0 0 0)) (list (list 3 26 0) (om-make-color 0 0 0)) (list (list 3 27) (om-make-color 0 0 0)) (list (list 3 27 0) (om-make-color 0 0 0)) (list (list 3 28) (om-make-color 0 0 0)) (list (list 3 28 0) (om-make-color 0 0 0)) (list (list 3 29) (om-make-color 0 0 0)) (list (list 3 29 0) (om-make-color 0 0 0)) (list (list 3 30) (om-make-color 0 0 0)) (list (list 3 30 0) (om-make-color 0 0 0)) (list (list 3 31) (om-make-color 0 0 0)) (list (list 3 31 0) (om-make-color 0 0 0)) (list (list 3 32) (om-make-color 0 0 0)) (list (list 3 32 0) (om-make-color 0 0 0)) (list (list 3 33) (om-make-color 0 0 0)) (list (list 3 33 0) (om-make-color 0 0 0)) (list (list 3 34) (om-make-color 0 0 0)) (list (list 3 34 0) (om-make-color 0 0 0)) (list (list 3 35) (om-make-color 0 0 0)) (list (list 3 35 0) (om-make-color 0 0 0)) (list (list 3 36) (om-make-color 0 0 0)) (list (list 3 36 0) (om-make-color 0 0 0)) (list (list 3 37) (om-make-color 0 0 0)) (list (list 3 37 0) (om-make-color 0 0 0)) (list (list 3 38) (om-make-color 0 0 0)) (list (list 3 38 0) (om-make-color 0 0 0)) (list (list 3 39) (om-make-color 0 0 0)) (list (list 3 39 0) (om-make-color 0 0 0)) (list (list 3 40) (om-make-color 0 0 0)) (list (list 3 40 0) (om-make-color 0 0 0)) (list (list 3 41) (om-make-color 0 0 0)) (list (list 3 41 0) (om-make-color 0 0 0)) (list (list 3 42) (om-make-color 0 0 0)) (list (list 3 42 0) (om-make-color 0 0 0)) (list (list 3 43) (om-make-color 0 0 0)) (list (list 3 43 0) (om-make-color 0 0 0)) (list (list 3 44) (om-make-color 0 0 0)) (list (list 3 44 0) (om-make-color 0 0 0)) (list (list 3 45) (om-make-color 0 0 0)) (list (list 3 45 0) (om-make-color 0 0 0)) (list (list 3 46) (om-make-color 0 0 0)) (list (list 3 46 0) (om-make-color 0 0 0)) (list (list 3 47) (om-make-color 0 0 0)) (list (list 3 47 0) (om-make-color 0 0 0)) (list (list 3 48) (om-make-color 0 0 0)) (list (list 3 48 0) (om-make-color 0 0 0)) (list (list 3 49) (om-make-color 0 0 0)) (list (list 3 49 0) (om-make-color 0 0 0)) (list (list 3 50) (om-make-color 0 0 0)) (list (list 3 50 0) (om-make-color 0 0 0)) (list (list 3 51) (om-make-color 0 0 0)) (list (list 3 51 0) (om-make-color 0 0 0)) (list (list 3 52) (om-make-color 0 0 0)) (list (list 3 52 0) (om-make-color 0 0 0)) (list (list 3 53) (om-make-color 0 0 0)) (list (list 3 53 0) (om-make-color 0 0 0)) (list (list 4) (om-make-color 0 0 0)) (list (list 4 0) (om-make-color 0 0 0)) (list (list 4 0 0) (om-make-color 0 0 0)) (list (list 4 1) (om-make-color 0 0 0)) (list (list 4 1 0) (om-make-color 0 0 0)) (list (list 4 2) (om-make-color 0 0 0)) (list (list 4 2 0) (om-make-color 0 0 0)) (list (list 4 3) (om-make-color 0 0 0)) (list (list 4 3 0) (om-make-color 0 0 0)) (list (list 4 4) (om-make-color 0 0 0)) (list (list 4 4 0) (om-make-color 0 0 0)) (list (list 4 5) (om-make-color 0 0 0)) (list (list 4 5 0) (om-make-color 0 0 0)) (list (list 4 6) (om-make-color 0 0 0)) (list (list 4 6 0) (om-make-color 0 0 0)) (list (list 4 7) (om-make-color 0 0 0)) (list (list 4 7 0) (om-make-color 0 0 0)) (list (list 4 8) (om-make-color 0 0 0)) (list (list 4 8 0) (om-make-color 0 0 0)) (list (list 4 9) (om-make-color 0 0 0)) (list (list 4 9 0) (om-make-color 0 0 0)) (list (list 4 10) (om-make-color 0 0 0)) (list (list 4 10 0) (om-make-color 0 0 0)) (list (list 4 11) (om-make-color 0 0 0)) (list (list 4 11 0) (om-make-color 0 0 0)) (list (list 4 12) (om-make-color 0 0 0)) (list (list 4 12 0) (om-make-color 0 0 0)) (list (list 4 13) (om-make-color 0 0 0)) (list (list 4 13 0) (om-make-color 0 0 0)) (list (list 4 14) (om-make-color 0 0 0)) (list (list 4 14 0) (om-make-color 0 0 0)) (list (list 4 15) (om-make-color 0 0 0)) (list (list 4 15 0) (om-make-color 0 0 0)) (list (list 4 16) (om-make-color 0 0 0)) (list (list 4 16 0) (om-make-color 0 0 0)) (list (list 4 17) (om-make-color 0 0 0)) (list (list 4 17 0) (om-make-color 0 0 0)) (list (list 4 18) (om-make-color 0 0 0)) (list (list 4 18 0) (om-make-color 0 0 0)) (list (list 4 19) (om-make-color 0 0 0)) (list (list 4 19 0) (om-make-color 0 0 0)) (list (list 4 20) (om-make-color 0 0 0)) (list (list 4 20 0) (om-make-color 0 0 0)) (list (list 4 21) (om-make-color 0 0 0)) (list (list 4 21 0) (om-make-color 0 0 0)) (list (list 4 22) (om-make-color 0 0 0)) (list (list 4 22 0) (om-make-color 0 0 0)) (list (list 4 23) (om-make-color 0 0 0)) (list (list 4 23 0) (om-make-color 0 0 0)) (list (list 4 24) (om-make-color 0 0 0)) (list (list 4 24 0) (om-make-color 0 0 0)) (list (list 4 25) (om-make-color 0 0 0)) (list (list 4 25 0) (om-make-color 0 0 0)) (list (list 4 26) (om-make-color 0 0 0)) (list (list 4 26 0) (om-make-color 0 0 0)) (list (list 4 27) (om-make-color 0 0 0)) (list (list 4 27 0) (om-make-color 0 0 0)) (list (list 4 28) (om-make-color 0 0 0)) (list (list 4 28 0) (om-make-color 0 0 0)) (list (list 4 29) (om-make-color 0 0 0)) (list (list 4 29 0) (om-make-color 0 0 0)) (list (list 4 30) (om-make-color 0 0 0)) (list (list 4 30 0) (om-make-color 0 0 0)) (list (list 4 31) (om-make-color 0 0 0)) (list (list 4 31 0) (om-make-color 0 0 0)) (list (list 4 32) (om-make-color 0 0 0)) (list (list 4 32 0) (om-make-color 0 0 0)) (list (list 4 33) (om-make-color 0 0 0)) (list (list 4 33 0) (om-make-color 0 0 0)) (list (list 4 34) (om-make-color 0 0 0)) (list (list 4 34 0) (om-make-color 0 0 0)) (list (list 4 35) (om-make-color 0 0 0)) (list (list 4 35 0) (om-make-color 0 0 0)) (list (list 4 36) (om-make-color 0 0 0)) (list (list 4 36 0) (om-make-color 0 0 0)) (list (list 4 37) (om-make-color 0 0 0)) (list (list 4 37 0) (om-make-color 0 0 0)) (list (list 4 38) (om-make-color 0 0 0)) (list (list 4 38 0) (om-make-color 0 0 0)) (list (list 4 39) (om-make-color 0 0 0)) (list (list 4 39 0) (om-make-color 0 0 0)) (list (list 4 40) (om-make-color 0 0 0)) (list (list 4 40 0) (om-make-color 0 0 0)) (list (list 4 41) (om-make-color 0 0 0)) (list (list 4 41 0) (om-make-color 0 0 0)) (list (list 4 42) (om-make-color 0 0 0)) (list (list 4 42 0) (om-make-color 0 0 0)) (list (list 4 43) (om-make-color 0 0 0)) (list (list 4 43 0) (om-make-color 0 0 0)) (list (list 4 44) (om-make-color 0 0 0)) (list (list 4 44 0) (om-make-color 0 0 0)) (list (list 4 45) (om-make-color 0 0 0)) (list (list 4 45 0) (om-make-color 0 0 0)) (list (list 4 46) (om-make-color 0 0 0)) (list (list 4 46 0) (om-make-color 0 0 0)) (list (list 4 47) (om-make-color 0 0 0)) (list (list 4 47 0) (om-make-color 0 0 0)) (list (list 4 48) (om-make-color 0 0 0)) (list (list 4 48 0) (om-make-color 0 0 0)) (list (list 4 49) (om-make-color 0 0 0)) (list (list 4 49 0) (om-make-color 0 0 0)) (list (list 4 50) (om-make-color 0 0 0)) (list (list 4 50 0) (om-make-color 0 0 0)) (list (list 4 51) (om-make-color 0 0 0)) (list (list 4 51 0) (om-make-color 0 0 0)) (list (list 4 52) (om-make-color 0 0 0)) (list (list 4 52 0) (om-make-color 0 0 0)) (list (list 4 53) (om-make-color 0 0 0)) (list (list 4 53 0) (om-make-color 0 0 0)) (list (list 5) (om-make-color 0 0 0)) (list (list 5 0) (om-make-color 0 0 0)) (list (list 5 0 0) (om-make-color 0 0 0)) (list (list 5 1) (om-make-color 0 0 0)) (list (list 5 1 0) (om-make-color 0 0 0)) (list (list 5 2) (om-make-color 0 0 0)) (list (list 5 2 0) (om-make-color 0 0 0)) (list (list 5 3) (om-make-color 0 0 0)) (list (list 5 3 0) (om-make-color 0 0 0)) (list (list 5 4) (om-make-color 0 0 0)) (list (list 5 4 0) (om-make-color 0 0 0)) (list (list 5 5) (om-make-color 0 0 0)) (list (list 5 5 0) (om-make-color 0 0 0)) (list (list 5 6) (om-make-color 0 0 0)) (list (list 5 6 0) (om-make-color 0 0 0)) (list (list 5 7) (om-make-color 0 0 0)) (list (list 5 7 0) (om-make-color 0 0 0)) (list (list 5 8) (om-make-color 0 0 0)) (list (list 5 8 0) (om-make-color 0 0 0)) (list (list 5 9) (om-make-color 0 0 0)) (list (list 5 9 0) (om-make-color 0 0 0)) (list (list 5 10) (om-make-color 0 0 0)) (list (list 5 10 0) (om-make-color 0 0 0)) (list (list 5 11) (om-make-color 0 0 0)) (list (list 5 11 0) (om-make-color 0 0 0)) (list (list 5 12) (om-make-color 0 0 0)) (list (list 5 12 0) (om-make-color 0 0 0)) (list (list 5 13) (om-make-color 0 0 0)) (list (list 5 13 0) (om-make-color 0 0 0)) (list (list 5 14) (om-make-color 0 0 0)) (list (list 5 14 0) (om-make-color 0 0 0)) (list (list 5 15) (om-make-color 0 0 0)) (list (list 5 15 0) (om-make-color 0 0 0)) (list (list 5 16) (om-make-color 0 0 0)) (list (list 5 16 0) (om-make-color 0 0 0)) (list (list 5 17) (om-make-color 0 0 0)) (list (list 5 17 0) (om-make-color 0 0 0)) (list (list 5 18) (om-make-color 0 0 0)) (list (list 5 18 0) (om-make-color 0 0 0)) (list (list 5 19) (om-make-color 0 0 0)) (list (list 5 19 0) (om-make-color 0 0 0)) (list (list 5 20) (om-make-color 0 0 0)) (list (list 5 20 0) (om-make-color 0 0 0)) (list (list 5 21) (om-make-color 0 0 0)) (list (list 5 21 0) (om-make-color 0 0 0)) (list (list 5 22) (om-make-color 0 0 0)) (list (list 5 22 0) (om-make-color 0 0 0)) (list (list 5 23) (om-make-color 0 0 0)) (list (list 5 23 0) (om-make-color 0 0 0)) (list (list 5 24) (om-make-color 0 0 0)) (list (list 5 24 0) (om-make-color 0 0 0)) (list (list 5 25) (om-make-color 0 0 0)) (list (list 5 25 0) (om-make-color 0 0 0)) (list (list 5 26) (om-make-color 0 0 0)) (list (list 5 26 0) (om-make-color 0 0 0)) (list (list 5 27) (om-make-color 0 0 0)) (list (list 5 27 0) (om-make-color 0 0 0)) (list (list 5 28) (om-make-color 0 0 0)) (list (list 5 28 0) (om-make-color 0 0 0)) (list (list 5 29) (om-make-color 0 0 0)) (list (list 5 29 0) (om-make-color 0 0 0)) (list (list 5 30) (om-make-color 0 0 0)) (list (list 5 30 0) (om-make-color 0 0 0)) (list (list 5 31) (om-make-color 0 0 0)) (list (list 5 31 0) (om-make-color 0 0 0)) (list (list 5 32) (om-make-color 0 0 0)) (list (list 5 32 0) (om-make-color 0 0 0)) (list (list 5 33) (om-make-color 0 0 0)) (list (list 5 33 0) (om-make-color 0 0 0)) (list (list 5 34) (om-make-color 0 0 0)) (list (list 5 34 0) (om-make-color 0 0 0)) (list (list 5 35) (om-make-color 0 0 0)) (list (list 5 35 0) (om-make-color 0 0 0)) (list (list 5 36) (om-make-color 0 0 0)) (list (list 5 36 0) (om-make-color 0 0 0)) (list (list 5 37) (om-make-color 0 0 0)) (list (list 5 37 0) (om-make-color 0 0 0)) (list (list 5 38) (om-make-color 0 0 0)) (list (list 5 38 0) (om-make-color 0 0 0)) (list (list 5 39) (om-make-color 0 0 0)) (list (list 5 39 0) (om-make-color 0 0 0)) (list (list 5 40) (om-make-color 0 0 0)) (list (list 5 40 0) (om-make-color 0 0 0)) (list (list 5 41) (om-make-color 0 0 0)) (list (list 5 41 0) (om-make-color 0 0 0)) (list (list 5 42) (om-make-color 0 0 0)) (list (list 5 42 0) (om-make-color 0 0 0)) (list (list 5 43) (om-make-color 0 0 0)) (list (list 5 43 0) (om-make-color 0 0 0)) (list (list 5 44) (om-make-color 0 0 0)) (list (list 5 44 0) (om-make-color 0 0 0)) (list (list 5 45) (om-make-color 0 0 0)) (list (list 5 45 0) (om-make-color 0 0 0)) (list (list 5 46) (om-make-color 0 0 0)) (list (list 5 46 0) (om-make-color 0 0 0)) (list (list 5 47) (om-make-color 0 0 0)) (list (list 5 47 0) (om-make-color 0 0 0)) (list (list 5 48) (om-make-color 0 0 0)) (list (list 5 48 0) (om-make-color 0 0 0)) (list (list 5 49) (om-make-color 0 0 0)) (list (list 5 49 0) (om-make-color 0 0 0)) (list (list 5 50) (om-make-color 0 0 0)) (list (list 5 50 0) (om-make-color 0 0 0)) (list (list 5 51) (om-make-color 0 0 0)) (list (list 5 51 0) (om-make-color 0 0 0)) (list (list 5 52) (om-make-color 0 0 0)) (list (list 5 52 0) (om-make-color 0 0 0)) (list (list 5 53) (om-make-color 0 0 0)) (list (list 5 53 0) (om-make-color 0 0 0)))) (set-extra-pairs newobj 'nil) (set-patch-pairs newobj '((nil (om-load-patch-abs1 "patch" 'nil 'nil 5.0 nil)))) (set-tonalite newobj nil) newobj)) nil nil (corrige (pairlis '(show-stems approx fontsize staff cmnpref deltapict outport inport zoom notechancolor? grillestep mode winsize winpos palette-mode obj-mode) (list 't 2 24 (list 'g 'g 'g 'g 'g 'g) (let ((newobj (make-instance 'edition-values))) (setf (paper-size newobj) (om-make-point 600 800)) (setf (top-margin newobj) 2) (setf (left-margin newobj) 1) (setf (right-margin newobj) 1) (setf (bottom-margin newobj) 1) (setf (orientation newobj) nil) (setf (scale newobj) nil) (setf (system-space newobj) '(1 1 1 1 1 1)) (setf (line-space newobj) 1) (setf (title newobj) nil) (setf (show-title? newobj) nil) (setf (show-page? newobj) nil) (setf (sheet-id newobj) nil) (setf (page-mode newobj) nil) newobj) (om-make-point 0 0) 1 1 133/100 nil 150 0 18350450 2621450 0 0))) nil nil nil) (om-load-editor-box1 "N-CERCLE" 'n-cercle '((om-load-inputfun 'input-funbox "objs" "SELF" nil) (om-load-inputfun 'input-funbox "no documentation" "N" 108) (om-load-inputfun 'input-funbox "no documentation" "PUNTOS" (list 57 12 12 3 12 12))) (om-make-point 523 207) (om-make-point 131 163) (if (find-class 'n-cercle nil) (make-instance 'n-cercle :n 108 :puntos (list (list 0 57 69 81 84 96)) :from-file t)) nil nil (corrige (pairlis '(winpos winsize mode grillestep notechancolor? cmnpref zoom inport outport deltapict palette-mode obj-mode show-stems) (list 2621450 18350450 0 1000 nil (let ((newobj (make-instance 'edition-values))) (setf (paper-size newobj) (om-make-point 600 800)) (setf (top-margin newobj) 2) (setf (left-margin newobj) 1) (setf (right-margin newobj) 1) (setf (bottom-margin newobj) 1) (setf (orientation newobj) nil) (setf (scale newobj) nil) (setf (system-space newobj) '(1)) (setf (line-space newobj) 1) (setf (title newobj) nil) (setf (show-title? newobj) nil) (setf (show-page? newobj) nil) (setf (sheet-id newobj) nil) (setf (page-mode newobj) nil) newobj) 1 0 0 (om-make-point 0 0) 0 0 't))) t nil nil) (om-load-boxcall 'genfun "ROTATE" 'rotate '((om-load-inputfun 'input-funbox "the list" "LIST" nil) (om-load-inputfun 'input-funbox "nth" "NTH" 1)) (om-make-point 968 67) nil nil nil nil 1) (om-load-boxcall 'lispfun "REVERSE" 'reverse '((om-load-inputfun 'input-funbox "SEQUENCE" "SEQUENCE" nil)) (om-make-point 899 76) nil nil nil nil 1) (om-load-editor-box1 "N-CERCLE" 'n-cercle '((om-load-inputfun 'input-funbox "objs" "SELF" nil) (om-load-inputfun 'input-funbox "no documentation" "N" 108) (om-load-inputfun 'input-funbox "no documentation" "PUNTOS" (list 0 5 7))) (om-make-point 313 511) (om-make-point 223 170) (if (find-class 'n-cercle nil) (make-instance 'n-cercle :n 108 :puntos (list (list 0 57 69 81 84 96) (list 30 87 99 3 6 18) (list 34 91 103 7 10 22) (list 35 92 104 8 11 23) (list 36 93 105 9 12 24) (list 43 100 4 16 19 31) (list 44 101 5 17 20 32) (list 52 1 13 25 28 40) (list 53 2 14 26 29 41) (list 66 15 27 39 42 54) (list 72 21 33 45 48 60) (list 88 37 49 61 64 76) (list 89 38 50 62 65 77) (list 97 46 58 70 73 85) (list 98 47 59 71 74 86) (list 102 51 63 75 78 90) (list 106 55 67 79 82 94) (list 107 56 68 80 83 95)) :from-file t)) nil nil (corrige (pairlis '(obj-mode palette-mode winpos winsize mode grillestep notechancolor? cmnpref zoom inport outport deltapict show-stems) (list 0 0 2621450 18350450 0 1000 nil (let ((newobj (make-instance 'edition-values))) (setf (paper-size newobj) (om-make-point 600 800)) (setf (top-margin newobj) 2) (setf (left-margin newobj) 1) (setf (right-margin newobj) 1) (setf (bottom-margin newobj) 1) (setf (orientation newobj) nil) (setf (scale newobj) nil) (setf (system-space newobj) '(1)) (setf (line-space newobj) 1) (setf (title newobj) nil) (setf (show-title? newobj) nil) (setf (show-page? newobj) nil) (setf (sheet-id newobj) nil) (setf (page-mode newobj) nil) newobj) 1 0 0 (om-make-point 0 0) 't))) t nil nil) (om-load-boxcomment "comment" (om-make-point 36 40) '"S" "" (om-make-point 573 57) nil (om-make-color 116/255 4/51 7/51) (om-make-font "Geneva" 24 :family nil :style 'nil :mode nil)) (om-load-boxcomment "comment" (om-make-point 36 40) '"R" "" (om-make-point 424 60) nil (om-make-color 46/255 62/255 43/85) (om-make-font "Geneva" 24 :family nil :style 'nil :mode nil)) (om-load-boxcall 'lispfun "CAR" 'car '((om-load-inputfun 'input-funbox "LIST" "LIST" nil)) (om-make-point 1080 218) nil nil nil nil 1) (om-load-boxcall 'bastype "aux6" 't 'nil (om-make-point 940 216) (om-make-point 32 20) 6000 "6000" nil) (om-load-boxcall 'bastype "aux5" 't 'nil (om-make-point 974 171) (om-make-point 20 20) 100 "100" nil) (om-load-boxcall 'genfun "OM*" 'om* '((om-load-inputfun 'input-funbox "first input" "SELF" 0) (om-load-inputfun 'input-funbox "second input" "NUM" 0)) (om-make-point 1025 200) nil nil nil nil 1) (om-load-boxcall 'genfun "OM+" 'om+ '((om-load-inputfun 'input-funbox "first input" "SELF" 0) (om-load-inputfun 'input-funbox "second input" "NUM" 0)) (om-make-point 979 238) nil nil nil nil 1) (om-load-boxcall 'bastype "aux2" 't 'nil (om-make-point 1026 97) (om-make-point 149 20) (list 0 1 2 3 4 5 6 7 8 9 10 11) "(0 1 2 3 4 5 6 7 8 9 10 11)" nil) (om-load-editor-box1 "N-CERCLE1" 'n-cercle '((om-load-inputfun 'input-funbox "objs" "SELF" nil) (om-load-inputfun 'input-funbox "no documentation" "N" 12) (om-load-inputfun 'input-funbox "no documentation" "PUNTOS" (list 0 1 2 3 4 5 6 7 8 9 10 11))) (om-make-point 1082 134) (om-make-point 59 66) (if (find-class 'n-cercle nil) (make-instance 'n-cercle :n 12 :puntos (list (list 0 1 2 3 4 5 6 7 8 9 10 11)) :from-file t)) nil nil (corrige (pairlis '(show-stems deltapict outport inport zoom palette-mode obj-mode cmnpref notechancolor? grillestep mode winsize winpos) (list 't (om-make-point 0 0) 0 0 1 0 0 (let ((newobj (make-instance 'edition-values))) (setf (paper-size newobj) (om-make-point 600 800)) (setf (top-margin newobj) 2) (setf (left-margin newobj) 1) (setf (right-margin newobj) 1) (setf (bottom-margin newobj) 1) (setf (orientation newobj) nil) (setf (scale newobj) nil) (setf (system-space newobj) '(1)) (setf (line-space newobj) 1) (setf (title newobj) nil) (setf (show-title? newobj) nil) (setf (show-page? newobj) nil) (setf (sheet-id newobj) nil) (setf (page-mode newobj) nil) newobj) nil 1000 0 18350450 2621450))) t nil nil) (om-load-boxcall 'bastype "aux1" 't 'nil (om-make-point 817 226) (om-make-point 20 20) 3 "3" nil) (om-load-editor-box1 "CHORD-SEQ" 'chord-seq '((om-load-inputfun 'input-funbox "objs" "SELF" nil) (om-load-inputfun 'input-funbox "no documentation" "LMIDIC" (list 6000)) (om-load-inputfun 'input-funbox "no documentation" "LONSET" (list 0 1000)) (om-load-inputfun 'input-funbox "no documentation" "LDUR" (list 1000)) (om-load-inputfun 'input-funbox "no documentation" "LVEL" (list 100)) (om-load-inputfun 'input-funbox "no documentation" "LOFFSET" (list 0)) (om-load-inputfun 'input-funbox "no documentation" "LCHAN" (list 1)) (om-load-inputfun 'input-funbox "no documentation" "LEGATO" 0)) (om-make-point 881 280) (om-make-point 298 92) (let ((newobj (when (find-class 'chord-seq nil) (make-instance 'chord-seq :lmidic '((6000) (6100) (6200) (6300) (6400) (6500) (6600) (6700) (6800) (6900) (7000) (7100)) :lonset '(0 1000 2000 3000 4000 5000 6000 7000 8000 9000 10000 11000 12000) :ldur '((1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000)) :lvel '((100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100)) :loffset '((0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0)) :lchan '((1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1)) :legato 0)))) (load-port-info newobj '((0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0))) (init-mus-color newobj (list (list nil (om-make-color 0 0 0)) (list (list 0) (om-make-color 0 0 0)) (list (list 0 0) (om-make-color 0 0 0)) (list (list 1) (om-make-color 0 0 0)) (list (list 1 0) (om-make-color 0 0 0)) (list (list 2) (om-make-color 0 0 0)) (list (list 2 0) (om-make-color 0 0 0)) (list (list 3) (om-make-color 0 0 0)) (list (list 3 0) (om-make-color 0 0 0)) (list (list 4) (om-make-color 0 0 0)) (list (list 4 0) (om-make-color 0 0 0)) (list (list 5) (om-make-color 0 0 0)) (list (list 5 0) (om-make-color 0 0 0)) (list (list 6) (om-make-color 0 0 0)) (list (list 6 0) (om-make-color 0 0 0)) (list (list 7) (om-make-color 0 0 0)) (list (list 7 0) (om-make-color 0 0 0)) (list (list 8) (om-make-color 0 0 0)) (list (list 8 0) (om-make-color 0 0 0)) (list (list 9) (om-make-color 0 0 0)) (list (list 9 0) (om-make-color 0 0 0)) (list (list 10) (om-make-color 0 0 0)) (list (list 10 0) (om-make-color 0 0 0)) (list (list 11) (om-make-color 0 0 0)) (list (list 11 0) (om-make-color 0 0 0)))) (set-extra-pairs newobj 'nil) (set-patch-pairs newobj 'nil) (set-tonalite newobj nil) newobj) nil nil (corrige (pairlis '(show-stems obj-mode palette-mode winpos winsize mode grillestep notechancolor? zoom inport outport deltapict cmnpref staff fontsize approx) (list 't 0 0 2621450 18350450 0 1000 nil 1 0 0 (om-make-point 0 0) (let ((newobj (make-instance 'edition-values))) (setf (paper-size newobj) (om-make-point 600 800)) (setf (top-margin newobj) 2) (setf (left-margin newobj) 1) (setf (right-margin newobj) 1) (setf (bottom-margin newobj) 1) (setf (orientation newobj) nil) (setf (scale newobj) nil) (setf (system-space newobj) '(1)) (setf (line-space newobj) 1) (setf (title newobj) nil) (setf (show-title? newobj) nil) (setf (show-page? newobj) nil) (setf (sheet-id newobj) nil) (setf (page-mode newobj) nil) newobj) 'g 24 2))) t nil nil) (om-load-boxcall 'patch-box "set-serie" '("elements" "mathTools" "tools" "set-serie") '((om-load-inputfun 'input-funbox "no documentation" "multi" nil) (om-load-inputfun 'input-funbox "no documentation" "serie" nil) (om-load-inputfun 'input-funbox "no documentation" "times" 4)) (om-make-point 748 360) nil nil nil nil 1) (om-load-editor-box1 "MULTI-SEQ1" 'multi-seq '((om-load-inputfun 'input-funbox "objs" "SELF" nil) (om-load-inputfun 'input-funbox "no documentation" "CHORD-SEQS" (list (let ((newobj (when (find-class 'chord-seq nil) (make-instance 'chord-seq :lmidic '((6000)) :lonset '(0 1000) :ldur '((1000)) :lvel '((100)) :loffset '((0)) :lchan '((1)) :legato 0)))) (load-port-info newobj '((0))) (init-mus-color newobj (list (list nil (om-make-color 0 0 0)) (list (list 0) (om-make-color 0 0 0)) (list (list 0 0) (om-make-color 0 0 0)))) (set-extra-pairs newobj 'nil) (set-patch-pairs newobj 'nil) (set-tonalite newobj nil) newobj)))) (om-make-point 614 429) (om-make-point 189 221) (if (find-class 'multi-seq nil) (let ((newobj (make-instance 'multi-seq :chord-seqs (list (let ((newobj (when (find-class 'chord-seq nil) (make-instance 'chord-seq :lmidic '((6000) (6100) (6200) (6300) (6400) (6500) (6600) (6700) (6800) (6900) (7000) (7100) (6000) (6100) (6200) (6300) (6400) (6500) (6600) (6700) (6800) (6900) (7000) (7100) (6000) (6100) (6200) (6300) (6400) (6500) (6600) (6700) (6800) (6900) (7000) (7100) (6000) (6100) (6200) (6300) (6400) (6500) (6600) (6700) (6800) (6900) (7000) (7100)) :lonset '(0 11400 13800 16200 16800 19200 21600 33000 35400 37800 38400 40800 43200 54600 57000 59400 60000 62400 86200 110000 133800 157600 181400 205200 229000 252800 276600 300400 324200 348000 371800 395600 419400 443200 467000 490800 514600 538400 562200 586000 609800 633600 657400 681200 705000 728800 752600 776400 800200) :ldur '((1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000)) :lvel '((100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100)) :loffset '((0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0)) :lchan '((1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1)) :legato 0)))) (load-port-info newobj '((0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0))) (init-mus-color newobj nil) (set-extra-pairs newobj 'nil) (set-patch-pairs newobj 'nil) (set-tonalite newobj nil) newobj) (let ((newobj (when (find-class 'chord-seq nil) (make-instance 'chord-seq :lmidic '((6000) (6100) (6200) (6300) (6400) (6500) (6600) (6700) (6800) (6900) (7000) (7100) (6000) (6100) (6200) (6300) (6400) (6500) (6600) (6700) (6800) (6900) (7000) (7100) (6000) (6100) (6200) (6300) (6400) (6500) (6600) (6700) (6800) (6900) (7000) (7100) (6000) (6100) (6200) (6300) (6400) (6500) (6600) (6700) (6800) (6900) (7000) (7100)) :lonset '(6000 17400 19800 22200 22800 25200 27600 39000 41400 43800 44400 46800 49200 60600 63000 65400 66000 68400 86200 104000 121800 139600 157400 175200 193000 210800 228600 246400 264200 282000 299800 317600 335400 353200 371000 388800 406600 424400 442200 460000 477800 495600 513400 531200 549000 566800 584600 602400 800200) :ldur '((1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000)) :lvel '((100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100)) :loffset '((0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0)) :lchan '((2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2) (2)) :legato 0)))) (load-port-info newobj '((0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0))) (init-mus-color newobj nil) (set-extra-pairs newobj 'nil) (set-patch-pairs newobj 'nil) (set-tonalite newobj nil) newobj) (let ((newobj (when (find-class 'chord-seq nil) (make-instance 'chord-seq :lmidic '((6000) (6100) (6200) (6300) (6400) (6500) (6600) (6700) (6800) (6900) (7000) (7100) (6000) (6100) (6200) (6300) (6400) (6500) (6600) (6700) (6800) (6900) (7000) (7100) (6000) (6100) (6200) (6300) (6400) (6500) (6600) (6700) (6800) (6900) (7000) (7100) (6000) (6100) (6200) (6300) (6400) (6500) (6600) (6700) (6800) (6900) (7000) (7100)) :lonset '(6800 18200 20600 23000 23600 26000 28400 39800 42200 44600 45200 47600 50000 61400 63800 66200 66800 69200 86200 103200 120200 137200 154200 171200 188200 205200 222200 239200 256200 273200 290200 307200 324200 341200 358200 375200 392200 409200 426200 443200 460200 477200 494200 511200 528200 545200 562200 579200 800200) :ldur '((1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000)) :lvel '((100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100)) :loffset '((0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0)) :lchan '((3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3)) :legato 0)))) (load-port-info newobj '((0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0))) (init-mus-color newobj nil) (set-extra-pairs newobj 'nil) (set-patch-pairs newobj 'nil) (set-tonalite newobj nil) newobj) (let ((newobj (when (find-class 'chord-seq nil) (make-instance 'chord-seq :lmidic '((6000) (6100) (6200) (6300) (6400) (6500) (6600) (6700) (6800) (6900) (7000) (7100) (6000) (6100) (6200) (6300) (6400) (6500) (6600) (6700) (6800) (6900) (7000) (7100) (6000) (6100) (6200) (6300) (6400) (6500) (6600) (6700) (6800) (6900) (7000) (7100) (6000) (6100) (6200) (6300) (6400) (6500) (6600) (6700) (6800) (6900) (7000) (7100)) :lonset '(7000 18400 20800 23200 23800 26200 28600 40000 42400 44800 45400 47800 50200 61600 64000 66400 67000 69400 86200 103000 119800 136600 153400 170200 187000 203800 220600 237400 254200 271000 287800 304600 321400 338200 355000 371800 388600 405400 422200 439000 455800 472600 489400 506200 523000 539800 556600 573400 800200) :ldur '((1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000)) :lvel '((100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100)) :loffset '((0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0)) :lchan '((4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4) (4)) :legato 0)))) (load-port-info newobj '((0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0))) (init-mus-color newobj nil) (set-extra-pairs newobj 'nil) (set-patch-pairs newobj 'nil) (set-tonalite newobj nil) newobj) (let ((newobj (when (find-class 'chord-seq nil) (make-instance 'chord-seq :lmidic '((6000) (6100) (6200) (6300) (6400) (6500) (6600) (6700) (6800) (6900) (7000) (7100) (6000) (6100) (6200) (6300) (6400) (6500) (6600) (6700) (6800) (6900) (7000) (7100) (6000) (6100) (6200) (6300) (6400) (6500) (6600) (6700) (6800) (6900) (7000) (7100) (6000) (6100) (6200) (6300) (6400) (6500) (6600) (6700) (6800) (6900) (7000) (7100)) :lonset '(7200 18600 21000 23400 24000 26400 28800 40200 42600 45000 45600 48000 50400 61800 64200 66600 67200 69600 86200 102800 119400 136000 152600 169200 185800 202400 219000 235600 252200 268800 285400 302000 318600 335200 351800 368400 385000 401600 418200 434800 451400 468000 484600 501200 517800 534400 551000 567600 800200) :ldur '((1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000)) :lvel '((100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100)) :loffset '((0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0)) :lchan '((5) (5) (5) (5) (5) (5) (5) (5) (5) (5) (5) (5) (5) (5) (5) (5) (5) (5) (5) (5) (5) (5) (5) (5) (5) (5) (5) (5) (5) (5) (5) (5) (5) (5) (5) (5) (5) (5) (5) (5) (5) (5) (5) (5) (5) (5) (5) (5)) :legato 0)))) (load-port-info newobj '((0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0))) (init-mus-color newobj nil) (set-extra-pairs newobj 'nil) (set-patch-pairs newobj 'nil) (set-tonalite newobj nil) newobj) (let ((newobj (when (find-class 'chord-seq nil) (make-instance 'chord-seq :lmidic '((6000) (6100) (6200) (6300) (6400) (6500) (6600) (6700) (6800) (6900) (7000) (7100) (6000) (6100) (6200) (6300) (6400) (6500) (6600) (6700) (6800) (6900) (7000) (7100) (6000) (6100) (6200) (6300) (6400) (6500) (6600) (6700) (6800) (6900) (7000) (7100) (6000) (6100) (6200) (6300) (6400) (6500) (6600) (6700) (6800) (6900) (7000) (7100)) :lonset '(8600 20000 22400 24800 25400 27800 30200 41600 44000 46400 47000 49400 51800 63200 65600 68000 68600 71000 86200 101400 116600 131800 147000 162200 177400 192600 207800 223000 238200 253400 268600 283800 299000 314200 329400 344600 359800 375000 390200 405400 420600 435800 451000 466200 481400 496600 511800 527000 800200) :ldur '((1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000)) :lvel '((100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100)) :loffset '((0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0)) :lchan '((6) (6) (6) (6) (6) (6) (6) (6) (6) (6) (6) (6) (6) (6) (6) (6) (6) (6) (6) (6) (6) (6) (6) (6) (6) (6) (6) (6) (6) (6) (6) (6) (6) (6) (6) (6) (6) (6) (6) (6) (6) (6) (6) (6) (6) (6) (6) (6)) :legato 0)))) (load-port-info newobj '((0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0))) (init-mus-color newobj nil) (set-extra-pairs newobj 'nil) (set-patch-pairs newobj 'nil) (set-tonalite newobj nil) newobj) (let ((newobj (when (find-class 'chord-seq nil) (make-instance 'chord-seq :lmidic '((6000) (6100) (6200) (6300) (6400) (6500) (6600) (6700) (6800) (6900) (7000) (7100) (6000) (6100) (6200) (6300) (6400) (6500) (6600) (6700) (6800) (6900) (7000) (7100) (6000) (6100) (6200) (6300) (6400) (6500) (6600) (6700) (6800) (6900) (7000) (7100) (6000) (6100) (6200) (6300) (6400) (6500) (6600) (6700) (6800) (6900) (7000) (7100)) :lonset '(8800 20200 22600 25000 25600 28000 30400 41800 44200 46600 47200 49600 52000 63400 65800 68200 68800 71200 86200 101200 116200 131200 146200 161200 176200 191200 206200 221200 236200 251200 266200 281200 296200 311200 326200 341200 356200 371200 386200 401200 416200 431200 446200 461200 476200 491200 506200 521200 800200) :ldur '((1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000)) :lvel '((100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100)) :loffset '((0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0)) :lchan '((7) (7) (7) (7) (7) (7) (7) (7) (7) (7) (7) (7) (7) (7) (7) (7) (7) (7) (7) (7) (7) (7) (7) (7) (7) (7) (7) (7) (7) (7) (7) (7) (7) (7) (7) (7) (7) (7) (7) (7) (7) (7) (7) (7) (7) (7) (7) (7)) :legato 0)))) (load-port-info newobj '((0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0))) (init-mus-color newobj nil) (set-extra-pairs newobj 'nil) (set-patch-pairs newobj 'nil) (set-tonalite newobj nil) newobj) (let ((newobj (when (find-class 'chord-seq nil) (make-instance 'chord-seq :lmidic '((6000) (6100) (6200) (6300) (6400) (6500) (6600) (6700) (6800) (6900) (7000) (7100) (6000) (6100) (6200) (6300) (6400) (6500) (6600) (6700) (6800) (6900) (7000) (7100) (6000) (6100) (6200) (6300) (6400) (6500) (6600) (6700) (6800) (6900) (7000) (7100) (6000) (6100) (6200) (6300) (6400) (6500) (6600) (6700) (6800) (6900) (7000) (7100)) :lonset '(10400 21800 24200 26600 27200 29600 32000 43400 45800 48200 48800 51200 53600 65000 67400 69800 70400 72800 86200 99600 113000 126400 139800 153200 166600 180000 193400 206800 220200 233600 247000 260400 273800 287200 300600 314000 327400 340800 354200 367600 381000 394400 407800 421200 434600 448000 461400 474800 800200) :ldur '((1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000)) :lvel '((100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100)) :loffset '((0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0)) :lchan '((8) (8) (8) (8) (8) (8) (8) (8) (8) (8) (8) (8) (8) (8) (8) (8) (8) (8) (8) (8) (8) (8) (8) (8) (8) (8) (8) (8) (8) (8) (8) (8) (8) (8) (8) (8) (8) (8) (8) (8) (8) (8) (8) (8) (8) (8) (8) (8)) :legato 0)))) (load-port-info newobj '((0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0))) (init-mus-color newobj nil) (set-extra-pairs newobj 'nil) (set-patch-pairs newobj 'nil) (set-tonalite newobj nil) newobj) (let ((newobj (when (find-class 'chord-seq nil) (make-instance 'chord-seq :lmidic '((6000) (6100) (6200) (6300) (6400) (6500) (6600) (6700) (6800) (6900) (7000) (7100) (6000) (6100) (6200) (6300) (6400) (6500) (6600) (6700) (6800) (6900) (7000) (7100) (6000) (6100) (6200) (6300) (6400) (6500) (6600) (6700) (6800) (6900) (7000) (7100) (6000) (6100) (6200) (6300) (6400) (6500) (6600) (6700) (6800) (6900) (7000) (7100)) :lonset '(10600 22000 24400 26800 27400 29800 32200 43600 46000 48400 49000 51400 53800 65200 67600 70000 70600 73000 86200 99400 112600 125800 139000 152200 165400 178600 191800 205000 218200 231400 244600 257800 271000 284200 297400 310600 323800 337000 350200 363400 376600 389800 403000 416200 429400 442600 455800 469000 800200) :ldur '((1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000)) :lvel '((100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100)) :loffset '((0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0)) :lchan '((9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9)) :legato 0)))) (load-port-info newobj '((0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0))) (init-mus-color newobj nil) (set-extra-pairs newobj 'nil) (set-patch-pairs newobj 'nil) (set-tonalite newobj nil) newobj) (let ((newobj (when (find-class 'chord-seq nil) (make-instance 'chord-seq :lmidic '((6000) (6100) (6200) (6300) (6400) (6500) (6600) (6700) (6800) (6900) (7000) (7100) (6000) (6100) (6200) (6300) (6400) (6500) (6600) (6700) (6800) (6900) (7000) (7100) (6000) (6100) (6200) (6300) (6400) (6500) (6600) (6700) (6800) (6900) (7000) (7100) (6000) (6100) (6200) (6300) (6400) (6500) (6600) (6700) (6800) (6900) (7000) (7100)) :lonset '(13200 24600 27000 29400 30000 32400 34800 46200 48600 51000 51600 54000 56400 67800 70200 72600 73200 75600 86200 96800 107400 118000 128600 139200 149800 160400 171000 181600 192200 202800 213400 224000 234600 245200 255800 266400 277000 287600 298200 308800 319400 330000 340600 351200 361800 372400 383000 393600 800200) :ldur '((1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000)) :lvel '((100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100)) :loffset '((0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0)) :lchan '((10) (10) (10) (10) (10) (10) (10) (10) (10) (10) (10) (10) (10) (10) (10) (10) (10) (10) (10) (10) (10) (10) (10) (10) (10) (10) (10) (10) (10) (10) (10) (10) (10) (10) (10) (10) (10) (10) (10) (10) (10) (10) (10) (10) (10) (10) (10) (10)) :legato 0)))) (load-port-info newobj '((0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0))) (init-mus-color newobj nil) (set-extra-pairs newobj 'nil) (set-patch-pairs newobj 'nil) (set-tonalite newobj nil) newobj) (let ((newobj (when (find-class 'chord-seq nil) (make-instance 'chord-seq :lmidic '((6000) (6100) (6200) (6300) (6400) (6500) (6600) (6700) (6800) (6900) (7000) (7100) (6000) (6100) (6200) (6300) (6400) (6500) (6600) (6700) (6800) (6900) (7000) (7100) (6000) (6100) (6200) (6300) (6400) (6500) (6600) (6700) (6800) (6900) (7000) (7100) (6000) (6100) (6200) (6300) (6400) (6500) (6600) (6700) (6800) (6900) (7000) (7100)) :lonset '(14400 25800 28200 30600 31200 33600 36000 47400 49800 52200 52800 55200 57600 69000 71400 73800 74400 76800 86200 95600 105000 114400 123800 133200 142600 152000 161400 170800 180200 189600 199000 208400 217800 227200 236600 246000 255400 264800 274200 283600 293000 302400 311800 321200 330600 340000 349400 358800 800200) :ldur '((1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000)) :lvel '((100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100)) :loffset '((0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0)) :lchan '((11) (11) (11) (11) (11) (11) (11) (11) (11) (11) (11) (11) (11) (11) (11) (11) (11) (11) (11) (11) (11) (11) (11) (11) (11) (11) (11) (11) (11) (11) (11) (11) (11) (11) (11) (11) (11) (11) (11) (11) (11) (11) (11) (11) (11) (11) (11) (11)) :legato 0)))) (load-port-info newobj '((0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0))) (init-mus-color newobj nil) (set-extra-pairs newobj 'nil) (set-patch-pairs newobj 'nil) (set-tonalite newobj nil) newobj) (let ((newobj (when (find-class 'chord-seq nil) (make-instance 'chord-seq :lmidic '((6000) (6100) (6200) (6300) (6400) (6500) (6600) (6700) (6800) (6900) (7000) (7100) (6000) (6100) (6200) (6300) (6400) (6500) (6600) (6700) (6800) (6900) (7000) (7100) (6000) (6100) (6200) (6300) (6400) (6500) (6600) (6700) (6800) (6900) (7000) (7100) (6000) (6100) (6200) (6300) (6400) (6500) (6600) (6700) (6800) (6900) (7000) (7100)) :lonset '(17600 29000 31400 33800 34400 36800 39200 50600 53000 55400 56000 58400 60800 72200 74600 77000 77600 80000 86200 92400 98600 104800 111000 117200 123400 129600 135800 142000 148200 154400 160600 166800 173000 179200 185400 191600 197800 204000 210200 216400 222600 228800 235000 241200 247400 253600 259800 266000 800200) :ldur '((1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000)) :lvel '((100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100)) :loffset '((0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0)) :lchan '((12) (12) (12) (12) (12) (12) (12) (12) (12) (12) (12) (12) (12) (12) (12) (12) (12) (12) (12) (12) (12) (12) (12) (12) (12) (12) (12) (12) (12) (12) (12) (12) (12) (12) (12) (12) (12) (12) (12) (12) (12) (12) (12) (12) (12) (12) (12) (12)) :legato 0)))) (load-port-info newobj '((0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0))) (init-mus-color newobj nil) (set-extra-pairs newobj 'nil) (set-patch-pairs newobj 'nil) (set-tonalite newobj nil) newobj) (let ((newobj (when (find-class 'chord-seq nil) (make-instance 'chord-seq :lmidic '((6000) (6100) (6200) (6300) (6400) (6500) (6600) (6700) (6800) (6900) (7000) (7100) (6000) (6100) (6200) (6300) (6400) (6500) (6600) (6700) (6800) (6900) (7000) (7100) (6000) (6100) (6200) (6300) (6400) (6500) (6600) (6700) (6800) (6900) (7000) (7100) (6000) (6100) (6200) (6300) (6400) (6500) (6600) (6700) (6800) (6900) (7000) (7100)) :lonset '(17800 29200 31600 34000 34600 37000 39400 50800 53200 55600 56200 58600 61000 72400 74800 77200 77800 80200 86200 92200 98200 104200 110200 116200 122200 128200 134200 140200 146200 152200 158200 164200 170200 176200 182200 188200 194200 200200 206200 212200 218200 224200 230200 236200 242200 248200 254200 260200 800200) :ldur '((1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000)) :lvel '((100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100)) :loffset '((0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0)) :lchan '((13) (13) (13) (13) (13) (13) (13) (13) (13) (13) (13) (13) (13) (13) (13) (13) (13) (13) (13) (13) (13) (13) (13) (13) (13) (13) (13) (13) (13) (13) (13) (13) (13) (13) (13) (13) (13) (13) (13) (13) (13) (13) (13) (13) (13) (13) (13) (13)) :legato 0)))) (load-port-info newobj '((0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0))) (init-mus-color newobj nil) (set-extra-pairs newobj 'nil) (set-patch-pairs newobj 'nil) (set-tonalite newobj nil) newobj) (let ((newobj (when (find-class 'chord-seq nil) (make-instance 'chord-seq :lmidic '((6000) (6100) (6200) (6300) (6400) (6500) (6600) (6700) (6800) (6900) (7000) (7100) (6000) (6100) (6200) (6300) (6400) (6500) (6600) (6700) (6800) (6900) (7000) (7100) (6000) (6100) (6200) (6300) (6400) (6500) (6600) (6700) (6800) (6900) (7000) (7100) (6000) (6100) (6200) (6300) (6400) (6500) (6600) (6700) (6800) (6900) (7000) (7100)) :lonset '(19400 30800 33200 35600 36200 38600 41000 52400 54800 57200 57800 60200 62600 74000 76400 78800 79400 81800 86200 90600 95000 99400 103800 108200 112600 117000 121400 125800 130200 134600 139000 143400 147800 152200 156600 161000 165400 169800 174200 178600 183000 187400 191800 196200 200600 205000 209400 213800 800200) :ldur '((1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000)) :lvel '((100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100)) :loffset '((0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0)) :lchan '((14) (14) (14) (14) (14) (14) (14) (14) (14) (14) (14) (14) (14) (14) (14) (14) (14) (14) (14) (14) (14) (14) (14) (14) (14) (14) (14) (14) (14) (14) (14) (14) (14) (14) (14) (14) (14) (14) (14) (14) (14) (14) (14) (14) (14) (14) (14) (14)) :legato 0)))) (load-port-info newobj '((0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0))) (init-mus-color newobj nil) (set-extra-pairs newobj 'nil) (set-patch-pairs newobj 'nil) (set-tonalite newobj nil) newobj) (let ((newobj (when (find-class 'chord-seq nil) (make-instance 'chord-seq :lmidic '((6000) (6100) (6200) (6300) (6400) (6500) (6600) (6700) (6800) (6900) (7000) (7100) (6000) (6100) (6200) (6300) (6400) (6500) (6600) (6700) (6800) (6900) (7000) (7100) (6000) (6100) (6200) (6300) (6400) (6500) (6600) (6700) (6800) (6900) (7000) (7100) (6000) (6100) (6200) (6300) (6400) (6500) (6600) (6700) (6800) (6900) (7000) (7100)) :lonset '(19600 31000 33400 35800 36400 38800 41200 52600 55000 57400 58000 60400 62800 74200 76600 79000 79600 82000 86200 90400 94600 98800 103000 107200 111400 115600 119800 124000 128200 132400 136600 140800 145000 149200 153400 157600 161800 166000 170200 174400 178600 182800 187000 191200 195400 199600 203800 208000 800200) :ldur '((1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000)) :lvel '((100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100)) :loffset '((0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0)) :lchan '((15) (15) (15) (15) (15) (15) (15) (15) (15) (15) (15) (15) (15) (15) (15) (15) (15) (15) (15) (15) (15) (15) (15) (15) (15) (15) (15) (15) (15) (15) (15) (15) (15) (15) (15) (15) (15) (15) (15) (15) (15) (15) (15) (15) (15) (15) (15) (15)) :legato 0)))) (load-port-info newobj '((0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0))) (init-mus-color newobj nil) (set-extra-pairs newobj 'nil) (set-patch-pairs newobj 'nil) (set-tonalite newobj nil) newobj) (let ((newobj (when (find-class 'chord-seq nil) (make-instance 'chord-seq :lmidic '((6000) (6100) (6200) (6300) (6400) (6500) (6600) (6700) (6800) (6900) (7000) (7100) (6000) (6100) (6200) (6300) (6400) (6500) (6600) (6700) (6800) (6900) (7000) (7100) (6000) (6100) (6200) (6300) (6400) (6500) (6600) (6700) (6800) (6900) (7000) (7100) (6000) (6100) (6200) (6300) (6400) (6500) (6600) (6700) (6800) (6900) (7000) (7100)) :lonset '(20400 31800 34200 36600 37200 39600 42000 53400 55800 58200 58800 61200 63600 75000 77400 79800 80400 82800 86200 89600 93000 96400 99800 103200 106600 110000 113400 116800 120200 123600 127000 130400 133800 137200 140600 144000 147400 150800 154200 157600 161000 164400 167800 171200 174600 178000 181400 184800 800200) :ldur '((1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000)) :lvel '((100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100)) :loffset '((0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0)) :lchan '((16) (16) (16) (16) (16) (16) (16) (16) (16) (16) (16) (16) (16) (16) (16) (16) (16) (16) (16) (16) (16) (16) (16) (16) (16) (16) (16) (16) (16) (16) (16) (16) (16) (16) (16) (16) (16) (16) (16) (16) (16) (16) (16) (16) (16) (16) (16) (16)) :legato 0)))) (load-port-info newobj '((0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0))) (init-mus-color newobj nil) (set-extra-pairs newobj 'nil) (set-patch-pairs newobj 'nil) (set-tonalite newobj nil) newobj) (let ((newobj (when (find-class 'chord-seq nil) (make-instance 'chord-seq :lmidic '((6000) (6100) (6200) (6300) (6400) (6500) (6600) (6700) (6800) (6900) (7000) (7100) (6000) (6100) (6200) (6300) (6400) (6500) (6600) (6700) (6800) (6900) (7000) (7100) (6000) (6100) (6200) (6300) (6400) (6500) (6600) (6700) (6800) (6900) (7000) (7100) (6000) (6100) (6200) (6300) (6400) (6500) (6600) (6700) (6800) (6900) (7000) (7100)) :lonset '(21200 32600 35000 37400 38000 40400 42800 54200 56600 59000 59600 62000 64400 75800 78200 80600 81200 83600 86200 88800 91400 94000 96600 99200 101800 104400 107000 109600 112200 114800 117400 120000 122600 125200 127800 130400 133000 135600 138200 140800 143400 146000 148600 151200 153800 156400 159000 161600 800200) :ldur '((1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000)) :lvel '((100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100)) :loffset '((0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0)) :lchan '((17) (17) (17) (17) (17) (17) (17) (17) (17) (17) (17) (17) (17) (17) (17) (17) (17) (17) (17) (17) (17) (17) (17) (17) (17) (17) (17) (17) (17) (17) (17) (17) (17) (17) (17) (17) (17) (17) (17) (17) (17) (17) (17) (17) (17) (17) (17) (17)) :legato 0)))) (load-port-info newobj '((0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0))) (init-mus-color newobj nil) (set-extra-pairs newobj 'nil) (set-patch-pairs newobj 'nil) (set-tonalite newobj nil) newobj) (let ((newobj (when (find-class 'chord-seq nil) (make-instance 'chord-seq :lmidic '((6000) (6100) (6200) (6300) (6400) (6500) (6600) (6700) (6800) (6900) (7000) (7100) (6000) (6100) (6200) (6300) (6400) (6500) (6600) (6700) (6800) (6900) (7000) (7100) (6000) (6100) (6200) (6300) (6400) (6500) (6600) (6700) (6800) (6900) (7000) (7100) (6000) (6100) (6200) (6300) (6400) (6500) (6600) (6700) (6800) (6900) (7000) (7100)) :lonset '(21400 32800 35200 37600 38200 40600 43000 54400 56800 59200 59800 62200 64600 76000 78400 80800 81400 83800 86200 88600 91000 93400 95800 98200 100600 103000 105400 107800 110200 112600 115000 117400 119800 122200 124600 127000 129400 131800 134200 136600 139000 141400 143800 146200 148600 151000 153400 155800 800200) :ldur '((1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000)) :lvel '((100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100)) :loffset '((0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0)) :lchan '((18) (18) (18) (18) (18) (18) (18) (18) (18) (18) (18) (18) (18) (18) (18) (18) (18) (18) (18) (18) (18) (18) (18) (18) (18) (18) (18) (18) (18) (18) (18) (18) (18) (18) (18) (18) (18) (18) (18) (18) (18) (18) (18) (18) (18) (18) (18) (18)) :legato 0)))) (load-port-info newobj '((0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0))) (init-mus-color newobj nil) (set-extra-pairs newobj 'nil) (set-patch-pairs newobj 'nil) (set-tonalite newobj nil) newobj)) :from-file t))) (load-port-info newobj '(((0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0)) ((0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0)) ((0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0)) ((0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0)) ((0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0)) ((0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0)) ((0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0)) ((0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0)) ((0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0)) ((0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0)) ((0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0)) ((0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0)) ((0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0)) ((0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0)) ((0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0)) ((0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0)) ((0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0)) ((0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0)))) (init-mus-color newobj (list (list nil (om-make-color 0 0 0)) (list (list 0) (om-make-color 0 0 0)) (list (list 0 0) (om-make-color 0 0 0)) (list (list 0 0 0) (om-make-color 0 0 0)) (list (list 0 1) (om-make-color 0 0 0)) (list (list 0 1 0) (om-make-color 0 0 0)) (list (list 0 2) (om-make-color 0 0 0)) (list (list 0 2 0) (om-make-color 0 0 0)) (list (list 0 3) (om-make-color 0 0 0)) (list (list 0 3 0) (om-make-color 0 0 0)) (list (list 0 4) (om-make-color 0 0 0)) (list (list 0 4 0) (om-make-color 0 0 0)) (list (list 0 5) (om-make-color 0 0 0)) (list (list 0 5 0) (om-make-color 0 0 0)) (list (list 0 6) (om-make-color 0 0 0)) (list (list 0 6 0) (om-make-color 0 0 0)) (list (list 0 7) (om-make-color 0 0 0)) (list (list 0 7 0) (om-make-color 0 0 0)) (list (list 0 8) (om-make-color 0 0 0)) (list (list 0 8 0) (om-make-color 0 0 0)) (list (list 0 9) (om-make-color 0 0 0)) (list (list 0 9 0) (om-make-color 0 0 0)) (list (list 0 10) (om-make-color 0 0 0)) (list (list 0 10 0) (om-make-color 0 0 0)) (list (list 0 11) (om-make-color 0 0 0)) (list (list 0 11 0) (om-make-color 0 0 0)) (list (list 0 12) (om-make-color 0 0 0)) (list (list 0 12 0) (om-make-color 0 0 0)) (list (list 0 13) (om-make-color 0 0 0)) (list (list 0 13 0) (om-make-color 0 0 0)) (list (list 0 14) (om-make-color 0 0 0)) (list (list 0 14 0) (om-make-color 0 0 0)) (list (list 0 15) (om-make-color 0 0 0)) (list (list 0 15 0) (om-make-color 0 0 0)) (list (list 0 16) (om-make-color 0 0 0)) (list (list 0 16 0) (om-make-color 0 0 0)) (list (list 0 17) (om-make-color 0 0 0)) (list (list 0 17 0) (om-make-color 0 0 0)) (list (list 0 18) (om-make-color 0 0 0)) (list (list 0 18 0) (om-make-color 0 0 0)) (list (list 0 19) (om-make-color 0 0 0)) (list (list 0 19 0) (om-make-color 0 0 0)) (list (list 0 20) (om-make-color 0 0 0)) (list (list 0 20 0) (om-make-color 0 0 0)) (list (list 0 21) (om-make-color 0 0 0)) (list (list 0 21 0) (om-make-color 0 0 0)) (list (list 0 22) (om-make-color 0 0 0)) (list (list 0 22 0) (om-make-color 0 0 0)) (list (list 0 23) (om-make-color 0 0 0)) (list (list 0 23 0) (om-make-color 0 0 0)) (list (list 0 24) (om-make-color 0 0 0)) (list (list 0 24 0) (om-make-color 0 0 0)) (list (list 0 25) (om-make-color 0 0 0)) (list (list 0 25 0) (om-make-color 0 0 0)) (list (list 0 26) (om-make-color 0 0 0)) (list (list 0 26 0) (om-make-color 0 0 0)) (list (list 0 27) (om-make-color 0 0 0)) (list (list 0 27 0) (om-make-color 0 0 0)) (list (list 0 28) (om-make-color 0 0 0)) (list (list 0 28 0) (om-make-color 0 0 0)) (list (list 0 29) (om-make-color 0 0 0)) (list (list 0 29 0) (om-make-color 0 0 0)) (list (list 0 30) (om-make-color 0 0 0)) (list (list 0 30 0) (om-make-color 0 0 0)) (list (list 0 31) (om-make-color 0 0 0)) (list (list 0 31 0) (om-make-color 0 0 0)) (list (list 0 32) (om-make-color 0 0 0)) (list (list 0 32 0) (om-make-color 0 0 0)) (list (list 0 33) (om-make-color 0 0 0)) (list (list 0 33 0) (om-make-color 0 0 0)) (list (list 0 34) (om-make-color 0 0 0)) (list (list 0 34 0) (om-make-color 0 0 0)) (list (list 0 35) (om-make-color 0 0 0)) (list (list 0 35 0) (om-make-color 0 0 0)) (list (list 0 36) (om-make-color 0 0 0)) (list (list 0 36 0) (om-make-color 0 0 0)) (list (list 0 37) (om-make-color 0 0 0)) (list (list 0 37 0) (om-make-color 0 0 0)) (list (list 0 38) (om-make-color 0 0 0)) (list (list 0 38 0) (om-make-color 0 0 0)) (list (list 0 39) (om-make-color 0 0 0)) (list (list 0 39 0) (om-make-color 0 0 0)) (list (list 0 40) (om-make-color 0 0 0)) (list (list 0 40 0) (om-make-color 0 0 0)) (list (list 0 41) (om-make-color 0 0 0)) (list (list 0 41 0) (om-make-color 0 0 0)) (list (list 0 42) (om-make-color 0 0 0)) (list (list 0 42 0) (om-make-color 0 0 0)) (list (list 0 43) (om-make-color 0 0 0)) (list (list 0 43 0) (om-make-color 0 0 0)) (list (list 0 44) (om-make-color 0 0 0)) (list (list 0 44 0) (om-make-color 0 0 0)) (list (list 0 45) (om-make-color 0 0 0)) (list (list 0 45 0) (om-make-color 0 0 0)) (list (list 0 46) (om-make-color 0 0 0)) (list (list 0 46 0) (om-make-color 0 0 0)) (list (list 0 47) (om-make-color 0 0 0)) (list (list 0 47 0) (om-make-color 0 0 0)) (list (list 1) (om-make-color 0 0 0)) (list (list 1 0) (om-make-color 0 0 0)) (list (list 1 0 0) (om-make-color 0 0 0)) (list (list 1 1) (om-make-color 0 0 0)) (list (list 1 1 0) (om-make-color 0 0 0)) (list (list 1 2) (om-make-color 0 0 0)) (list (list 1 2 0) (om-make-color 0 0 0)) (list (list 1 3) (om-make-color 0 0 0)) (list (list 1 3 0) (om-make-color 0 0 0)) (list (list 1 4) (om-make-color 0 0 0)) (list (list 1 4 0) (om-make-color 0 0 0)) (list (list 1 5) (om-make-color 0 0 0)) (list (list 1 5 0) (om-make-color 0 0 0)) (list (list 1 6) (om-make-color 0 0 0)) (list (list 1 6 0) (om-make-color 0 0 0)) (list (list 1 7) (om-make-color 0 0 0)) (list (list 1 7 0) (om-make-color 0 0 0)) (list (list 1 8) (om-make-color 0 0 0)) (list (list 1 8 0) (om-make-color 0 0 0)) (list (list 1 9) (om-make-color 0 0 0)) (list (list 1 9 0) (om-make-color 0 0 0)) (list (list 1 10) (om-make-color 0 0 0)) (list (list 1 10 0) (om-make-color 0 0 0)) (list (list 1 11) (om-make-color 0 0 0)) (list (list 1 11 0) (om-make-color 0 0 0)) (list (list 1 12) (om-make-color 0 0 0)) (list (list 1 12 0) (om-make-color 0 0 0)) (list (list 1 13) (om-make-color 0 0 0)) (list (list 1 13 0) (om-make-color 0 0 0)) (list (list 1 14) (om-make-color 0 0 0)) (list (list 1 14 0) (om-make-color 0 0 0)) (list (list 1 15) (om-make-color 0 0 0)) (list (list 1 15 0) (om-make-color 0 0 0)) (list (list 1 16) (om-make-color 0 0 0)) (list (list 1 16 0) (om-make-color 0 0 0)) (list (list 1 17) (om-make-color 0 0 0)) (list (list 1 17 0) (om-make-color 0 0 0)) (list (list 1 18) (om-make-color 0 0 0)) (list (list 1 18 0) (om-make-color 0 0 0)) (list (list 1 19) (om-make-color 0 0 0)) (list (list 1 19 0) (om-make-color 0 0 0)) (list (list 1 20) (om-make-color 0 0 0)) (list (list 1 20 0) (om-make-color 0 0 0)) (list (list 1 21) (om-make-color 0 0 0)) (list (list 1 21 0) (om-make-color 0 0 0)) (list (list 1 22) (om-make-color 0 0 0)) (list (list 1 22 0) (om-make-color 0 0 0)) (list (list 1 23) (om-make-color 0 0 0)) (list (list 1 23 0) (om-make-color 0 0 0)) (list (list 1 24) (om-make-color 0 0 0)) (list (list 1 24 0) (om-make-color 0 0 0)) (list (list 1 25) (om-make-color 0 0 0)) (list (list 1 25 0) (om-make-color 0 0 0)) (list (list 1 26) (om-make-color 0 0 0)) (list (list 1 26 0) (om-make-color 0 0 0)) (list (list 1 27) (om-make-color 0 0 0)) (list (list 1 27 0) (om-make-color 0 0 0)) (list (list 1 28) (om-make-color 0 0 0)) (list (list 1 28 0) (om-make-color 0 0 0)) (list (list 1 29) (om-make-color 0 0 0)) (list (list 1 29 0) (om-make-color 0 0 0)) (list (list 1 30) (om-make-color 0 0 0)) (list (list 1 30 0) (om-make-color 0 0 0)) (list (list 1 31) (om-make-color 0 0 0)) (list (list 1 31 0) (om-make-color 0 0 0)) (list (list 1 32) (om-make-color 0 0 0)) (list (list 1 32 0) (om-make-color 0 0 0)) (list (list 1 33) (om-make-color 0 0 0)) (list (list 1 33 0) (om-make-color 0 0 0)) (list (list 1 34) (om-make-color 0 0 0)) (list (list 1 34 0) (om-make-color 0 0 0)) (list (list 1 35) (om-make-color 0 0 0)) (list (list 1 35 0) (om-make-color 0 0 0)) (list (list 1 36) (om-make-color 0 0 0)) (list (list 1 36 0) (om-make-color 0 0 0)) (list (list 1 37) (om-make-color 0 0 0)) (list (list 1 37 0) (om-make-color 0 0 0)) (list (list 1 38) (om-make-color 0 0 0)) (list (list 1 38 0) (om-make-color 0 0 0)) (list (list 1 39) (om-make-color 0 0 0)) (list (list 1 39 0) (om-make-color 0 0 0)) (list (list 1 40) (om-make-color 0 0 0)) (list (list 1 40 0) (om-make-color 0 0 0)) (list (list 1 41) (om-make-color 0 0 0)) (list (list 1 41 0) (om-make-color 0 0 0)) (list (list 1 42) (om-make-color 0 0 0)) (list (list 1 42 0) (om-make-color 0 0 0)) (list (list 1 43) (om-make-color 0 0 0)) (list (list 1 43 0) (om-make-color 0 0 0)) (list (list 1 44) (om-make-color 0 0 0)) (list (list 1 44 0) (om-make-color 0 0 0)) (list (list 1 45) (om-make-color 0 0 0)) (list (list 1 45 0) (om-make-color 0 0 0)) (list (list 1 46) (om-make-color 0 0 0)) (list (list 1 46 0) (om-make-color 0 0 0)) (list (list 1 47) (om-make-color 0 0 0)) (list (list 1 47 0) (om-make-color 0 0 0)) (list (list 2) (om-make-color 0 0 0)) (list (list 2 0) (om-make-color 0 0 0)) (list (list 2 0 0) (om-make-color 0 0 0)) (list (list 2 1) (om-make-color 0 0 0)) (list (list 2 1 0) (om-make-color 0 0 0)) (list (list 2 2) (om-make-color 0 0 0)) (list (list 2 2 0) (om-make-color 0 0 0)) (list (list 2 3) (om-make-color 0 0 0)) (list (list 2 3 0) (om-make-color 0 0 0)) (list (list 2 4) (om-make-color 0 0 0)) (list (list 2 4 0) (om-make-color 0 0 0)) (list (list 2 5) (om-make-color 0 0 0)) (list (list 2 5 0) (om-make-color 0 0 0)) (list (list 2 6) (om-make-color 0 0 0)) (list (list 2 6 0) (om-make-color 0 0 0)) (list (list 2 7) (om-make-color 0 0 0)) (list (list 2 7 0) (om-make-color 0 0 0)) (list (list 2 8) (om-make-color 0 0 0)) (list (list 2 8 0) (om-make-color 0 0 0)) (list (list 2 9) (om-make-color 0 0 0)) (list (list 2 9 0) (om-make-color 0 0 0)) (list (list 2 10) (om-make-color 0 0 0)) (list (list 2 10 0) (om-make-color 0 0 0)) (list (list 2 11) (om-make-color 0 0 0)) (list (list 2 11 0) (om-make-color 0 0 0)) (list (list 2 12) (om-make-color 0 0 0)) (list (list 2 12 0) (om-make-color 0 0 0)) (list (list 2 13) (om-make-color 0 0 0)) (list (list 2 13 0) (om-make-color 0 0 0)) (list (list 2 14) (om-make-color 0 0 0)) (list (list 2 14 0) (om-make-color 0 0 0)) (list (list 2 15) (om-make-color 0 0 0)) (list (list 2 15 0) (om-make-color 0 0 0)) (list (list 2 16) (om-make-color 0 0 0)) (list (list 2 16 0) (om-make-color 0 0 0)) (list (list 2 17) (om-make-color 0 0 0)) (list (list 2 17 0) (om-make-color 0 0 0)) (list (list 2 18) (om-make-color 0 0 0)) (list (list 2 18 0) (om-make-color 0 0 0)) (list (list 2 19) (om-make-color 0 0 0)) (list (list 2 19 0) (om-make-color 0 0 0)) (list (list 2 20) (om-make-color 0 0 0)) (list (list 2 20 0) (om-make-color 0 0 0)) (list (list 2 21) (om-make-color 0 0 0)) (list (list 2 21 0) (om-make-color 0 0 0)) (list (list 2 22) (om-make-color 0 0 0)) (list (list 2 22 0) (om-make-color 0 0 0)) (list (list 2 23) (om-make-color 0 0 0)) (list (list 2 23 0) (om-make-color 0 0 0)) (list (list 2 24) (om-make-color 0 0 0)) (list (list 2 24 0) (om-make-color 0 0 0)) (list (list 2 25) (om-make-color 0 0 0)) (list (list 2 25 0) (om-make-color 0 0 0)) (list (list 2 26) (om-make-color 0 0 0)) (list (list 2 26 0) (om-make-color 0 0 0)) (list (list 2 27) (om-make-color 0 0 0)) (list (list 2 27 0) (om-make-color 0 0 0)) (list (list 2 28) (om-make-color 0 0 0)) (list (list 2 28 0) (om-make-color 0 0 0)) (list (list 2 29) (om-make-color 0 0 0)) (list (list 2 29 0) (om-make-color 0 0 0)) (list (list 2 30) (om-make-color 0 0 0)) (list (list 2 30 0) (om-make-color 0 0 0)) (list (list 2 31) (om-make-color 0 0 0)) (list (list 2 31 0) (om-make-color 0 0 0)) (list (list 2 32) (om-make-color 0 0 0)) (list (list 2 32 0) (om-make-color 0 0 0)) (list (list 2 33) (om-make-color 0 0 0)) (list (list 2 33 0) (om-make-color 0 0 0)) (list (list 2 34) (om-make-color 0 0 0)) (list (list 2 34 0) (om-make-color 0 0 0)) (list (list 2 35) (om-make-color 0 0 0)) (list (list 2 35 0) (om-make-color 0 0 0)) (list (list 2 36) (om-make-color 0 0 0)) (list (list 2 36 0) (om-make-color 0 0 0)) (list (list 2 37) (om-make-color 0 0 0)) (list (list 2 37 0) (om-make-color 0 0 0)) (list (list 2 38) (om-make-color 0 0 0)) (list (list 2 38 0) (om-make-color 0 0 0)) (list (list 2 39) (om-make-color 0 0 0)) (list (list 2 39 0) (om-make-color 0 0 0)) (list (list 2 40) (om-make-color 0 0 0)) (list (list 2 40 0) (om-make-color 0 0 0)) (list (list 2 41) (om-make-color 0 0 0)) (list (list 2 41 0) (om-make-color 0 0 0)) (list (list 2 42) (om-make-color 0 0 0)) (list (list 2 42 0) (om-make-color 0 0 0)) (list (list 2 43) (om-make-color 0 0 0)) (list (list 2 43 0) (om-make-color 0 0 0)) (list (list 2 44) (om-make-color 0 0 0)) (list (list 2 44 0) (om-make-color 0 0 0)) (list (list 2 45) (om-make-color 0 0 0)) (list (list 2 45 0) (om-make-color 0 0 0)) (list (list 2 46) (om-make-color 0 0 0)) (list (list 2 46 0) (om-make-color 0 0 0)) (list (list 2 47) (om-make-color 0 0 0)) (list (list 2 47 0) (om-make-color 0 0 0)) (list (list 3) (om-make-color 0 0 0)) (list (list 3 0) (om-make-color 0 0 0)) (list (list 3 0 0) (om-make-color 0 0 0)) (list (list 3 1) (om-make-color 0 0 0)) (list (list 3 1 0) (om-make-color 0 0 0)) (list (list 3 2) (om-make-color 0 0 0)) (list (list 3 2 0) (om-make-color 0 0 0)) (list (list 3 3) (om-make-color 0 0 0)) (list (list 3 3 0) (om-make-color 0 0 0)) (list (list 3 4) (om-make-color 0 0 0)) (list (list 3 4 0) (om-make-color 0 0 0)) (list (list 3 5) (om-make-color 0 0 0)) (list (list 3 5 0) (om-make-color 0 0 0)) (list (list 3 6) (om-make-color 0 0 0)) (list (list 3 6 0) (om-make-color 0 0 0)) (list (list 3 7) (om-make-color 0 0 0)) (list (list 3 7 0) (om-make-color 0 0 0)) (list (list 3 8) (om-make-color 0 0 0)) (list (list 3 8 0) (om-make-color 0 0 0)) (list (list 3 9) (om-make-color 0 0 0)) (list (list 3 9 0) (om-make-color 0 0 0)) (list (list 3 10) (om-make-color 0 0 0)) (list (list 3 10 0) (om-make-color 0 0 0)) (list (list 3 11) (om-make-color 0 0 0)) (list (list 3 11 0) (om-make-color 0 0 0)) (list (list 3 12) (om-make-color 0 0 0)) (list (list 3 12 0) (om-make-color 0 0 0)) (list (list 3 13) (om-make-color 0 0 0)) (list (list 3 13 0) (om-make-color 0 0 0)) (list (list 3 14) (om-make-color 0 0 0)) (list (list 3 14 0) (om-make-color 0 0 0)) (list (list 3 15) (om-make-color 0 0 0)) (list (list 3 15 0) (om-make-color 0 0 0)) (list (list 3 16) (om-make-color 0 0 0)) (list (list 3 16 0) (om-make-color 0 0 0)) (list (list 3 17) (om-make-color 0 0 0)) (list (list 3 17 0) (om-make-color 0 0 0)) (list (list 3 18) (om-make-color 0 0 0)) (list (list 3 18 0) (om-make-color 0 0 0)) (list (list 3 19) (om-make-color 0 0 0)) (list (list 3 19 0) (om-make-color 0 0 0)) (list (list 3 20) (om-make-color 0 0 0)) (list (list 3 20 0) (om-make-color 0 0 0)) (list (list 3 21) (om-make-color 0 0 0)) (list (list 3 21 0) (om-make-color 0 0 0)) (list (list 3 22) (om-make-color 0 0 0)) (list (list 3 22 0) (om-make-color 0 0 0)) (list (list 3 23) (om-make-color 0 0 0)) (list (list 3 23 0) (om-make-color 0 0 0)) (list (list 3 24) (om-make-color 0 0 0)) (list (list 3 24 0) (om-make-color 0 0 0)) (list (list 3 25) (om-make-color 0 0 0)) (list (list 3 25 0) (om-make-color 0 0 0)) (list (list 3 26) (om-make-color 0 0 0)) (list (list 3 26 0) (om-make-color 0 0 0)) (list (list 3 27) (om-make-color 0 0 0)) (list (list 3 27 0) (om-make-color 0 0 0)) (list (list 3 28) (om-make-color 0 0 0)) (list (list 3 28 0) (om-make-color 0 0 0)) (list (list 3 29) (om-make-color 0 0 0)) (list (list 3 29 0) (om-make-color 0 0 0)) (list (list 3 30) (om-make-color 0 0 0)) (list (list 3 30 0) (om-make-color 0 0 0)) (list (list 3 31) (om-make-color 0 0 0)) (list (list 3 31 0) (om-make-color 0 0 0)) (list (list 3 32) (om-make-color 0 0 0)) (list (list 3 32 0) (om-make-color 0 0 0)) (list (list 3 33) (om-make-color 0 0 0)) (list (list 3 33 0) (om-make-color 0 0 0)) (list (list 3 34) (om-make-color 0 0 0)) (list (list 3 34 0) (om-make-color 0 0 0)) (list (list 3 35) (om-make-color 0 0 0)) (list (list 3 35 0) (om-make-color 0 0 0)) (list (list 3 36) (om-make-color 0 0 0)) (list (list 3 36 0) (om-make-color 0 0 0)) (list (list 3 37) (om-make-color 0 0 0)) (list (list 3 37 0) (om-make-color 0 0 0)) (list (list 3 38) (om-make-color 0 0 0)) (list (list 3 38 0) (om-make-color 0 0 0)) (list (list 3 39) (om-make-color 0 0 0)) (list (list 3 39 0) (om-make-color 0 0 0)) (list (list 3 40) (om-make-color 0 0 0)) (list (list 3 40 0) (om-make-color 0 0 0)) (list (list 3 41) (om-make-color 0 0 0)) (list (list 3 41 0) (om-make-color 0 0 0)) (list (list 3 42) (om-make-color 0 0 0)) (list (list 3 42 0) (om-make-color 0 0 0)) (list (list 3 43) (om-make-color 0 0 0)) (list (list 3 43 0) (om-make-color 0 0 0)) (list (list 3 44) (om-make-color 0 0 0)) (list (list 3 44 0) (om-make-color 0 0 0)) (list (list 3 45) (om-make-color 0 0 0)) (list (list 3 45 0) (om-make-color 0 0 0)) (list (list 3 46) (om-make-color 0 0 0)) (list (list 3 46 0) (om-make-color 0 0 0)) (list (list 3 47) (om-make-color 0 0 0)) (list (list 3 47 0) (om-make-color 0 0 0)) (list (list 4) (om-make-color 0 0 0)) (list (list 4 0) (om-make-color 0 0 0)) (list (list 4 0 0) (om-make-color 0 0 0)) (list (list 4 1) (om-make-color 0 0 0)) (list (list 4 1 0) (om-make-color 0 0 0)) (list (list 4 2) (om-make-color 0 0 0)) (list (list 4 2 0) (om-make-color 0 0 0)) (list (list 4 3) (om-make-color 0 0 0)) (list (list 4 3 0) (om-make-color 0 0 0)) (list (list 4 4) (om-make-color 0 0 0)) (list (list 4 4 0) (om-make-color 0 0 0)) (list (list 4 5) (om-make-color 0 0 0)) (list (list 4 5 0) (om-make-color 0 0 0)) (list (list 4 6) (om-make-color 0 0 0)) (list (list 4 6 0) (om-make-color 0 0 0)) (list (list 4 7) (om-make-color 0 0 0)) (list (list 4 7 0) (om-make-color 0 0 0)) (list (list 4 8) (om-make-color 0 0 0)) (list (list 4 8 0) (om-make-color 0 0 0)) (list (list 4 9) (om-make-color 0 0 0)) (list (list 4 9 0) (om-make-color 0 0 0)) (list (list 4 10) (om-make-color 0 0 0)) (list (list 4 10 0) (om-make-color 0 0 0)) (list (list 4 11) (om-make-color 0 0 0)) (list (list 4 11 0) (om-make-color 0 0 0)) (list (list 4 12) (om-make-color 0 0 0)) (list (list 4 12 0) (om-make-color 0 0 0)) (list (list 4 13) (om-make-color 0 0 0)) (list (list 4 13 0) (om-make-color 0 0 0)) (list (list 4 14) (om-make-color 0 0 0)) (list (list 4 14 0) (om-make-color 0 0 0)) (list (list 4 15) (om-make-color 0 0 0)) (list (list 4 15 0) (om-make-color 0 0 0)) (list (list 4 16) (om-make-color 0 0 0)) (list (list 4 16 0) (om-make-color 0 0 0)) (list (list 4 17) (om-make-color 0 0 0)) (list (list 4 17 0) (om-make-color 0 0 0)) (list (list 4 18) (om-make-color 0 0 0)) (list (list 4 18 0) (om-make-color 0 0 0)) (list (list 4 19) (om-make-color 0 0 0)) (list (list 4 19 0) (om-make-color 0 0 0)) (list (list 4 20) (om-make-color 0 0 0)) (list (list 4 20 0) (om-make-color 0 0 0)) (list (list 4 21) (om-make-color 0 0 0)) (list (list 4 21 0) (om-make-color 0 0 0)) (list (list 4 22) (om-make-color 0 0 0)) (list (list 4 22 0) (om-make-color 0 0 0)) (list (list 4 23) (om-make-color 0 0 0)) (list (list 4 23 0) (om-make-color 0 0 0)) (list (list 4 24) (om-make-color 0 0 0)) (list (list 4 24 0) (om-make-color 0 0 0)) (list (list 4 25) (om-make-color 0 0 0)) (list (list 4 25 0) (om-make-color 0 0 0)) (list (list 4 26) (om-make-color 0 0 0)) (list (list 4 26 0) (om-make-color 0 0 0)) (list (list 4 27) (om-make-color 0 0 0)) (list (list 4 27 0) (om-make-color 0 0 0)) (list (list 4 28) (om-make-color 0 0 0)) (list (list 4 28 0) (om-make-color 0 0 0)) (list (list 4 29) (om-make-color 0 0 0)) (list (list 4 29 0) (om-make-color 0 0 0)) (list (list 4 30) (om-make-color 0 0 0)) (list (list 4 30 0) (om-make-color 0 0 0)) (list (list 4 31) (om-make-color 0 0 0)) (list (list 4 31 0) (om-make-color 0 0 0)) (list (list 4 32) (om-make-color 0 0 0)) (list (list 4 32 0) (om-make-color 0 0 0)) (list (list 4 33) (om-make-color 0 0 0)) (list (list 4 33 0) (om-make-color 0 0 0)) (list (list 4 34) (om-make-color 0 0 0)) (list (list 4 34 0) (om-make-color 0 0 0)) (list (list 4 35) (om-make-color 0 0 0)) (list (list 4 35 0) (om-make-color 0 0 0)) (list (list 4 36) (om-make-color 0 0 0)) (list (list 4 36 0) (om-make-color 0 0 0)) (list (list 4 37) (om-make-color 0 0 0)) (list (list 4 37 0) (om-make-color 0 0 0)) (list (list 4 38) (om-make-color 0 0 0)) (list (list 4 38 0) (om-make-color 0 0 0)) (list (list 4 39) (om-make-color 0 0 0)) (list (list 4 39 0) (om-make-color 0 0 0)) (list (list 4 40) (om-make-color 0 0 0)) (list (list 4 40 0) (om-make-color 0 0 0)) (list (list 4 41) (om-make-color 0 0 0)) (list (list 4 41 0) (om-make-color 0 0 0)) (list (list 4 42) (om-make-color 0 0 0)) (list (list 4 42 0) (om-make-color 0 0 0)) (list (list 4 43) (om-make-color 0 0 0)) (list (list 4 43 0) (om-make-color 0 0 0)) (list (list 4 44) (om-make-color 0 0 0)) (list (list 4 44 0) (om-make-color 0 0 0)) (list (list 4 45) (om-make-color 0 0 0)) (list (list 4 45 0) (om-make-color 0 0 0)) (list (list 4 46) (om-make-color 0 0 0)) (list (list 4 46 0) (om-make-color 0 0 0)) (list (list 4 47) (om-make-color 0 0 0)) (list (list 4 47 0) (om-make-color 0 0 0)) (list (list 5) (om-make-color 0 0 0)) (list (list 5 0) (om-make-color 0 0 0)) (list (list 5 0 0) (om-make-color 0 0 0)) (list (list 5 1) (om-make-color 0 0 0)) (list (list 5 1 0) (om-make-color 0 0 0)) (list (list 5 2) (om-make-color 0 0 0)) (list (list 5 2 0) (om-make-color 0 0 0)) (list (list 5 3) (om-make-color 0 0 0)) (list (list 5 3 0) (om-make-color 0 0 0)) (list (list 5 4) (om-make-color 0 0 0)) (list (list 5 4 0) (om-make-color 0 0 0)) (list (list 5 5) (om-make-color 0 0 0)) (list (list 5 5 0) (om-make-color 0 0 0)) (list (list 5 6) (om-make-color 0 0 0)) (list (list 5 6 0) (om-make-color 0 0 0)) (list (list 5 7) (om-make-color 0 0 0)) (list (list 5 7 0) (om-make-color 0 0 0)) (list (list 5 8) (om-make-color 0 0 0)) (list (list 5 8 0) (om-make-color 0 0 0)) (list (list 5 9) (om-make-color 0 0 0)) (list (list 5 9 0) (om-make-color 0 0 0)) (list (list 5 10) (om-make-color 0 0 0)) (list (list 5 10 0) (om-make-color 0 0 0)) (list (list 5 11) (om-make-color 0 0 0)) (list (list 5 11 0) (om-make-color 0 0 0)) (list (list 5 12) (om-make-color 0 0 0)) (list (list 5 12 0) (om-make-color 0 0 0)) (list (list 5 13) (om-make-color 0 0 0)) (list (list 5 13 0) (om-make-color 0 0 0)) (list (list 5 14) (om-make-color 0 0 0)) (list (list 5 14 0) (om-make-color 0 0 0)) (list (list 5 15) (om-make-color 0 0 0)) (list (list 5 15 0) (om-make-color 0 0 0)) (list (list 5 16) (om-make-color 0 0 0)) (list (list 5 16 0) (om-make-color 0 0 0)) (list (list 5 17) (om-make-color 0 0 0)) (list (list 5 17 0) (om-make-color 0 0 0)) (list (list 5 18) (om-make-color 0 0 0)) (list (list 5 18 0) (om-make-color 0 0 0)) (list (list 5 19) (om-make-color 0 0 0)) (list (list 5 19 0) (om-make-color 0 0 0)) (list (list 5 20) (om-make-color 0 0 0)) (list (list 5 20 0) (om-make-color 0 0 0)) (list (list 5 21) (om-make-color 0 0 0)) (list (list 5 21 0) (om-make-color 0 0 0)) (list (list 5 22) (om-make-color 0 0 0)) (list (list 5 22 0) (om-make-color 0 0 0)) (list (list 5 23) (om-make-color 0 0 0)) (list (list 5 23 0) (om-make-color 0 0 0)) (list (list 5 24) (om-make-color 0 0 0)) (list (list 5 24 0) (om-make-color 0 0 0)) (list (list 5 25) (om-make-color 0 0 0)) (list (list 5 25 0) (om-make-color 0 0 0)) (list (list 5 26) (om-make-color 0 0 0)) (list (list 5 26 0) (om-make-color 0 0 0)) (list (list 5 27) (om-make-color 0 0 0)) (list (list 5 27 0) (om-make-color 0 0 0)) (list (list 5 28) (om-make-color 0 0 0)) (list (list 5 28 0) (om-make-color 0 0 0)) (list (list 5 29) (om-make-color 0 0 0)) (list (list 5 29 0) (om-make-color 0 0 0)) (list (list 5 30) (om-make-color 0 0 0)) (list (list 5 30 0) (om-make-color 0 0 0)) (list (list 5 31) (om-make-color 0 0 0)) (list (list 5 31 0) (om-make-color 0 0 0)) (list (list 5 32) (om-make-color 0 0 0)) (list (list 5 32 0) (om-make-color 0 0 0)) (list (list 5 33) (om-make-color 0 0 0)) (list (list 5 33 0) (om-make-color 0 0 0)) (list (list 5 34) (om-make-color 0 0 0)) (list (list 5 34 0) (om-make-color 0 0 0)) (list (list 5 35) (om-make-color 0 0 0)) (list (list 5 35 0) (om-make-color 0 0 0)) (list (list 5 36) (om-make-color 0 0 0)) (list (list 5 36 0) (om-make-color 0 0 0)) (list (list 5 37) (om-make-color 0 0 0)) (list (list 5 37 0) (om-make-color 0 0 0)) (list (list 5 38) (om-make-color 0 0 0)) (list (list 5 38 0) (om-make-color 0 0 0)) (list (list 5 39) (om-make-color 0 0 0)) (list (list 5 39 0) (om-make-color 0 0 0)) (list (list 5 40) (om-make-color 0 0 0)) (list (list 5 40 0) (om-make-color 0 0 0)) (list (list 5 41) (om-make-color 0 0 0)) (list (list 5 41 0) (om-make-color 0 0 0)) (list (list 5 42) (om-make-color 0 0 0)) (list (list 5 42 0) (om-make-color 0 0 0)) (list (list 5 43) (om-make-color 0 0 0)) (list (list 5 43 0) (om-make-color 0 0 0)) (list (list 5 44) (om-make-color 0 0 0)) (list (list 5 44 0) (om-make-color 0 0 0)) (list (list 5 45) (om-make-color 0 0 0)) (list (list 5 45 0) (om-make-color 0 0 0)) (list (list 5 46) (om-make-color 0 0 0)) (list (list 5 46 0) (om-make-color 0 0 0)) (list (list 5 47) (om-make-color 0 0 0)) (list (list 5 47 0) (om-make-color 0 0 0)) (list (list 6) (om-make-color 0 0 0)) (list (list 6 0) (om-make-color 0 0 0)) (list (list 6 0 0) (om-make-color 0 0 0)) (list (list 6 1) (om-make-color 0 0 0)) (list (list 6 1 0) (om-make-color 0 0 0)) (list (list 6 2) (om-make-color 0 0 0)) (list (list 6 2 0) (om-make-color 0 0 0)) (list (list 6 3) (om-make-color 0 0 0)) (list (list 6 3 0) (om-make-color 0 0 0)) (list (list 6 4) (om-make-color 0 0 0)) (list (list 6 4 0) (om-make-color 0 0 0)) (list (list 6 5) (om-make-color 0 0 0)) (list (list 6 5 0) (om-make-color 0 0 0)) (list (list 6 6) (om-make-color 0 0 0)) (list (list 6 6 0) (om-make-color 0 0 0)) (list (list 6 7) (om-make-color 0 0 0)) (list (list 6 7 0) (om-make-color 0 0 0)) (list (list 6 8) (om-make-color 0 0 0)) (list (list 6 8 0) (om-make-color 0 0 0)) (list (list 6 9) (om-make-color 0 0 0)) (list (list 6 9 0) (om-make-color 0 0 0)) (list (list 6 10) (om-make-color 0 0 0)) (list (list 6 10 0) (om-make-color 0 0 0)) (list (list 6 11) (om-make-color 0 0 0)) (list (list 6 11 0) (om-make-color 0 0 0)) (list (list 6 12) (om-make-color 0 0 0)) (list (list 6 12 0) (om-make-color 0 0 0)) (list (list 6 13) (om-make-color 0 0 0)) (list (list 6 13 0) (om-make-color 0 0 0)) (list (list 6 14) (om-make-color 0 0 0)) (list (list 6 14 0) (om-make-color 0 0 0)) (list (list 6 15) (om-make-color 0 0 0)) (list (list 6 15 0) (om-make-color 0 0 0)) (list (list 6 16) (om-make-color 0 0 0)) (list (list 6 16 0) (om-make-color 0 0 0)) (list (list 6 17) (om-make-color 0 0 0)) (list (list 6 17 0) (om-make-color 0 0 0)) (list (list 6 18) (om-make-color 0 0 0)) (list (list 6 18 0) (om-make-color 0 0 0)) (list (list 6 19) (om-make-color 0 0 0)) (list (list 6 19 0) (om-make-color 0 0 0)) (list (list 6 20) (om-make-color 0 0 0)) (list (list 6 20 0) (om-make-color 0 0 0)) (list (list 6 21) (om-make-color 0 0 0)) (list (list 6 21 0) (om-make-color 0 0 0)) (list (list 6 22) (om-make-color 0 0 0)) (list (list 6 22 0) (om-make-color 0 0 0)) (list (list 6 23) (om-make-color 0 0 0)) (list (list 6 23 0) (om-make-color 0 0 0)) (list (list 6 24) (om-make-color 0 0 0)) (list (list 6 24 0) (om-make-color 0 0 0)) (list (list 6 25) (om-make-color 0 0 0)) (list (list 6 25 0) (om-make-color 0 0 0)) (list (list 6 26) (om-make-color 0 0 0)) (list (list 6 26 0) (om-make-color 0 0 0)) (list (list 6 27) (om-make-color 0 0 0)) (list (list 6 27 0) (om-make-color 0 0 0)) (list (list 6 28) (om-make-color 0 0 0)) (list (list 6 28 0) (om-make-color 0 0 0)) (list (list 6 29) (om-make-color 0 0 0)) (list (list 6 29 0) (om-make-color 0 0 0)) (list (list 6 30) (om-make-color 0 0 0)) (list (list 6 30 0) (om-make-color 0 0 0)) (list (list 6 31) (om-make-color 0 0 0)) (list (list 6 31 0) (om-make-color 0 0 0)) (list (list 6 32) (om-make-color 0 0 0)) (list (list 6 32 0) (om-make-color 0 0 0)) (list (list 6 33) (om-make-color 0 0 0)) (list (list 6 33 0) (om-make-color 0 0 0)) (list (list 6 34) (om-make-color 0 0 0)) (list (list 6 34 0) (om-make-color 0 0 0)) (list (list 6 35) (om-make-color 0 0 0)) (list (list 6 35 0) (om-make-color 0 0 0)) (list (list 6 36) (om-make-color 0 0 0)) (list (list 6 36 0) (om-make-color 0 0 0)) (list (list 6 37) (om-make-color 0 0 0)) (list (list 6 37 0) (om-make-color 0 0 0)) (list (list 6 38) (om-make-color 0 0 0)) (list (list 6 38 0) (om-make-color 0 0 0)) (list (list 6 39) (om-make-color 0 0 0)) (list (list 6 39 0) (om-make-color 0 0 0)) (list (list 6 40) (om-make-color 0 0 0)) (list (list 6 40 0) (om-make-color 0 0 0)) (list (list 6 41) (om-make-color 0 0 0)) (list (list 6 41 0) (om-make-color 0 0 0)) (list (list 6 42) (om-make-color 0 0 0)) (list (list 6 42 0) (om-make-color 0 0 0)) (list (list 6 43) (om-make-color 0 0 0)) (list (list 6 43 0) (om-make-color 0 0 0)) (list (list 6 44) (om-make-color 0 0 0)) (list (list 6 44 0) (om-make-color 0 0 0)) (list (list 6 45) (om-make-color 0 0 0)) (list (list 6 45 0) (om-make-color 0 0 0)) (list (list 6 46) (om-make-color 0 0 0)) (list (list 6 46 0) (om-make-color 0 0 0)) (list (list 6 47) (om-make-color 0 0 0)) (list (list 6 47 0) (om-make-color 0 0 0)) (list (list 7) (om-make-color 0 0 0)) (list (list 7 0) (om-make-color 0 0 0)) (list (list 7 0 0) (om-make-color 0 0 0)) (list (list 7 1) (om-make-color 0 0 0)) (list (list 7 1 0) (om-make-color 0 0 0)) (list (list 7 2) (om-make-color 0 0 0)) (list (list 7 2 0) (om-make-color 0 0 0)) (list (list 7 3) (om-make-color 0 0 0)) (list (list 7 3 0) (om-make-color 0 0 0)) (list (list 7 4) (om-make-color 0 0 0)) (list (list 7 4 0) (om-make-color 0 0 0)) (list (list 7 5) (om-make-color 0 0 0)) (list (list 7 5 0) (om-make-color 0 0 0)) (list (list 7 6) (om-make-color 0 0 0)) (list (list 7 6 0) (om-make-color 0 0 0)) (list (list 7 7) (om-make-color 0 0 0)) (list (list 7 7 0) (om-make-color 0 0 0)) (list (list 7 8) (om-make-color 0 0 0)) (list (list 7 8 0) (om-make-color 0 0 0)) (list (list 7 9) (om-make-color 0 0 0)) (list (list 7 9 0) (om-make-color 0 0 0)) (list (list 7 10) (om-make-color 0 0 0)) (list (list 7 10 0) (om-make-color 0 0 0)) (list (list 7 11) (om-make-color 0 0 0)) (list (list 7 11 0) (om-make-color 0 0 0)) (list (list 7 12) (om-make-color 0 0 0)) (list (list 7 12 0) (om-make-color 0 0 0)) (list (list 7 13) (om-make-color 0 0 0)) (list (list 7 13 0) (om-make-color 0 0 0)) (list (list 7 14) (om-make-color 0 0 0)) (list (list 7 14 0) (om-make-color 0 0 0)) (list (list 7 15) (om-make-color 0 0 0)) (list (list 7 15 0) (om-make-color 0 0 0)) (list (list 7 16) (om-make-color 0 0 0)) (list (list 7 16 0) (om-make-color 0 0 0)) (list (list 7 17) (om-make-color 0 0 0)) (list (list 7 17 0) (om-make-color 0 0 0)) (list (list 7 18) (om-make-color 0 0 0)) (list (list 7 18 0) (om-make-color 0 0 0)) (list (list 7 19) (om-make-color 0 0 0)) (list (list 7 19 0) (om-make-color 0 0 0)) (list (list 7 20) (om-make-color 0 0 0)) (list (list 7 20 0) (om-make-color 0 0 0)) (list (list 7 21) (om-make-color 0 0 0)) (list (list 7 21 0) (om-make-color 0 0 0)) (list (list 7 22) (om-make-color 0 0 0)) (list (list 7 22 0) (om-make-color 0 0 0)) (list (list 7 23) (om-make-color 0 0 0)) (list (list 7 23 0) (om-make-color 0 0 0)) (list (list 7 24) (om-make-color 0 0 0)) (list (list 7 24 0) (om-make-color 0 0 0)) (list (list 7 25) (om-make-color 0 0 0)) (list (list 7 25 0) (om-make-color 0 0 0)) (list (list 7 26) (om-make-color 0 0 0)) (list (list 7 26 0) (om-make-color 0 0 0)) (list (list 7 27) (om-make-color 0 0 0)) (list (list 7 27 0) (om-make-color 0 0 0)) (list (list 7 28) (om-make-color 0 0 0)) (list (list 7 28 0) (om-make-color 0 0 0)) (list (list 7 29) (om-make-color 0 0 0)) (list (list 7 29 0) (om-make-color 0 0 0)) (list (list 7 30) (om-make-color 0 0 0)) (list (list 7 30 0) (om-make-color 0 0 0)) (list (list 7 31) (om-make-color 0 0 0)) (list (list 7 31 0) (om-make-color 0 0 0)) (list (list 7 32) (om-make-color 0 0 0)) (list (list 7 32 0) (om-make-color 0 0 0)) (list (list 7 33) (om-make-color 0 0 0)) (list (list 7 33 0) (om-make-color 0 0 0)) (list (list 7 34) (om-make-color 0 0 0)) (list (list 7 34 0) (om-make-color 0 0 0)) (list (list 7 35) (om-make-color 0 0 0)) (list (list 7 35 0) (om-make-color 0 0 0)) (list (list 7 36) (om-make-color 0 0 0)) (list (list 7 36 0) (om-make-color 0 0 0)) (list (list 7 37) (om-make-color 0 0 0)) (list (list 7 37 0) (om-make-color 0 0 0)) (list (list 7 38) (om-make-color 0 0 0)) (list (list 7 38 0) (om-make-color 0 0 0)) (list (list 7 39) (om-make-color 0 0 0)) (list (list 7 39 0) (om-make-color 0 0 0)) (list (list 7 40) (om-make-color 0 0 0)) (list (list 7 40 0) (om-make-color 0 0 0)) (list (list 7 41) (om-make-color 0 0 0)) (list (list 7 41 0) (om-make-color 0 0 0)) (list (list 7 42) (om-make-color 0 0 0)) (list (list 7 42 0) (om-make-color 0 0 0)) (list (list 7 43) (om-make-color 0 0 0)) (list (list 7 43 0) (om-make-color 0 0 0)) (list (list 7 44) (om-make-color 0 0 0)) (list (list 7 44 0) (om-make-color 0 0 0)) (list (list 7 45) (om-make-color 0 0 0)) (list (list 7 45 0) (om-make-color 0 0 0)) (list (list 7 46) (om-make-color 0 0 0)) (list (list 7 46 0) (om-make-color 0 0 0)) (list (list 7 47) (om-make-color 0 0 0)) (list (list 7 47 0) (om-make-color 0 0 0)) (list (list 8) (om-make-color 0 0 0)) (list (list 8 0) (om-make-color 0 0 0)) (list (list 8 0 0) (om-make-color 0 0 0)) (list (list 8 1) (om-make-color 0 0 0)) (list (list 8 1 0) (om-make-color 0 0 0)) (list (list 8 2) (om-make-color 0 0 0)) (list (list 8 2 0) (om-make-color 0 0 0)) (list (list 8 3) (om-make-color 0 0 0)) (list (list 8 3 0) (om-make-color 0 0 0)) (list (list 8 4) (om-make-color 0 0 0)) (list (list 8 4 0) (om-make-color 0 0 0)) (list (list 8 5) (om-make-color 0 0 0)) (list (list 8 5 0) (om-make-color 0 0 0)) (list (list 8 6) (om-make-color 0 0 0)) (list (list 8 6 0) (om-make-color 0 0 0)) (list (list 8 7) (om-make-color 0 0 0)) (list (list 8 7 0) (om-make-color 0 0 0)) (list (list 8 8) (om-make-color 0 0 0)) (list (list 8 8 0) (om-make-color 0 0 0)) (list (list 8 9) (om-make-color 0 0 0)) (list (list 8 9 0) (om-make-color 0 0 0)) (list (list 8 10) (om-make-color 0 0 0)) (list (list 8 10 0) (om-make-color 0 0 0)) (list (list 8 11) (om-make-color 0 0 0)) (list (list 8 11 0) (om-make-color 0 0 0)) (list (list 8 12) (om-make-color 0 0 0)) (list (list 8 12 0) (om-make-color 0 0 0)) (list (list 8 13) (om-make-color 0 0 0)) (list (list 8 13 0) (om-make-color 0 0 0)) (list (list 8 14) (om-make-color 0 0 0)) (list (list 8 14 0) (om-make-color 0 0 0)) (list (list 8 15) (om-make-color 0 0 0)) (list (list 8 15 0) (om-make-color 0 0 0)) (list (list 8 16) (om-make-color 0 0 0)) (list (list 8 16 0) (om-make-color 0 0 0)) (list (list 8 17) (om-make-color 0 0 0)) (list (list 8 17 0) (om-make-color 0 0 0)) (list (list 8 18) (om-make-color 0 0 0)) (list (list 8 18 0) (om-make-color 0 0 0)) (list (list 8 19) (om-make-color 0 0 0)) (list (list 8 19 0) (om-make-color 0 0 0)) (list (list 8 20) (om-make-color 0 0 0)) (list (list 8 20 0) (om-make-color 0 0 0)) (list (list 8 21) (om-make-color 0 0 0)) (list (list 8 21 0) (om-make-color 0 0 0)) (list (list 8 22) (om-make-color 0 0 0)) (list (list 8 22 0) (om-make-color 0 0 0)) (list (list 8 23) (om-make-color 0 0 0)) (list (list 8 23 0) (om-make-color 0 0 0)) (list (list 8 24) (om-make-color 0 0 0)) (list (list 8 24 0) (om-make-color 0 0 0)) (list (list 8 25) (om-make-color 0 0 0)) (list (list 8 25 0) (om-make-color 0 0 0)) (list (list 8 26) (om-make-color 0 0 0)) (list (list 8 26 0) (om-make-color 0 0 0)) (list (list 8 27) (om-make-color 0 0 0)) (list (list 8 27 0) (om-make-color 0 0 0)) (list (list 8 28) (om-make-color 0 0 0)) (list (list 8 28 0) (om-make-color 0 0 0)) (list (list 8 29) (om-make-color 0 0 0)) (list (list 8 29 0) (om-make-color 0 0 0)) (list (list 8 30) (om-make-color 0 0 0)) (list (list 8 30 0) (om-make-color 0 0 0)) (list (list 8 31) (om-make-color 0 0 0)) (list (list 8 31 0) (om-make-color 0 0 0)) (list (list 8 32) (om-make-color 0 0 0)) (list (list 8 32 0) (om-make-color 0 0 0)) (list (list 8 33) (om-make-color 0 0 0)) (list (list 8 33 0) (om-make-color 0 0 0)) (list (list 8 34) (om-make-color 0 0 0)) (list (list 8 34 0) (om-make-color 0 0 0)) (list (list 8 35) (om-make-color 0 0 0)) (list (list 8 35 0) (om-make-color 0 0 0)) (list (list 8 36) (om-make-color 0 0 0)) (list (list 8 36 0) (om-make-color 0 0 0)) (list (list 8 37) (om-make-color 0 0 0)) (list (list 8 37 0) (om-make-color 0 0 0)) (list (list 8 38) (om-make-color 0 0 0)) (list (list 8 38 0) (om-make-color 0 0 0)) (list (list 8 39) (om-make-color 0 0 0)) (list (list 8 39 0) (om-make-color 0 0 0)) (list (list 8 40) (om-make-color 0 0 0)) (list (list 8 40 0) (om-make-color 0 0 0)) (list (list 8 41) (om-make-color 0 0 0)) (list (list 8 41 0) (om-make-color 0 0 0)) (list (list 8 42) (om-make-color 0 0 0)) (list (list 8 42 0) (om-make-color 0 0 0)) (list (list 8 43) (om-make-color 0 0 0)) (list (list 8 43 0) (om-make-color 0 0 0)) (list (list 8 44) (om-make-color 0 0 0)) (list (list 8 44 0) (om-make-color 0 0 0)) (list (list 8 45) (om-make-color 0 0 0)) (list (list 8 45 0) (om-make-color 0 0 0)) (list (list 8 46) (om-make-color 0 0 0)) (list (list 8 46 0) (om-make-color 0 0 0)) (list (list 8 47) (om-make-color 0 0 0)) (list (list 8 47 0) (om-make-color 0 0 0)) (list (list 9) (om-make-color 0 0 0)) (list (list 9 0) (om-make-color 0 0 0)) (list (list 9 0 0) (om-make-color 0 0 0)) (list (list 9 1) (om-make-color 0 0 0)) (list (list 9 1 0) (om-make-color 0 0 0)) (list (list 9 2) (om-make-color 0 0 0)) (list (list 9 2 0) (om-make-color 0 0 0)) (list (list 9 3) (om-make-color 0 0 0)) (list (list 9 3 0) (om-make-color 0 0 0)) (list (list 9 4) (om-make-color 0 0 0)) (list (list 9 4 0) (om-make-color 0 0 0)) (list (list 9 5) (om-make-color 0 0 0)) (list (list 9 5 0) (om-make-color 0 0 0)) (list (list 9 6) (om-make-color 0 0 0)) (list (list 9 6 0) (om-make-color 0 0 0)) (list (list 9 7) (om-make-color 0 0 0)) (list (list 9 7 0) (om-make-color 0 0 0)) (list (list 9 8) (om-make-color 0 0 0)) (list (list 9 8 0) (om-make-color 0 0 0)) (list (list 9 9) (om-make-color 0 0 0)) (list (list 9 9 0) (om-make-color 0 0 0)) (list (list 9 10) (om-make-color 0 0 0)) (list (list 9 10 0) (om-make-color 0 0 0)) (list (list 9 11) (om-make-color 0 0 0)) (list (list 9 11 0) (om-make-color 0 0 0)) (list (list 9 12) (om-make-color 0 0 0)) (list (list 9 12 0) (om-make-color 0 0 0)) (list (list 9 13) (om-make-color 0 0 0)) (list (list 9 13 0) (om-make-color 0 0 0)) (list (list 9 14) (om-make-color 0 0 0)) (list (list 9 14 0) (om-make-color 0 0 0)) (list (list 9 15) (om-make-color 0 0 0)) (list (list 9 15 0) (om-make-color 0 0 0)) (list (list 9 16) (om-make-color 0 0 0)) (list (list 9 16 0) (om-make-color 0 0 0)) (list (list 9 17) (om-make-color 0 0 0)) (list (list 9 17 0) (om-make-color 0 0 0)) (list (list 9 18) (om-make-color 0 0 0)) (list (list 9 18 0) (om-make-color 0 0 0)) (list (list 9 19) (om-make-color 0 0 0)) (list (list 9 19 0) (om-make-color 0 0 0)) (list (list 9 20) (om-make-color 0 0 0)) (list (list 9 20 0) (om-make-color 0 0 0)) (list (list 9 21) (om-make-color 0 0 0)) (list (list 9 21 0) (om-make-color 0 0 0)) (list (list 9 22) (om-make-color 0 0 0)) (list (list 9 22 0) (om-make-color 0 0 0)) (list (list 9 23) (om-make-color 0 0 0)) (list (list 9 23 0) (om-make-color 0 0 0)) (list (list 9 24) (om-make-color 0 0 0)) (list (list 9 24 0) (om-make-color 0 0 0)) (list (list 9 25) (om-make-color 0 0 0)) (list (list 9 25 0) (om-make-color 0 0 0)) (list (list 9 26) (om-make-color 0 0 0)) (list (list 9 26 0) (om-make-color 0 0 0)) (list (list 9 27) (om-make-color 0 0 0)) (list (list 9 27 0) (om-make-color 0 0 0)) (list (list 9 28) (om-make-color 0 0 0)) (list (list 9 28 0) (om-make-color 0 0 0)) (list (list 9 29) (om-make-color 0 0 0)) (list (list 9 29 0) (om-make-color 0 0 0)) (list (list 9 30) (om-make-color 0 0 0)) (list (list 9 30 0) (om-make-color 0 0 0)) (list (list 9 31) (om-make-color 0 0 0)) (list (list 9 31 0) (om-make-color 0 0 0)) (list (list 9 32) (om-make-color 0 0 0)) (list (list 9 32 0) (om-make-color 0 0 0)) (list (list 9 33) (om-make-color 0 0 0)) (list (list 9 33 0) (om-make-color 0 0 0)) (list (list 9 34) (om-make-color 0 0 0)) (list (list 9 34 0) (om-make-color 0 0 0)) (list (list 9 35) (om-make-color 0 0 0)) (list (list 9 35 0) (om-make-color 0 0 0)) (list (list 9 36) (om-make-color 0 0 0)) (list (list 9 36 0) (om-make-color 0 0 0)) (list (list 9 37) (om-make-color 0 0 0)) (list (list 9 37 0) (om-make-color 0 0 0)) (list (list 9 38) (om-make-color 0 0 0)) (list (list 9 38 0) (om-make-color 0 0 0)) (list (list 9 39) (om-make-color 0 0 0)) (list (list 9 39 0) (om-make-color 0 0 0)) (list (list 9 40) (om-make-color 0 0 0)) (list (list 9 40 0) (om-make-color 0 0 0)) (list (list 9 41) (om-make-color 0 0 0)) (list (list 9 41 0) (om-make-color 0 0 0)) (list (list 9 42) (om-make-color 0 0 0)) (list (list 9 42 0) (om-make-color 0 0 0)) (list (list 9 43) (om-make-color 0 0 0)) (list (list 9 43 0) (om-make-color 0 0 0)) (list (list 9 44) (om-make-color 0 0 0)) (list (list 9 44 0) (om-make-color 0 0 0)) (list (list 9 45) (om-make-color 0 0 0)) (list (list 9 45 0) (om-make-color 0 0 0)) (list (list 9 46) (om-make-color 0 0 0)) (list (list 9 46 0) (om-make-color 0 0 0)) (list (list 9 47) (om-make-color 0 0 0)) (list (list 9 47 0) (om-make-color 0 0 0)) (list (list 10) (om-make-color 0 0 0)) (list (list 10 0) (om-make-color 0 0 0)) (list (list 10 0 0) (om-make-color 0 0 0)) (list (list 10 1) (om-make-color 0 0 0)) (list (list 10 1 0) (om-make-color 0 0 0)) (list (list 10 2) (om-make-color 0 0 0)) (list (list 10 2 0) (om-make-color 0 0 0)) (list (list 10 3) (om-make-color 0 0 0)) (list (list 10 3 0) (om-make-color 0 0 0)) (list (list 10 4) (om-make-color 0 0 0)) (list (list 10 4 0) (om-make-color 0 0 0)) (list (list 10 5) (om-make-color 0 0 0)) (list (list 10 5 0) (om-make-color 0 0 0)) (list (list 10 6) (om-make-color 0 0 0)) (list (list 10 6 0) (om-make-color 0 0 0)) (list (list 10 7) (om-make-color 0 0 0)) (list (list 10 7 0) (om-make-color 0 0 0)) (list (list 10 8) (om-make-color 0 0 0)) (list (list 10 8 0) (om-make-color 0 0 0)) (list (list 10 9) (om-make-color 0 0 0)) (list (list 10 9 0) (om-make-color 0 0 0)) (list (list 10 10) (om-make-color 0 0 0)) (list (list 10 10 0) (om-make-color 0 0 0)) (list (list 10 11) (om-make-color 0 0 0)) (list (list 10 11 0) (om-make-color 0 0 0)) (list (list 10 12) (om-make-color 0 0 0)) (list (list 10 12 0) (om-make-color 0 0 0)) (list (list 10 13) (om-make-color 0 0 0)) (list (list 10 13 0) (om-make-color 0 0 0)) (list (list 10 14) (om-make-color 0 0 0)) (list (list 10 14 0) (om-make-color 0 0 0)) (list (list 10 15) (om-make-color 0 0 0)) (list (list 10 15 0) (om-make-color 0 0 0)) (list (list 10 16) (om-make-color 0 0 0)) (list (list 10 16 0) (om-make-color 0 0 0)) (list (list 10 17) (om-make-color 0 0 0)) (list (list 10 17 0) (om-make-color 0 0 0)) (list (list 10 18) (om-make-color 0 0 0)) (list (list 10 18 0) (om-make-color 0 0 0)) (list (list 10 19) (om-make-color 0 0 0)) (list (list 10 19 0) (om-make-color 0 0 0)) (list (list 10 20) (om-make-color 0 0 0)) (list (list 10 20 0) (om-make-color 0 0 0)) (list (list 10 21) (om-make-color 0 0 0)) (list (list 10 21 0) (om-make-color 0 0 0)) (list (list 10 22) (om-make-color 0 0 0)) (list (list 10 22 0) (om-make-color 0 0 0)) (list (list 10 23) (om-make-color 0 0 0)) (list (list 10 23 0) (om-make-color 0 0 0)) (list (list 10 24) (om-make-color 0 0 0)) (list (list 10 24 0) (om-make-color 0 0 0)) (list (list 10 25) (om-make-color 0 0 0)) (list (list 10 25 0) (om-make-color 0 0 0)) (list (list 10 26) (om-make-color 0 0 0)) (list (list 10 26 0) (om-make-color 0 0 0)) (list (list 10 27) (om-make-color 0 0 0)) (list (list 10 27 0) (om-make-color 0 0 0)) (list (list 10 28) (om-make-color 0 0 0)) (list (list 10 28 0) (om-make-color 0 0 0)) (list (list 10 29) (om-make-color 0 0 0)) (list (list 10 29 0) (om-make-color 0 0 0)) (list (list 10 30) (om-make-color 0 0 0)) (list (list 10 30 0) (om-make-color 0 0 0)) (list (list 10 31) (om-make-color 0 0 0)) (list (list 10 31 0) (om-make-color 0 0 0)) (list (list 10 32) (om-make-color 0 0 0)) (list (list 10 32 0) (om-make-color 0 0 0)) (list (list 10 33) (om-make-color 0 0 0)) (list (list 10 33 0) (om-make-color 0 0 0)) (list (list 10 34) (om-make-color 0 0 0)) (list (list 10 34 0) (om-make-color 0 0 0)) (list (list 10 35) (om-make-color 0 0 0)) (list (list 10 35 0) (om-make-color 0 0 0)) (list (list 10 36) (om-make-color 0 0 0)) (list (list 10 36 0) (om-make-color 0 0 0)) (list (list 10 37) (om-make-color 0 0 0)) (list (list 10 37 0) (om-make-color 0 0 0)) (list (list 10 38) (om-make-color 0 0 0)) (list (list 10 38 0) (om-make-color 0 0 0)) (list (list 10 39) (om-make-color 0 0 0)) (list (list 10 39 0) (om-make-color 0 0 0)) (list (list 10 40) (om-make-color 0 0 0)) (list (list 10 40 0) (om-make-color 0 0 0)) (list (list 10 41) (om-make-color 0 0 0)) (list (list 10 41 0) (om-make-color 0 0 0)) (list (list 10 42) (om-make-color 0 0 0)) (list (list 10 42 0) (om-make-color 0 0 0)) (list (list 10 43) (om-make-color 0 0 0)) (list (list 10 43 0) (om-make-color 0 0 0)) (list (list 10 44) (om-make-color 0 0 0)) (list (list 10 44 0) (om-make-color 0 0 0)) (list (list 10 45) (om-make-color 0 0 0)) (list (list 10 45 0) (om-make-color 0 0 0)) (list (list 10 46) (om-make-color 0 0 0)) (list (list 10 46 0) (om-make-color 0 0 0)) (list (list 10 47) (om-make-color 0 0 0)) (list (list 10 47 0) (om-make-color 0 0 0)) (list (list 11) (om-make-color 0 0 0)) (list (list 11 0) (om-make-color 0 0 0)) (list (list 11 0 0) (om-make-color 0 0 0)) (list (list 11 1) (om-make-color 0 0 0)) (list (list 11 1 0) (om-make-color 0 0 0)) (list (list 11 2) (om-make-color 0 0 0)) (list (list 11 2 0) (om-make-color 0 0 0)) (list (list 11 3) (om-make-color 0 0 0)) (list (list 11 3 0) (om-make-color 0 0 0)) (list (list 11 4) (om-make-color 0 0 0)) (list (list 11 4 0) (om-make-color 0 0 0)) (list (list 11 5) (om-make-color 0 0 0)) (list (list 11 5 0) (om-make-color 0 0 0)) (list (list 11 6) (om-make-color 0 0 0)) (list (list 11 6 0) (om-make-color 0 0 0)) (list (list 11 7) (om-make-color 0 0 0)) (list (list 11 7 0) (om-make-color 0 0 0)) (list (list 11 8) (om-make-color 0 0 0)) (list (list 11 8 0) (om-make-color 0 0 0)) (list (list 11 9) (om-make-color 0 0 0)) (list (list 11 9 0) (om-make-color 0 0 0)) (list (list 11 10) (om-make-color 0 0 0)) (list (list 11 10 0) (om-make-color 0 0 0)) (list (list 11 11) (om-make-color 0 0 0)) (list (list 11 11 0) (om-make-color 0 0 0)) (list (list 11 12) (om-make-color 0 0 0)) (list (list 11 12 0) (om-make-color 0 0 0)) (list (list 11 13) (om-make-color 0 0 0)) (list (list 11 13 0) (om-make-color 0 0 0)) (list (list 11 14) (om-make-color 0 0 0)) (list (list 11 14 0) (om-make-color 0 0 0)) (list (list 11 15) (om-make-color 0 0 0)) (list (list 11 15 0) (om-make-color 0 0 0)) (list (list 11 16) (om-make-color 0 0 0)) (list (list 11 16 0) (om-make-color 0 0 0)) (list (list 11 17) (om-make-color 0 0 0)) (list (list 11 17 0) (om-make-color 0 0 0)) (list (list 11 18) (om-make-color 0 0 0)) (list (list 11 18 0) (om-make-color 0 0 0)) (list (list 11 19) (om-make-color 0 0 0)) (list (list 11 19 0) (om-make-color 0 0 0)) (list (list 11 20) (om-make-color 0 0 0)) (list (list 11 20 0) (om-make-color 0 0 0)) (list (list 11 21) (om-make-color 0 0 0)) (list (list 11 21 0) (om-make-color 0 0 0)) (list (list 11 22) (om-make-color 0 0 0)) (list (list 11 22 0) (om-make-color 0 0 0)) (list (list 11 23) (om-make-color 0 0 0)) (list (list 11 23 0) (om-make-color 0 0 0)) (list (list 11 24) (om-make-color 0 0 0)) (list (list 11 24 0) (om-make-color 0 0 0)) (list (list 11 25) (om-make-color 0 0 0)) (list (list 11 25 0) (om-make-color 0 0 0)) (list (list 11 26) (om-make-color 0 0 0)) (list (list 11 26 0) (om-make-color 0 0 0)) (list (list 11 27) (om-make-color 0 0 0)) (list (list 11 27 0) (om-make-color 0 0 0)) (list (list 11 28) (om-make-color 0 0 0)) (list (list 11 28 0) (om-make-color 0 0 0)) (list (list 11 29) (om-make-color 0 0 0)) (list (list 11 29 0) (om-make-color 0 0 0)) (list (list 11 30) (om-make-color 0 0 0)) (list (list 11 30 0) (om-make-color 0 0 0)) (list (list 11 31) (om-make-color 0 0 0)) (list (list 11 31 0) (om-make-color 0 0 0)) (list (list 11 32) (om-make-color 0 0 0)) (list (list 11 32 0) (om-make-color 0 0 0)) (list (list 11 33) (om-make-color 0 0 0)) (list (list 11 33 0) (om-make-color 0 0 0)) (list (list 11 34) (om-make-color 0 0 0)) (list (list 11 34 0) (om-make-color 0 0 0)) (list (list 11 35) (om-make-color 0 0 0)) (list (list 11 35 0) (om-make-color 0 0 0)) (list (list 11 36) (om-make-color 0 0 0)) (list (list 11 36 0) (om-make-color 0 0 0)) (list (list 11 37) (om-make-color 0 0 0)) (list (list 11 37 0) (om-make-color 0 0 0)) (list (list 11 38) (om-make-color 0 0 0)) (list (list 11 38 0) (om-make-color 0 0 0)) (list (list 11 39) (om-make-color 0 0 0)) (list (list 11 39 0) (om-make-color 0 0 0)) (list (list 11 40) (om-make-color 0 0 0)) (list (list 11 40 0) (om-make-color 0 0 0)) (list (list 11 41) (om-make-color 0 0 0)) (list (list 11 41 0) (om-make-color 0 0 0)) (list (list 11 42) (om-make-color 0 0 0)) (list (list 11 42 0) (om-make-color 0 0 0)) (list (list 11 43) (om-make-color 0 0 0)) (list (list 11 43 0) (om-make-color 0 0 0)) (list (list 11 44) (om-make-color 0 0 0)) (list (list 11 44 0) (om-make-color 0 0 0)) (list (list 11 45) (om-make-color 0 0 0)) (list (list 11 45 0) (om-make-color 0 0 0)) (list (list 11 46) (om-make-color 0 0 0)) (list (list 11 46 0) (om-make-color 0 0 0)) (list (list 11 47) (om-make-color 0 0 0)) (list (list 11 47 0) (om-make-color 0 0 0)) (list (list 12) (om-make-color 0 0 0)) (list (list 12 0) (om-make-color 0 0 0)) (list (list 12 0 0) (om-make-color 0 0 0)) (list (list 12 1) (om-make-color 0 0 0)) (list (list 12 1 0) (om-make-color 0 0 0)) (list (list 12 2) (om-make-color 0 0 0)) (list (list 12 2 0) (om-make-color 0 0 0)) (list (list 12 3) (om-make-color 0 0 0)) (list (list 12 3 0) (om-make-color 0 0 0)) (list (list 12 4) (om-make-color 0 0 0)) (list (list 12 4 0) (om-make-color 0 0 0)) (list (list 12 5) (om-make-color 0 0 0)) (list (list 12 5 0) (om-make-color 0 0 0)) (list (list 12 6) (om-make-color 0 0 0)) (list (list 12 6 0) (om-make-color 0 0 0)) (list (list 12 7) (om-make-color 0 0 0)) (list (list 12 7 0) (om-make-color 0 0 0)) (list (list 12 8) (om-make-color 0 0 0)) (list (list 12 8 0) (om-make-color 0 0 0)) (list (list 12 9) (om-make-color 0 0 0)) (list (list 12 9 0) (om-make-color 0 0 0)) (list (list 12 10) (om-make-color 0 0 0)) (list (list 12 10 0) (om-make-color 0 0 0)) (list (list 12 11) (om-make-color 0 0 0)) (list (list 12 11 0) (om-make-color 0 0 0)) (list (list 12 12) (om-make-color 0 0 0)) (list (list 12 12 0) (om-make-color 0 0 0)) (list (list 12 13) (om-make-color 0 0 0)) (list (list 12 13 0) (om-make-color 0 0 0)) (list (list 12 14) (om-make-color 0 0 0)) (list (list 12 14 0) (om-make-color 0 0 0)) (list (list 12 15) (om-make-color 0 0 0)) (list (list 12 15 0) (om-make-color 0 0 0)) (list (list 12 16) (om-make-color 0 0 0)) (list (list 12 16 0) (om-make-color 0 0 0)) (list (list 12 17) (om-make-color 0 0 0)) (list (list 12 17 0) (om-make-color 0 0 0)) (list (list 12 18) (om-make-color 0 0 0)) (list (list 12 18 0) (om-make-color 0 0 0)) (list (list 12 19) (om-make-color 0 0 0)) (list (list 12 19 0) (om-make-color 0 0 0)) (list (list 12 20) (om-make-color 0 0 0)) (list (list 12 20 0) (om-make-color 0 0 0)) (list (list 12 21) (om-make-color 0 0 0)) (list (list 12 21 0) (om-make-color 0 0 0)) (list (list 12 22) (om-make-color 0 0 0)) (list (list 12 22 0) (om-make-color 0 0 0)) (list (list 12 23) (om-make-color 0 0 0)) (list (list 12 23 0) (om-make-color 0 0 0)) (list (list 12 24) (om-make-color 0 0 0)) (list (list 12 24 0) (om-make-color 0 0 0)) (list (list 12 25) (om-make-color 0 0 0)) (list (list 12 25 0) (om-make-color 0 0 0)) (list (list 12 26) (om-make-color 0 0 0)) (list (list 12 26 0) (om-make-color 0 0 0)) (list (list 12 27) (om-make-color 0 0 0)) (list (list 12 27 0) (om-make-color 0 0 0)) (list (list 12 28) (om-make-color 0 0 0)) (list (list 12 28 0) (om-make-color 0 0 0)) (list (list 12 29) (om-make-color 0 0 0)) (list (list 12 29 0) (om-make-color 0 0 0)) (list (list 12 30) (om-make-color 0 0 0)) (list (list 12 30 0) (om-make-color 0 0 0)) (list (list 12 31) (om-make-color 0 0 0)) (list (list 12 31 0) (om-make-color 0 0 0)) (list (list 12 32) (om-make-color 0 0 0)) (list (list 12 32 0) (om-make-color 0 0 0)) (list (list 12 33) (om-make-color 0 0 0)) (list (list 12 33 0) (om-make-color 0 0 0)) (list (list 12 34) (om-make-color 0 0 0)) (list (list 12 34 0) (om-make-color 0 0 0)) (list (list 12 35) (om-make-color 0 0 0)) (list (list 12 35 0) (om-make-color 0 0 0)) (list (list 12 36) (om-make-color 0 0 0)) (list (list 12 36 0) (om-make-color 0 0 0)) (list (list 12 37) (om-make-color 0 0 0)) (list (list 12 37 0) (om-make-color 0 0 0)) (list (list 12 38) (om-make-color 0 0 0)) (list (list 12 38 0) (om-make-color 0 0 0)) (list (list 12 39) (om-make-color 0 0 0)) (list (list 12 39 0) (om-make-color 0 0 0)) (list (list 12 40) (om-make-color 0 0 0)) (list (list 12 40 0) (om-make-color 0 0 0)) (list (list 12 41) (om-make-color 0 0 0)) (list (list 12 41 0) (om-make-color 0 0 0)) (list (list 12 42) (om-make-color 0 0 0)) (list (list 12 42 0) (om-make-color 0 0 0)) (list (list 12 43) (om-make-color 0 0 0)) (list (list 12 43 0) (om-make-color 0 0 0)) (list (list 12 44) (om-make-color 0 0 0)) (list (list 12 44 0) (om-make-color 0 0 0)) (list (list 12 45) (om-make-color 0 0 0)) (list (list 12 45 0) (om-make-color 0 0 0)) (list (list 12 46) (om-make-color 0 0 0)) (list (list 12 46 0) (om-make-color 0 0 0)) (list (list 12 47) (om-make-color 0 0 0)) (list (list 12 47 0) (om-make-color 0 0 0)) (list (list 13) (om-make-color 0 0 0)) (list (list 13 0) (om-make-color 0 0 0)) (list (list 13 0 0) (om-make-color 0 0 0)) (list (list 13 1) (om-make-color 0 0 0)) (list (list 13 1 0) (om-make-color 0 0 0)) (list (list 13 2) (om-make-color 0 0 0)) (list (list 13 2 0) (om-make-color 0 0 0)) (list (list 13 3) (om-make-color 0 0 0)) (list (list 13 3 0) (om-make-color 0 0 0)) (list (list 13 4) (om-make-color 0 0 0)) (list (list 13 4 0) (om-make-color 0 0 0)) (list (list 13 5) (om-make-color 0 0 0)) (list (list 13 5 0) (om-make-color 0 0 0)) (list (list 13 6) (om-make-color 0 0 0)) (list (list 13 6 0) (om-make-color 0 0 0)) (list (list 13 7) (om-make-color 0 0 0)) (list (list 13 7 0) (om-make-color 0 0 0)) (list (list 13 8) (om-make-color 0 0 0)) (list (list 13 8 0) (om-make-color 0 0 0)) (list (list 13 9) (om-make-color 0 0 0)) (list (list 13 9 0) (om-make-color 0 0 0)) (list (list 13 10) (om-make-color 0 0 0)) (list (list 13 10 0) (om-make-color 0 0 0)) (list (list 13 11) (om-make-color 0 0 0)) (list (list 13 11 0) (om-make-color 0 0 0)) (list (list 13 12) (om-make-color 0 0 0)) (list (list 13 12 0) (om-make-color 0 0 0)) (list (list 13 13) (om-make-color 0 0 0)) (list (list 13 13 0) (om-make-color 0 0 0)) (list (list 13 14) (om-make-color 0 0 0)) (list (list 13 14 0) (om-make-color 0 0 0)) (list (list 13 15) (om-make-color 0 0 0)) (list (list 13 15 0) (om-make-color 0 0 0)) (list (list 13 16) (om-make-color 0 0 0)) (list (list 13 16 0) (om-make-color 0 0 0)) (list (list 13 17) (om-make-color 0 0 0)) (list (list 13 17 0) (om-make-color 0 0 0)) (list (list 13 18) (om-make-color 0 0 0)) (list (list 13 18 0) (om-make-color 0 0 0)) (list (list 13 19) (om-make-color 0 0 0)) (list (list 13 19 0) (om-make-color 0 0 0)) (list (list 13 20) (om-make-color 0 0 0)) (list (list 13 20 0) (om-make-color 0 0 0)) (list (list 13 21) (om-make-color 0 0 0)) (list (list 13 21 0) (om-make-color 0 0 0)) (list (list 13 22) (om-make-color 0 0 0)) (list (list 13 22 0) (om-make-color 0 0 0)) (list (list 13 23) (om-make-color 0 0 0)) (list (list 13 23 0) (om-make-color 0 0 0)) (list (list 13 24) (om-make-color 0 0 0)) (list (list 13 24 0) (om-make-color 0 0 0)) (list (list 13 25) (om-make-color 0 0 0)) (list (list 13 25 0) (om-make-color 0 0 0)) (list (list 13 26) (om-make-color 0 0 0)) (list (list 13 26 0) (om-make-color 0 0 0)) (list (list 13 27) (om-make-color 0 0 0)) (list (list 13 27 0) (om-make-color 0 0 0)) (list (list 13 28) (om-make-color 0 0 0)) (list (list 13 28 0) (om-make-color 0 0 0)) (list (list 13 29) (om-make-color 0 0 0)) (list (list 13 29 0) (om-make-color 0 0 0)) (list (list 13 30) (om-make-color 0 0 0)) (list (list 13 30 0) (om-make-color 0 0 0)) (list (list 13 31) (om-make-color 0 0 0)) (list (list 13 31 0) (om-make-color 0 0 0)) (list (list 13 32) (om-make-color 0 0 0)) (list (list 13 32 0) (om-make-color 0 0 0)) (list (list 13 33) (om-make-color 0 0 0)) (list (list 13 33 0) (om-make-color 0 0 0)) (list (list 13 34) (om-make-color 0 0 0)) (list (list 13 34 0) (om-make-color 0 0 0)) (list (list 13 35) (om-make-color 0 0 0)) (list (list 13 35 0) (om-make-color 0 0 0)) (list (list 13 36) (om-make-color 0 0 0)) (list (list 13 36 0) (om-make-color 0 0 0)) (list (list 13 37) (om-make-color 0 0 0)) (list (list 13 37 0) (om-make-color 0 0 0)) (list (list 13 38) (om-make-color 0 0 0)) (list (list 13 38 0) (om-make-color 0 0 0)) (list (list 13 39) (om-make-color 0 0 0)) (list (list 13 39 0) (om-make-color 0 0 0)) (list (list 13 40) (om-make-color 0 0 0)) (list (list 13 40 0) (om-make-color 0 0 0)) (list (list 13 41) (om-make-color 0 0 0)) (list (list 13 41 0) (om-make-color 0 0 0)) (list (list 13 42) (om-make-color 0 0 0)) (list (list 13 42 0) (om-make-color 0 0 0)) (list (list 13 43) (om-make-color 0 0 0)) (list (list 13 43 0) (om-make-color 0 0 0)) (list (list 13 44) (om-make-color 0 0 0)) (list (list 13 44 0) (om-make-color 0 0 0)) (list (list 13 45) (om-make-color 0 0 0)) (list (list 13 45 0) (om-make-color 0 0 0)) (list (list 13 46) (om-make-color 0 0 0)) (list (list 13 46 0) (om-make-color 0 0 0)) (list (list 13 47) (om-make-color 0 0 0)) (list (list 13 47 0) (om-make-color 0 0 0)) (list (list 14) (om-make-color 0 0 0)) (list (list 14 0) (om-make-color 0 0 0)) (list (list 14 0 0) (om-make-color 0 0 0)) (list (list 14 1) (om-make-color 0 0 0)) (list (list 14 1 0) (om-make-color 0 0 0)) (list (list 14 2) (om-make-color 0 0 0)) (list (list 14 2 0) (om-make-color 0 0 0)) (list (list 14 3) (om-make-color 0 0 0)) (list (list 14 3 0) (om-make-color 0 0 0)) (list (list 14 4) (om-make-color 0 0 0)) (list (list 14 4 0) (om-make-color 0 0 0)) (list (list 14 5) (om-make-color 0 0 0)) (list (list 14 5 0) (om-make-color 0 0 0)) (list (list 14 6) (om-make-color 0 0 0)) (list (list 14 6 0) (om-make-color 0 0 0)) (list (list 14 7) (om-make-color 0 0 0)) (list (list 14 7 0) (om-make-color 0 0 0)) (list (list 14 8) (om-make-color 0 0 0)) (list (list 14 8 0) (om-make-color 0 0 0)) (list (list 14 9) (om-make-color 0 0 0)) (list (list 14 9 0) (om-make-color 0 0 0)) (list (list 14 10) (om-make-color 0 0 0)) (list (list 14 10 0) (om-make-color 0 0 0)) (list (list 14 11) (om-make-color 0 0 0)) (list (list 14 11 0) (om-make-color 0 0 0)) (list (list 14 12) (om-make-color 0 0 0)) (list (list 14 12 0) (om-make-color 0 0 0)) (list (list 14 13) (om-make-color 0 0 0)) (list (list 14 13 0) (om-make-color 0 0 0)) (list (list 14 14) (om-make-color 0 0 0)) (list (list 14 14 0) (om-make-color 0 0 0)) (list (list 14 15) (om-make-color 0 0 0)) (list (list 14 15 0) (om-make-color 0 0 0)) (list (list 14 16) (om-make-color 0 0 0)) (list (list 14 16 0) (om-make-color 0 0 0)) (list (list 14 17) (om-make-color 0 0 0)) (list (list 14 17 0) (om-make-color 0 0 0)) (list (list 14 18) (om-make-color 0 0 0)) (list (list 14 18 0) (om-make-color 0 0 0)) (list (list 14 19) (om-make-color 0 0 0)) (list (list 14 19 0) (om-make-color 0 0 0)) (list (list 14 20) (om-make-color 0 0 0)) (list (list 14 20 0) (om-make-color 0 0 0)) (list (list 14 21) (om-make-color 0 0 0)) (list (list 14 21 0) (om-make-color 0 0 0)) (list (list 14 22) (om-make-color 0 0 0)) (list (list 14 22 0) (om-make-color 0 0 0)) (list (list 14 23) (om-make-color 0 0 0)) (list (list 14 23 0) (om-make-color 0 0 0)) (list (list 14 24) (om-make-color 0 0 0)) (list (list 14 24 0) (om-make-color 0 0 0)) (list (list 14 25) (om-make-color 0 0 0)) (list (list 14 25 0) (om-make-color 0 0 0)) (list (list 14 26) (om-make-color 0 0 0)) (list (list 14 26 0) (om-make-color 0 0 0)) (list (list 14 27) (om-make-color 0 0 0)) (list (list 14 27 0) (om-make-color 0 0 0)) (list (list 14 28) (om-make-color 0 0 0)) (list (list 14 28 0) (om-make-color 0 0 0)) (list (list 14 29) (om-make-color 0 0 0)) (list (list 14 29 0) (om-make-color 0 0 0)) (list (list 14 30) (om-make-color 0 0 0)) (list (list 14 30 0) (om-make-color 0 0 0)) (list (list 14 31) (om-make-color 0 0 0)) (list (list 14 31 0) (om-make-color 0 0 0)) (list (list 14 32) (om-make-color 0 0 0)) (list (list 14 32 0) (om-make-color 0 0 0)) (list (list 14 33) (om-make-color 0 0 0)) (list (list 14 33 0) (om-make-color 0 0 0)) (list (list 14 34) (om-make-color 0 0 0)) (list (list 14 34 0) (om-make-color 0 0 0)) (list (list 14 35) (om-make-color 0 0 0)) (list (list 14 35 0) (om-make-color 0 0 0)) (list (list 14 36) (om-make-color 0 0 0)) (list (list 14 36 0) (om-make-color 0 0 0)) (list (list 14 37) (om-make-color 0 0 0)) (list (list 14 37 0) (om-make-color 0 0 0)) (list (list 14 38) (om-make-color 0 0 0)) (list (list 14 38 0) (om-make-color 0 0 0)) (list (list 14 39) (om-make-color 0 0 0)) (list (list 14 39 0) (om-make-color 0 0 0)) (list (list 14 40) (om-make-color 0 0 0)) (list (list 14 40 0) (om-make-color 0 0 0)) (list (list 14 41) (om-make-color 0 0 0)) (list (list 14 41 0) (om-make-color 0 0 0)) (list (list 14 42) (om-make-color 0 0 0)) (list (list 14 42 0) (om-make-color 0 0 0)) (list (list 14 43) (om-make-color 0 0 0)) (list (list 14 43 0) (om-make-color 0 0 0)) (list (list 14 44) (om-make-color 0 0 0)) (list (list 14 44 0) (om-make-color 0 0 0)) (list (list 14 45) (om-make-color 0 0 0)) (list (list 14 45 0) (om-make-color 0 0 0)) (list (list 14 46) (om-make-color 0 0 0)) (list (list 14 46 0) (om-make-color 0 0 0)) (list (list 14 47) (om-make-color 0 0 0)) (list (list 14 47 0) (om-make-color 0 0 0)) (list (list 15) (om-make-color 0 0 0)) (list (list 15 0) (om-make-color 0 0 0)) (list (list 15 0 0) (om-make-color 0 0 0)) (list (list 15 1) (om-make-color 0 0 0)) (list (list 15 1 0) (om-make-color 0 0 0)) (list (list 15 2) (om-make-color 0 0 0)) (list (list 15 2 0) (om-make-color 0 0 0)) (list (list 15 3) (om-make-color 0 0 0)) (list (list 15 3 0) (om-make-color 0 0 0)) (list (list 15 4) (om-make-color 0 0 0)) (list (list 15 4 0) (om-make-color 0 0 0)) (list (list 15 5) (om-make-color 0 0 0)) (list (list 15 5 0) (om-make-color 0 0 0)) (list (list 15 6) (om-make-color 0 0 0)) (list (list 15 6 0) (om-make-color 0 0 0)) (list (list 15 7) (om-make-color 0 0 0)) (list (list 15 7 0) (om-make-color 0 0 0)) (list (list 15 8) (om-make-color 0 0 0)) (list (list 15 8 0) (om-make-color 0 0 0)) (list (list 15 9) (om-make-color 0 0 0)) (list (list 15 9 0) (om-make-color 0 0 0)) (list (list 15 10) (om-make-color 0 0 0)) (list (list 15 10 0) (om-make-color 0 0 0)) (list (list 15 11) (om-make-color 0 0 0)) (list (list 15 11 0) (om-make-color 0 0 0)) (list (list 15 12) (om-make-color 0 0 0)) (list (list 15 12 0) (om-make-color 0 0 0)) (list (list 15 13) (om-make-color 0 0 0)) (list (list 15 13 0) (om-make-color 0 0 0)) (list (list 15 14) (om-make-color 0 0 0)) (list (list 15 14 0) (om-make-color 0 0 0)) (list (list 15 15) (om-make-color 0 0 0)) (list (list 15 15 0) (om-make-color 0 0 0)) (list (list 15 16) (om-make-color 0 0 0)) (list (list 15 16 0) (om-make-color 0 0 0)) (list (list 15 17) (om-make-color 0 0 0)) (list (list 15 17 0) (om-make-color 0 0 0)) (list (list 15 18) (om-make-color 0 0 0)) (list (list 15 18 0) (om-make-color 0 0 0)) (list (list 15 19) (om-make-color 0 0 0)) (list (list 15 19 0) (om-make-color 0 0 0)) (list (list 15 20) (om-make-color 0 0 0)) (list (list 15 20 0) (om-make-color 0 0 0)) (list (list 15 21) (om-make-color 0 0 0)) (list (list 15 21 0) (om-make-color 0 0 0)) (list (list 15 22) (om-make-color 0 0 0)) (list (list 15 22 0) (om-make-color 0 0 0)) (list (list 15 23) (om-make-color 0 0 0)) (list (list 15 23 0) (om-make-color 0 0 0)) (list (list 15 24) (om-make-color 0 0 0)) (list (list 15 24 0) (om-make-color 0 0 0)) (list (list 15 25) (om-make-color 0 0 0)) (list (list 15 25 0) (om-make-color 0 0 0)) (list (list 15 26) (om-make-color 0 0 0)) (list (list 15 26 0) (om-make-color 0 0 0)) (list (list 15 27) (om-make-color 0 0 0)) (list (list 15 27 0) (om-make-color 0 0 0)) (list (list 15 28) (om-make-color 0 0 0)) (list (list 15 28 0) (om-make-color 0 0 0)) (list (list 15 29) (om-make-color 0 0 0)) (list (list 15 29 0) (om-make-color 0 0 0)) (list (list 15 30) (om-make-color 0 0 0)) (list (list 15 30 0) (om-make-color 0 0 0)) (list (list 15 31) (om-make-color 0 0 0)) (list (list 15 31 0) (om-make-color 0 0 0)) (list (list 15 32) (om-make-color 0 0 0)) (list (list 15 32 0) (om-make-color 0 0 0)) (list (list 15 33) (om-make-color 0 0 0)) (list (list 15 33 0) (om-make-color 0 0 0)) (list (list 15 34) (om-make-color 0 0 0)) (list (list 15 34 0) (om-make-color 0 0 0)) (list (list 15 35) (om-make-color 0 0 0)) (list (list 15 35 0) (om-make-color 0 0 0)) (list (list 15 36) (om-make-color 0 0 0)) (list (list 15 36 0) (om-make-color 0 0 0)) (list (list 15 37) (om-make-color 0 0 0)) (list (list 15 37 0) (om-make-color 0 0 0)) (list (list 15 38) (om-make-color 0 0 0)) (list (list 15 38 0) (om-make-color 0 0 0)) (list (list 15 39) (om-make-color 0 0 0)) (list (list 15 39 0) (om-make-color 0 0 0)) (list (list 15 40) (om-make-color 0 0 0)) (list (list 15 40 0) (om-make-color 0 0 0)) (list (list 15 41) (om-make-color 0 0 0)) (list (list 15 41 0) (om-make-color 0 0 0)) (list (list 15 42) (om-make-color 0 0 0)) (list (list 15 42 0) (om-make-color 0 0 0)) (list (list 15 43) (om-make-color 0 0 0)) (list (list 15 43 0) (om-make-color 0 0 0)) (list (list 15 44) (om-make-color 0 0 0)) (list (list 15 44 0) (om-make-color 0 0 0)) (list (list 15 45) (om-make-color 0 0 0)) (list (list 15 45 0) (om-make-color 0 0 0)) (list (list 15 46) (om-make-color 0 0 0)) (list (list 15 46 0) (om-make-color 0 0 0)) (list (list 15 47) (om-make-color 0 0 0)) (list (list 15 47 0) (om-make-color 0 0 0)) (list (list 16) (om-make-color 0 0 0)) (list (list 16 0) (om-make-color 0 0 0)) (list (list 16 0 0) (om-make-color 0 0 0)) (list (list 16 1) (om-make-color 0 0 0)) (list (list 16 1 0) (om-make-color 0 0 0)) (list (list 16 2) (om-make-color 0 0 0)) (list (list 16 2 0) (om-make-color 0 0 0)) (list (list 16 3) (om-make-color 0 0 0)) (list (list 16 3 0) (om-make-color 0 0 0)) (list (list 16 4) (om-make-color 0 0 0)) (list (list 16 4 0) (om-make-color 0 0 0)) (list (list 16 5) (om-make-color 0 0 0)) (list (list 16 5 0) (om-make-color 0 0 0)) (list (list 16 6) (om-make-color 0 0 0)) (list (list 16 6 0) (om-make-color 0 0 0)) (list (list 16 7) (om-make-color 0 0 0)) (list (list 16 7 0) (om-make-color 0 0 0)) (list (list 16 8) (om-make-color 0 0 0)) (list (list 16 8 0) (om-make-color 0 0 0)) (list (list 16 9) (om-make-color 0 0 0)) (list (list 16 9 0) (om-make-color 0 0 0)) (list (list 16 10) (om-make-color 0 0 0)) (list (list 16 10 0) (om-make-color 0 0 0)) (list (list 16 11) (om-make-color 0 0 0)) (list (list 16 11 0) (om-make-color 0 0 0)) (list (list 16 12) (om-make-color 0 0 0)) (list (list 16 12 0) (om-make-color 0 0 0)) (list (list 16 13) (om-make-color 0 0 0)) (list (list 16 13 0) (om-make-color 0 0 0)) (list (list 16 14) (om-make-color 0 0 0)) (list (list 16 14 0) (om-make-color 0 0 0)) (list (list 16 15) (om-make-color 0 0 0)) (list (list 16 15 0) (om-make-color 0 0 0)) (list (list 16 16) (om-make-color 0 0 0)) (list (list 16 16 0) (om-make-color 0 0 0)) (list (list 16 17) (om-make-color 0 0 0)) (list (list 16 17 0) (om-make-color 0 0 0)) (list (list 16 18) (om-make-color 0 0 0)) (list (list 16 18 0) (om-make-color 0 0 0)) (list (list 16 19) (om-make-color 0 0 0)) (list (list 16 19 0) (om-make-color 0 0 0)) (list (list 16 20) (om-make-color 0 0 0)) (list (list 16 20 0) (om-make-color 0 0 0)) (list (list 16 21) (om-make-color 0 0 0)) (list (list 16 21 0) (om-make-color 0 0 0)) (list (list 16 22) (om-make-color 0 0 0)) (list (list 16 22 0) (om-make-color 0 0 0)) (list (list 16 23) (om-make-color 0 0 0)) (list (list 16 23 0) (om-make-color 0 0 0)) (list (list 16 24) (om-make-color 0 0 0)) (list (list 16 24 0) (om-make-color 0 0 0)) (list (list 16 25) (om-make-color 0 0 0)) (list (list 16 25 0) (om-make-color 0 0 0)) (list (list 16 26) (om-make-color 0 0 0)) (list (list 16 26 0) (om-make-color 0 0 0)) (list (list 16 27) (om-make-color 0 0 0)) (list (list 16 27 0) (om-make-color 0 0 0)) (list (list 16 28) (om-make-color 0 0 0)) (list (list 16 28 0) (om-make-color 0 0 0)) (list (list 16 29) (om-make-color 0 0 0)) (list (list 16 29 0) (om-make-color 0 0 0)) (list (list 16 30) (om-make-color 0 0 0)) (list (list 16 30 0) (om-make-color 0 0 0)) (list (list 16 31) (om-make-color 0 0 0)) (list (list 16 31 0) (om-make-color 0 0 0)) (list (list 16 32) (om-make-color 0 0 0)) (list (list 16 32 0) (om-make-color 0 0 0)) (list (list 16 33) (om-make-color 0 0 0)) (list (list 16 33 0) (om-make-color 0 0 0)) (list (list 16 34) (om-make-color 0 0 0)) (list (list 16 34 0) (om-make-color 0 0 0)) (list (list 16 35) (om-make-color 0 0 0)) (list (list 16 35 0) (om-make-color 0 0 0)) (list (list 16 36) (om-make-color 0 0 0)) (list (list 16 36 0) (om-make-color 0 0 0)) (list (list 16 37) (om-make-color 0 0 0)) (list (list 16 37 0) (om-make-color 0 0 0)) (list (list 16 38) (om-make-color 0 0 0)) (list (list 16 38 0) (om-make-color 0 0 0)) (list (list 16 39) (om-make-color 0 0 0)) (list (list 16 39 0) (om-make-color 0 0 0)) (list (list 16 40) (om-make-color 0 0 0)) (list (list 16 40 0) (om-make-color 0 0 0)) (list (list 16 41) (om-make-color 0 0 0)) (list (list 16 41 0) (om-make-color 0 0 0)) (list (list 16 42) (om-make-color 0 0 0)) (list (list 16 42 0) (om-make-color 0 0 0)) (list (list 16 43) (om-make-color 0 0 0)) (list (list 16 43 0) (om-make-color 0 0 0)) (list (list 16 44) (om-make-color 0 0 0)) (list (list 16 44 0) (om-make-color 0 0 0)) (list (list 16 45) (om-make-color 0 0 0)) (list (list 16 45 0) (om-make-color 0 0 0)) (list (list 16 46) (om-make-color 0 0 0)) (list (list 16 46 0) (om-make-color 0 0 0)) (list (list 16 47) (om-make-color 0 0 0)) (list (list 16 47 0) (om-make-color 0 0 0)) (list (list 17) (om-make-color 0 0 0)) (list (list 17 0) (om-make-color 0 0 0)) (list (list 17 0 0) (om-make-color 0 0 0)) (list (list 17 1) (om-make-color 0 0 0)) (list (list 17 1 0) (om-make-color 0 0 0)) (list (list 17 2) (om-make-color 0 0 0)) (list (list 17 2 0) (om-make-color 0 0 0)) (list (list 17 3) (om-make-color 0 0 0)) (list (list 17 3 0) (om-make-color 0 0 0)) (list (list 17 4) (om-make-color 0 0 0)) (list (list 17 4 0) (om-make-color 0 0 0)) (list (list 17 5) (om-make-color 0 0 0)) (list (list 17 5 0) (om-make-color 0 0 0)) (list (list 17 6) (om-make-color 0 0 0)) (list (list 17 6 0) (om-make-color 0 0 0)) (list (list 17 7) (om-make-color 0 0 0)) (list (list 17 7 0) (om-make-color 0 0 0)) (list (list 17 8) (om-make-color 0 0 0)) (list (list 17 8 0) (om-make-color 0 0 0)) (list (list 17 9) (om-make-color 0 0 0)) (list (list 17 9 0) (om-make-color 0 0 0)) (list (list 17 10) (om-make-color 0 0 0)) (list (list 17 10 0) (om-make-color 0 0 0)) (list (list 17 11) (om-make-color 0 0 0)) (list (list 17 11 0) (om-make-color 0 0 0)) (list (list 17 12) (om-make-color 0 0 0)) (list (list 17 12 0) (om-make-color 0 0 0)) (list (list 17 13) (om-make-color 0 0 0)) (list (list 17 13 0) (om-make-color 0 0 0)) (list (list 17 14) (om-make-color 0 0 0)) (list (list 17 14 0) (om-make-color 0 0 0)) (list (list 17 15) (om-make-color 0 0 0)) (list (list 17 15 0) (om-make-color 0 0 0)) (list (list 17 16) (om-make-color 0 0 0)) (list (list 17 16 0) (om-make-color 0 0 0)) (list (list 17 17) (om-make-color 0 0 0)) (list (list 17 17 0) (om-make-color 0 0 0)) (list (list 17 18) (om-make-color 0 0 0)) (list (list 17 18 0) (om-make-color 0 0 0)) (list (list 17 19) (om-make-color 0 0 0)) (list (list 17 19 0) (om-make-color 0 0 0)) (list (list 17 20) (om-make-color 0 0 0)) (list (list 17 20 0) (om-make-color 0 0 0)) (list (list 17 21) (om-make-color 0 0 0)) (list (list 17 21 0) (om-make-color 0 0 0)) (list (list 17 22) (om-make-color 0 0 0)) (list (list 17 22 0) (om-make-color 0 0 0)) (list (list 17 23) (om-make-color 0 0 0)) (list (list 17 23 0) (om-make-color 0 0 0)) (list (list 17 24) (om-make-color 0 0 0)) (list (list 17 24 0) (om-make-color 0 0 0)) (list (list 17 25) (om-make-color 0 0 0)) (list (list 17 25 0) (om-make-color 0 0 0)) (list (list 17 26) (om-make-color 0 0 0)) (list (list 17 26 0) (om-make-color 0 0 0)) (list (list 17 27) (om-make-color 0 0 0)) (list (list 17 27 0) (om-make-color 0 0 0)) (list (list 17 28) (om-make-color 0 0 0)) (list (list 17 28 0) (om-make-color 0 0 0)) (list (list 17 29) (om-make-color 0 0 0)) (list (list 17 29 0) (om-make-color 0 0 0)) (list (list 17 30) (om-make-color 0 0 0)) (list (list 17 30 0) (om-make-color 0 0 0)) (list (list 17 31) (om-make-color 0 0 0)) (list (list 17 31 0) (om-make-color 0 0 0)) (list (list 17 32) (om-make-color 0 0 0)) (list (list 17 32 0) (om-make-color 0 0 0)) (list (list 17 33) (om-make-color 0 0 0)) (list (list 17 33 0) (om-make-color 0 0 0)) (list (list 17 34) (om-make-color 0 0 0)) (list (list 17 34 0) (om-make-color 0 0 0)) (list (list 17 35) (om-make-color 0 0 0)) (list (list 17 35 0) (om-make-color 0 0 0)) (list (list 17 36) (om-make-color 0 0 0)) (list (list 17 36 0) (om-make-color 0 0 0)) (list (list 17 37) (om-make-color 0 0 0)) (list (list 17 37 0) (om-make-color 0 0 0)) (list (list 17 38) (om-make-color 0 0 0)) (list (list 17 38 0) (om-make-color 0 0 0)) (list (list 17 39) (om-make-color 0 0 0)) (list (list 17 39 0) (om-make-color 0 0 0)) (list (list 17 40) (om-make-color 0 0 0)) (list (list 17 40 0) (om-make-color 0 0 0)) (list (list 17 41) (om-make-color 0 0 0)) (list (list 17 41 0) (om-make-color 0 0 0)) (list (list 17 42) (om-make-color 0 0 0)) (list (list 17 42 0) (om-make-color 0 0 0)) (list (list 17 43) (om-make-color 0 0 0)) (list (list 17 43 0) (om-make-color 0 0 0)) (list (list 17 44) (om-make-color 0 0 0)) (list (list 17 44 0) (om-make-color 0 0 0)) (list (list 17 45) (om-make-color 0 0 0)) (list (list 17 45 0) (om-make-color 0 0 0)) (list (list 17 46) (om-make-color 0 0 0)) (list (list 17 46 0) (om-make-color 0 0 0)) (list (list 17 47) (om-make-color 0 0 0)) (list (list 17 47 0) (om-make-color 0 0 0)))) (set-extra-pairs newobj 'nil) (set-patch-pairs newobj '((nil (om-load-patch-abs1 "patch" 'nil 'nil 5.0 nil)))) (set-tonalite newobj nil) newobj)) nil nil (corrige (pairlis '(show-stems approx fontsize staff cmnpref deltapict outport inport zoom notechancolor? grillestep mode winsize winpos palette-mode obj-mode) (list 't 2 24 (list 'g 'g 'g 'g 'g 'g 'g 'g 'g 'g 'g 'g 'g 'g 'g 'g 'g 'g) (let ((newobj (make-instance 'edition-values))) (setf (paper-size newobj) (om-make-point 600 800)) (setf (top-margin newobj) 2) (setf (left-margin newobj) 1) (setf (right-margin newobj) 1) (setf (bottom-margin newobj) 1) (setf (orientation newobj) nil) (setf (scale newobj) nil) (setf (system-space newobj) '(1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1)) (setf (line-space newobj) 1) (setf (title newobj) nil) (setf (show-title? newobj) nil) (setf (show-page? newobj) nil) (setf (sheet-id newobj) nil) (setf (page-mode newobj) nil) newobj) (om-make-point 0 0) 1 1 133/100 nil 150 0 18350450 2621450 0 0))) t nil nil) (om-load-boxcall 'bastype "aux" 't 'nil (om-make-point 858 223) (om-make-point 41 20) 200 "200" nil) (om-load-boxcall 'bastype "aux4" 't 'nil (om-make-point 799 157) (om-make-point 94 20) (list 57 12 12 3 12 12) "(57 12 12 3 12 12)" nil) (om-load-boxcall 'bastype "aux3" 't 'nil (om-make-point 689 93) (om-make-point 173 20) (list 30 4 1 1 7 1 8 1 13 6 16 1 8 1 4 4 1 1) "(30 4 1 1 7 1 8 1 13 6 16 1 8 1 4 4 1 1)" nil) (om-load-boxcall 'genfun "CANONS" 'canons '((om-load-inputfun 'input-funbox "no documentation" "R" nil) (om-load-inputfun 'input-funbox "no documentation" "S" nil) (om-load-inputfun 'input-funbox "no documentation" "TIMES" 3) (om-load-inputfun 'input-keyword "Choose from this list (sign mindiv beats poly?)" "Keyword input" ':beats)) (om-make-point 726 262) (om-make-point 143 61) nil nil nil 1) (om-load-boxcomment "comment" (om-make-point 649 50) '"List of Vuza Canons of period 108" "" (om-make-point 188 5) nil (om-make-color 10/51 52/255 199/255) (om-make-font "Geneva" 36 :family nil :style 'nil :mode nil))) '((1 0 0 2 nil 0) (6 0 1 0 nil 0) (5 0 1 1 nil 0) (5 0 2 0 nil 0) (6 0 2 1 nil 0) (5 0 3 2 nil 0) (4 0 5 0 nil 0) (7 0 6 0 nil 0) (26 0 10 0 nil 0) (6 0 11 2 nil 0) (2 0 14 2 nil 0) (23 2 17 0 nil 0) (19 0 20 0 nil 0) (17 0 20 1 nil 0) (18 0 21 0 nil 0) (20 0 21 1 nil 0) (22 0 23 2 nil 0) (21 0 25 1 nil 0) (31 0 26 0 nil 0) (25 1 26 1 nil 0) (26 0 27 0 nil 0) (30 0 31 0 nil 0) (29 0 31 1 nil 0) (24 0 31 2 nil 0) (28 0 31 3 nil 0)) (list (let ((newpict (make-instance 'patch-picture :name '|USER-boitezn|))) (setf (thepict newpict) (om-get-picture '|USER-boitezn|)) (setf (name newpict) '|USER-boitezn|) (setf (pict-pos newpict) (om-make-point 19 213)) (setf (pict-size newpict) (om-make-point 80 63)) newpict) (let ((newpict (make-instance 'patch-picture :name '|USER-ciel|))) (setf (thepict newpict) (om-get-picture '|USER-ciel|)) (setf (name newpict) '|USER-ciel|) (setf (pict-pos newpict) (om-make-point 100 96)) (setf (pict-size newpict) (om-make-point 293 311)) newpict) (let ((newpict (make-instance 'patch-picture :name '|USER-ciel|))) (setf (thepict newpict) (om-get-picture '|USER-ciel|)) (setf (name newpict) '|USER-ciel|) (setf (pict-pos newpict) (om-make-point 97 432)) (setf (pict-size newpict) (om-make-point 636 204)) newpict)) 5.0))
