; OM File Header - Saved 2014/04/26 5:39:37
; (6.04 :patc (om-make-point 117 15) (om-make-point 70 98) (om-make-point 988 750) "No documentation " 183 0 nil "2014/04/26 5:39:37")
; End File Header
(in-package :om)(load-lib-for 'nil)(setf *om-current-persistent* (om-load-patch1 "02-algoVuza" '((om-load-boxcomment "comment1" (om-make-point 605 50) '"The construction of Vuza Canons" "" (om-make-point 119 5) nil (om-make-color 10/51 52/255 199/255) (om-make-font "Geneva" 36 :family nil :style 'nil :mode nil)) (om-load-boxcall 'bastype "aux6" 't 'nil (om-make-point 543 541) (om-make-point 130 20) (list 1 3 3 6 11 4 9 6 5 1 3 20) "(1 3 3 6 11 4 9 6 5 1 3 20)" nil) (om-load-boxcall 'bastype "aux7" 't 'nil (om-make-point 746 580) (om-make-point 12 22) 4 "4" nil) (om-load-boxcall 'bastype "aux6" 't 'nil (om-make-point 792 537) (om-make-point 68 22) (list 8 8 2 8 8 38) "(8 8 2 8 8 38)" nil) (om-load-boxcall 'bastype "aux5" 't 'nil (om-make-point 466 554) (om-make-point 19 22) 6 "6" nil) (om-load-boxcall 'bastype "aux4" 't 'nil (om-make-point 312 561) (om-make-point 26 22) 72 "72" nil) (om-load-boxcall 'bastype "aux3" 't 'nil (om-make-point 717 209) (om-make-point 26 22) 72 "72" nil) (om-load-boxcall 'bastype "aux2" 't 'nil (om-make-point 901 38) (om-make-point 19 22) 72 "72" nil) (om-load-boxcall 'genfun "CANONS" 'canons '((om-load-inputfun 'input-funbox "no documentation" "R" nil) (om-load-inputfun 'input-funbox "no documentation" "S" nil) (om-load-inputfun 'input-funbox "no documentation" "TIMES" 4)) (om-make-point 679 582) nil nil nil nil 1) (om-load-boxcall 'genfun "PATTERNS" 'patterns '((om-load-inputfun 'input-funbox "periode" "N" 440) (om-load-inputfun 'input-funbox "numbre de voix" "NUMVOICES" 22)) (om-make-point 381 586) nil nil nil nil 2) (om-load-boxcall 'genfun "INFOCANONS" 'infocanons '((om-load-inputfun 'input-funbox "periode" "N" 440)) (om-make-point 697 244) nil nil nil nil 1) (om-load-boxcall 'genfun "DECOMPO" 'decompo '((om-load-inputfun 'input-funbox "periode" "N" 72)) (om-make-point 881 68) nil nil nil nil 1) (om-load-boxcomment "comment" (om-make-point 482 184) '"$72   = (2 3 2 3 2)	$108 = (2 3 2 3 3)	$120 = (2 3 2 5 2)	(2 5 2 3 2)	$144 = (2 3 2 3 4)	(2 3 4 3 2)	$168 = (2 3 2 7 2)	(2 7 2 3 2)	$180 = (2 3 2 5 3)	(2 3 2 3 5)	(2 3 5 3 2)	(2 5 2 3 3)	(3 5 3 2 2)$200 = (2 5 2 5 2)	$216 = (2 3 2 3 6)	(2 3 2 9 2)	(2 3 4 3 3)$...$" "" (om-make-point 193 325) nil (om-make-color 0 0 0) (om-make-font "Geneva" 14 :family nil :style 'nil :mode nil)) (om-load-boxcomment "comment" (om-make-point 115 28) '"Vuza (1991-)" "" (om-make-point 637 161) nil (om-make-color 28/85 41/255 1) (om-make-font "Geneva" 12 :family nil :style 'nil :mode nil)) (om-load-boxcomment "comment" (om-make-point 79 24) '"=p1p2n3" "" (om-make-point 611 276) nil (om-make-color 28/85 41/255 1) (om-make-font "Geneva" 12 :family nil :style 'nil :mode nil)) (om-load-boxcomment "comment" (om-make-point 67 25) '"=n1n2" "" (om-make-point 611 256) nil (om-make-color 28/85 41/255 1) (om-make-font "Geneva" 12 :family nil :style 'nil :mode nil)) (om-load-boxcomment "comment" (om-make-point 318 27) '"Non Hajos cyclic groups (Sands 1959)" "" (om-make-point 141 184) nil (om-make-color 28/85 41/255 1) (om-make-font "Geneva" 12 :family nil :style 'nil :mode nil)) (om-load-boxcomment "comment" (om-make-point 168 45) '"Number of voices$Number of attacks" "" (om-make-point 437 256) nil (om-make-color 9/17 12/85 71/255) (om-make-font "Geneva" 14 :family nil :style 'nil :mode nil)) (om-load-boxcomment "comment" (om-make-point 156 81) '"n=p1p2n1n2n3$- pi different primes$- (p1n1,p2n2)=1$- n3>1$" "" (om-make-point 627 74) nil (om-make-color 0 0 0) (om-make-font "Geneva" 14 :family nil :style 'nil :mode nil)) (om-load-boxcomment "comment" (om-make-point 229 101) '"(72 108 120 144 168 180 200 216 240 252 264 270 280 288 300 312 324 336 360 378 392 396 400 408 420 432 440 450 456 468 480 500)" "" (om-make-point 172 79) nil (om-make-color 0 0 0) (om-make-font "Geneva" 14 :family nil :style 'nil :mode nil)) (om-load-boxcomment "comment" (om-make-point 65 48) '"good periods $        ->" "" (om-make-point 17 104) nil (om-make-color 4/15 59/255 1) (om-make-font "Geneva" 10 :family nil :style 'nil :mode nil)) (om-load-boxcall 'bastype "aux1" 't 'nil (om-make-point 114 78) (om-make-point 23 20) 500 "500" nil) (om-load-boxcall 'bastype "aux" 't 'nil (om-make-point 84 78) (om-make-point 11 20) 0 "0" nil) (om-load-boxcall 'genfun "CANON-N1" 'canon-n '((om-load-inputfun 'input-funbox "min" "A" 0) (om-load-inputfun 'input-funbox "max" "B" 500)) (om-make-point 89 104) nil nil nil nil 1)) '((1 0 8 0 nil 0) (3 0 8 1 nil 0) (2 0 8 2 nil 0) (5 0 9 0 nil 0) (4 0 9 1 nil 0) (6 0 10 0 nil 0) (7 0 11 0 nil 0) (22 0 23 0 nil 0) (21 0 23 1 nil 0)) (list (let ((newpict (make-instance 'patch-picture :name '|USER-fleche2|))) (setf (thepict newpict) (om-get-picture '|USER-fleche2|)) (setf (name newpict) '|USER-fleche2|) (setf (pict-pos newpict) (om-make-point 443 105)) (setf (pict-size newpict) (om-make-point 149 33)) newpict) (let ((newpict (make-instance 'patch-picture :name '|USER-fleche1|))) (setf (thepict newpict) (om-get-picture '|USER-fleche1|)) (setf (name newpict) '|USER-fleche1|) (setf (pict-pos newpict) (om-make-point 802 197)) (setf (pict-size newpict) (om-make-point 104 78)) newpict) (let ((newpict (make-instance 'patch-picture :name '|USER-fleche3|))) (setf (thepict newpict) (om-get-picture '|USER-fleche3|)) (setf (name newpict) '|USER-fleche3|) (setf (pict-pos newpict) (om-make-point 209 244)) (setf (pict-size newpict) (om-make-point 195 89)) newpict) (let ((newpict (make-instance 'patch-picture :name '|USER-ciel|))) (setf (thepict newpict) (om-get-picture '|USER-ciel|)) (setf (name newpict) '|USER-ciel|) (setf (pict-pos newpict) (om-make-point 839 20)) (setf (pict-size newpict) (om-make-point 321 175)) newpict) (let ((newpict (make-instance 'patch-picture :name '|USER-ciel|))) (setf (thepict newpict) (om-get-picture '|USER-ciel|)) (setf (name newpict) '|USER-ciel|) (setf (pict-pos newpict) (om-make-point 15 495)) (setf (pict-size newpict) (om-make-point 1123 276)) newpict)) 5.0))
