; OM File Header - Saved 2014/04/26 5:39:37
; (6.04 :patc (om-make-point 10 85) (om-make-point 50 50) (om-make-point 868 656) "No documentation " 183 0 nil "2014/04/26 5:39:37")
; End File Header
(in-package :om)(load-lib-for 'nil)(setf *om-current-persistent* (om-load-patch1 "04-decompo&info" '((om-load-boxcomment "comment1" (om-make-point 312 34) '"(and check-in of the future canon)" "" (om-make-point 264 52) nil (om-make-color 10/51 52/255 199/255) (om-make-font "Geneva" 18 :family nil :style 'nil :mode nil)) (om-load-boxcomment "comment" (om-make-point 295 65) '"The number of voices is always equal to the product of n1 and n2" "" (om-make-point 477 412) nil (om-make-color 19/51 29/85 1) (om-make-font "Geneva" 14 :family nil :style 'nil :mode nil)) (om-load-boxcomment "comment1" (om-make-point 605 50) '"Decomposition of a good period" "" (om-make-point 136 1) nil (om-make-color 10/51 52/255 199/255) (om-make-font "Geneva" 36 :family nil :style 'nil :mode nil)) (om-load-boxcomment "comment" (om-make-point 125 60) '"number of voices and number of attacks of a rhythmic pattern $--->" "" (om-make-point 17 336) nil (om-make-color 4/15 59/255 1) (om-make-font "Geneva" 10 :family nil :style 'nil :mode nil)) (om-load-boxcall 'bastype "aux" 't 'nil (om-make-point 300 267) (om-make-point 17 20) 72 "72" nil) (om-load-boxcall 'genfun "INFOCANONS1" 'infocanons '((om-load-inputfun 'input-funbox "periode" "N" 72)) (om-make-point 299 346) nil nil nil nil 1) (om-load-boxcomment "comment" (om-make-point 273 66) '"Evaluate the output in order to see how the smallest 'good period' can be decomposed. " "" (om-make-point 482 334) nil (om-make-color 19/51 29/85 1) (om-make-font "Geneva" 14 :family nil :style 'nil :mode nil)) (om-load-boxcomment "comment" (om-make-point 259 81) '"1) p1 and p2 are different primes$2) The product p1n1 is relatively prime with the product p2n2$3) n3 is an integer greater than 1" "" (om-make-point 500 226) nil (om-make-color 19/51 29/85 1) (om-make-font "Geneva" 14 :family nil :style 'nil :mode nil)) (om-load-boxcomment "comment" (om-make-point 289 76) '"If the period n is a 'good period', we may ask to its decomposition into five numbers (p1 p2 n1 n2 n3) where:$" "" (om-make-point 486 123) nil (om-make-color 19/51 29/85 1) (om-make-font "Geneva" 14 :family nil :style 'nil :mode nil)) (om-load-boxcall 'bastype "aux9" 't 'nil (om-make-point 283 108) (om-make-point 33 20) 72 "72" nil) (om-load-boxcall 'genfun "DECOMPO" 'decompo '((om-load-inputfun 'input-funbox "periode" "N" 72)) (om-make-point 285 159) nil nil nil nil 1) (om-load-boxcomment "comment" (om-make-point 125 60) '"decomposition of the integer 72 into 5 numbers $--->" "" (om-make-point 15 161) nil (om-make-color 4/15 59/255 1) (om-make-font "Geneva" 10 :family nil :style 'nil :mode nil))) '((4 0 5 0 nil 0) (9 0 10 0 nil 0)) (list (let ((newpict (make-instance 'patch-picture :name '|USER-ciel|))) (setf (thepict newpict) (om-get-picture '|USER-ciel|)) (setf (name newpict) '|USER-ciel|) (setf (pict-pos newpict) (om-make-point 151 82)) (setf (pict-size newpict) (om-make-point 321 359)) newpict)) 5.0))
