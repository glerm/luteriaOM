; OM File Header - Saved 2014/04/26 5:39:38
; (6.04 :patc (om-make-point 149 102) (om-make-point 50 50) (om-make-point 972 636) "non documentation" 183 0 nil "2014/04/26 5:39:38")
; End File Header
(in-package :om)(load-lib-for 'nil)(setf *om-current-persistent* (om-load-patch1 "04-List" '((om-load-editor-box1 "TEXTFILE" 'textfile '((om-load-inputfun 'input-funbox "object or object list" "self" nil) (om-load-inputfun 'input-funbox "text to put in the file" "exp-list" nil) (om-load-inputfunmenu1 'input-funmenu "append or supersede mode" "ed-mode" "append" (list (list "append" "append") (list "supersede" "supersede")))) (om-make-point 512 185) (om-make-point 148 227) (load-buffer-textfile '(";=============PERIOD 4============" "'(4" "(((1 1 1 1) nil (2 4)))" "(((1 1) (1 0 1) (2)))" "(((1 0 1) (1 1) (4)))" ")" ";=============PERIOD 6============" "'(6" "(((1 1) (1 0 1 0 1) (2)))" "(((1 1 1) (1 0 0 1) (3)))" "(((1 0 0 1) (1 1 1) (2 6)))" "(((1 0 1 0 1) (1 1) (3 6)))" ")" ";=============PERIOD 8============" "'(8" "(((1 1 1 1 1 1 1 1) nil (2 4 8)))" "(((1 1) (1 0 1 0 1 0 1) (2)))" "(((1 0 1) (1 1 0 0 1 1) (4)))" "(((1 0 0 0 1) (1 1 1 1) (8)))" "(((1 1 1 1) (1 0 0 0 1) (2 4)))" "(((1 1 0 0 1 1) (1 0 1) (2 8)))" "(((1 0 1 0 1 0 1) (1 1) (4 8)))" ")" ";=============PERIOD 9============" "'(9" "(((1 1 1 1 1 1 1 1 1) nil (3 9)))" "(((1 1 1) (1 0 0 1 0 0 1) (3)))" "(((1 0 0 1 0 0 1) (1 1 1) (9)))" ")" ";=============PERIOD 10============" "'(10" "(((1 1) (1 0 1 0 1 0 1 0 1) (2)))" "(((1 1 1 1 1) (1 0 0 0 0 1) (5)))" "(((1 0 0 0 0 1) (1 1 1 1 1) (2 10)))" "(((1 0 1 0 1 0 1 0 1) (1 1) (5 10)))" ")" ";=============PERIOD 12============" "'(12" "(((1 1) (1 0 1 0 1 0 1 0 1 0 1) (2)))" "(((1 1 1) (1 0 0 1 0 0 1 0 0 1) (3)))" "(((1 0 1) (1 1 0 0 1 1 0 0 1 1) (4)))" "(((1 1 1 1) (1 0 0 0 1 0 0 0 1) (2 4)))" "(((1 0 0 1) (1 1 1 0 0 0 1 1 1) (2 6)))" "(((1 0 1 0 1) (1 1 0 0 0 0 1 1) (3 6)))" "(((1 0 0 0 0 0 1) (1 1 1 1 1 1) (4 12)))" "(((1 0 1 1 0 1) (1 1 0 -1 0 1 1) (2 4 6)))" "(((1 1 0 0 0 0 1 1) (1 0 1 0 1) (2 4 12)))" "(((1 0 0 0 1 0 0 0 1) (1 1 1 1) (3 6 12)))" "(((1 0 0 1 0 0 1 0 0 1) (1 1 1) (2 4 6 12)))" ")" ";=============PERIOD 14============" "'(14" "(((1 1) (1 0 1 0 1 0 1 0 1 0 1 0 1) (2)))" "(((1 1 1 1 1 1 1) (1 0 0 0 0 0 0 1) (7)))" "(((1 0 0 0 0 0 0 1) (1 1 1 1 1 1 1) (2 14)))" "(((1 0 1 0 1 0 1 0 1 0 1 0 1) (1 1) (7 14)))" ")" ";=============PERIOD 15============" "'(15" "(((1 1 1) (1 0 0 1 0 0 1 0 0 1 0 0 1) (3)))" "(((1 1 1 1 1) (1 0 0 0 0 1 0 0 0 0 1) (5)))" "(((1 0 0 0 0 1 0 0 0 0 1) (1 1 1 1 1) (3 15)))" "(((1 0 0 1 0 0 1 0 0 1 0 0 1) (1 1 1) (5 15)))" ")" ";=============PERIOD 16============" "'(16" "(((1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1) nil (2 4 8 16)))" "(((1 1) (1 0 1 0 1 0 1 0 1 0 1 0 1 0 1) (2)))" "(((1 0 1) (1 1 0 0 1 1 0 0 1 1 0 0 1 1) (4)))" "(((1 0 0 0 1) (1 1 1 1 0 0 0 0 1 1 1 1) (8)))" "(((1 0 0 0 0 0 0 0 1) (1 1 1 1 1 1 1 1) (16)))" "(((1 1 1 1) (1 0 0 0 1 0 0 0 1 0 0 0 1) (2 4)))" "(((1 1 0 0 1 1) (1 0 1 0 0 0 0 0 1 0 1) (2 8)))" "(((1 1 0 0 0 0 0 0 1 1) (1 0 1 0 1 0 1) (2 16)))" "(((1 0 1 0 1 0 1) (1 1 0 0 0 0 0 0 1 1) (4 8)))" "(((1 0 1 0 0 0 0 0 1 0 1) (1 1 0 0 1 1) (4 16)))" "(((1 0 0 0 1 0 0 0 1 0 0 0 1) (1 1 1 1) (8 16)))" "(((1 1 1 1 1 1 1 1) (1 0 0 0 0 0 0 0 1) (2 4 8)))" "(((1 1 1 1 0 0 0 0 1 1 1 1) (1 0 0 0 1) (2 4 16)))" "(((1 1 0 0 1 1 0 0 1 1 0 0 1 1) (1 0 1) (2 8 16)))" "(((1 0 1 0 1 0 1 0 1 0 1 0 1 0 1) (1 1) (4 8 16)))" ")" ";=============PERIOD 18============" "'(18" "(((1 1) (1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1) (2)))" "(((1 1 1) (1 0 0 1 0 0 1 0 0 1 0 0 1 0 0 1) (3)))" "(((1 0 0 1 0 0 1) (1 1 1 0 0 0 0 0 0 1 1 1) (9)))" "(((1 0 0 1) (1 1 1 0 0 0 1 1 1 0 0 0 1 1 1) (2 6)))" "(((1 0 1 0 1) (1 1 0 0 0 0 1 1 0 0 0 0 1 1) (3 6)))" "(((1 1 1 1 1 1 1 1 1) (1 0 0 0 0 0 0 0 0 1) (3 9)))" "(((1 0 0 0 0 0 1 0 0 0 0 0 1) (1 1 1 1 1 1) (9 18)))" "(((1 0 0 0 0 0 0 0 0 1) (1 1 1 1 1 1 1 1 1) (2 6 18)))" "(((1 0 1 1 1 1 1 1 1 0 1) (1 1 0 -1 -1 0 1 1) (3 6 9)))" "(((1 1 1 0 0 0 1 1 1 0 0 0 1 1 1) (1 0 0 1) (3 9 18)))" "(((1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1) (1 1) (3 6 9 18)))" ")") 'textfile "append") "x" nil (corrige (pairlis '(show-stems obj-mode palette-mode winpos winsize deltapict outport inport zoom cmnpref notechancolor? grillestep mode) (list 't 0 0 (om-make-point 40 10) (om-make-point 370 280) (om-make-point 0 0) 0 0 1 (let ((newobj (make-instance 'edition-values))) (setf (paper-size newobj) (om-make-point 600 800)) (setf (top-margin newobj) 2) (setf (left-margin newobj) 1) (setf (right-margin newobj) 1) (setf (bottom-margin newobj) 1) (setf (orientation newobj) nil) (setf (scale newobj) nil) (setf (system-space newobj) '(1)) (setf (line-space newobj) 1) (setf (title newobj) nil) (setf (show-title? newobj) nil) (setf (show-page? newobj) nil) (setf (sheet-id newobj) nil) (setf (page-mode newobj) nil) newobj) nil 1000 0))) nil nil nil) (om-load-boxcomment "comment1" (om-make-point 346 38) '"(through the CV-conditions)" "" (om-make-point 308 56) nil (om-make-color 16/17 41/255 94/255) (om-make-font "Geneva" 24 :family nil :style 'nil :mode nil)) (om-load-boxcomment "comment1" (om-make-point 727 53) '"Complete list of cyclotomic tiling canons" "" (om-make-point 60 3) nil (om-make-color 16/17 41/255 94/255) (om-make-font "Geneva" 36 :family nil :style 'nil :mode nil)) (om-load-boxcall 'bastype "aux1" 't 'nil (om-make-point 246 195) (om-make-point 23 20) 18 "18" nil) (om-load-boxcall 'bastype "aux" 't 'nil (om-make-point 98 193) (om-make-point 23 20) 4 "4" nil) (om-load-boxcall 'genfun "MAKE-CANON-FILE" 'make-canon-file '((om-load-inputfun 'input-funbox "no documentation" "LOW" nil) (om-load-inputfun 'input-funbox "no documentation" "HIGH" nil)) (om-make-point 159 308) nil nil nil "make-canon-file" 1)) '((4 0 5 0 nil 0) (3 0 5 1 nil 0)) (list (let ((newpict (make-instance 'patch-picture :name '|USER-ciel|))) (setf (thepict newpict) (om-get-picture '|USER-ciel|)) (setf (name newpict) '|USER-ciel|) (setf (pict-pos newpict) (om-make-point 462 106)) (setf (pict-size newpict) (om-make-point 319 410)) newpict) (let ((newpict (make-instance 'patch-picture :name '|USER-ciel|))) (setf (thepict newpict) (om-get-picture '|USER-ciel|)) (setf (name newpict) '|USER-ciel|) (setf (pict-pos newpict) (om-make-point 51 116)) (setf (pict-size newpict) (om-make-point 319 410)) newpict)) 5.0))
