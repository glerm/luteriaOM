; OM File Header - Saved 2014/04/26 5:39:37
; (6.04 :patc (om-make-point 129 74) (om-make-point 50 50) (om-make-point 1143 713) "non documentation" 183 0 nil "2014/04/26 5:39:37")
; End File Header
(in-package :om)(load-lib-for 'nil)(setf *om-current-persistent* (om-load-patch1 "06-Red-by-addition" '((om-load-boxcall 'genfun "GROWING-BY-ADD1" 'growing-by-add '((om-load-inputfun 'input-funbox "no documentation" "SERIE" nil) (om-load-inputfun 'input-funbox "no documentation" "ENTRIES" nil) (om-load-inputfun 'input-funbox "no documentation" "MOD" 12)) (om-make-point 52 350) nil nil nil nil 1) (om-load-boxcall 'genfun "GROWING-BY-ADD1" 'growing-by-add '((om-load-inputfun 'input-funbox "no documentation" "SERIE" nil) (om-load-inputfun 'input-funbox "no documentation" "ENTRIES" nil) (om-load-inputfun 'input-funbox "no documentation" "MOD" 12)) (om-make-point 69 150) nil nil nil nil 1) (om-load-boxcall 'genfun "SUITE-REDUCTIBLE2" 'suite-reductible '((om-load-inputfun 'input-funbox "no documentation" "LIST" nil) (om-load-inputfun 'input-funbox "no documentation" "N" 12)) (om-make-point 876 138) nil nil nil nil 1) (om-load-boxcall 'genfun "SUITE-REDUCTIBLE2" 'suite-reductible '((om-load-inputfun 'input-funbox "no documentation" "LIST" nil) (om-load-inputfun 'input-funbox "no documentation" "N" 12)) (om-make-point 339 141) nil nil nil nil 1) (om-load-boxcall 'genfun "SUITE-REDUCTIBLE2" 'suite-reductible '((om-load-inputfun 'input-funbox "no documentation" "LIST" nil) (om-load-inputfun 'input-funbox "no documentation" "N" 12)) (om-make-point 372 542) nil nil nil nil 1) (om-load-boxcall 'bastype "aux" 't 'nil (om-make-point 22 285) (om-make-point 23 20) (list 2) "(2)" nil) (om-load-boxcall 'bastype "aux2" 't 'nil (om-make-point 53 284) (om-make-point 156 20) (list 3 1 0 3 1 0 3 1 0 3 1 0) "(3 1 0 3 1 0 3 1 0 3 1 0)" nil) (om-load-boxcomment "comment" (om-make-point 74 20) '"period = 864" "" (om-make-point 551 497) nil (om-make-color 0 0 0) (om-make-font "Geneva" 10 :family nil :style 'nil :mode nil)) (om-load-boxcall 'bastype "aux3" 't 'nil (om-make-point 964 105) (om-make-point 23 20) 12 "12" nil) (om-load-boxwithed1 'box-with-win "OMLOOP" 'omloop '((om-load-inputfun 'input-funbox "aditional input" "OPLIST" nil)) (om-make-point 899 224) nil nil nil (list (om-load-editor-box1 "CHORD-SEQ" 'chord-seq '((om-load-inputfun 'input-funbox "objs" "SELF" nil) (om-load-inputfun 'input-funbox "no documentation" "LMIDIC" (list 6000)) (om-load-inputfun 'input-funbox "no documentation" "LONSET" (list 0 1000)) (om-load-inputfun 'input-funbox "no documentation" "LDUR" (list 1000)) (om-load-inputfun 'input-funbox "no documentation" "LVEL" (list 100)) (om-load-inputfun 'input-funbox "no documentation" "LOFFSET" (list 0)) (om-load-inputfun 'input-funbox "no documentation" "LCHAN" (list 1)) (om-load-inputfun 'input-funbox "no documentation" "LEGATO" 0)) (om-make-point 249 155) (om-make-point 130 65) (let ((newobj (when (find-class 'chord-seq nil) (make-instance 'chord-seq :lmidic '((6000)) :lonset '(0 1000) :ldur '((1000)) :lvel '((100)) :loffset '((0)) :lchan '((1)) :legato 0)))) (load-port-info newobj '((0))) (init-mus-color newobj (list (list nil (om-make-color 0 0 0)) (list (list 0) (om-make-color 0 0 0)) (list (list 0 0) (om-make-color 0 0 0)))) (set-extra-pairs newobj 'nil) (set-patch-pairs newobj 'nil) (set-tonalite newobj nil) newobj) nil nil (corrige (pairlis '(approx fontsize staff cmnpref deltapict outport inport zoom notechancolor? grillestep mode winsize winpos palette-mode obj-mode show-stems) (list 2 24 'g (let ((newobj (make-instance 'edition-values))) (setf (paper-size newobj) (om-make-point 600 800)) (setf (top-margin newobj) 2) (setf (left-margin newobj) 1) (setf (right-margin newobj) 1) (setf (bottom-margin newobj) 1) (setf (orientation newobj) nil) (setf (scale newobj) nil) (setf (system-space newobj) '(1)) (setf (line-space newobj) 1) (setf (title newobj) nil) (setf (show-title? newobj) nil) (setf (show-page? newobj) nil) (setf (sheet-id newobj) nil) (setf (page-mode newobj) nil) newobj) (om-make-point 0 0) 0 0 1 nil 1000 0 18350450 2621450 0 0 't))) nil nil nil) (om-load-boxcall 'genfun "collect" 'listing '((om-load-inputfun 'input-funbox "no documentation" "WHAT?" nil)) (om-make-point 197 230) nil nil nil nil 3) (om-load-boxcall 'genfun "OM+" 'om+ '((om-load-inputfun 'input-funbox "first input" "SELF" 0) (om-load-inputfun 'input-funbox "second input" "NUM" 6000)) (om-make-point 217 117) nil nil nil nil 1) (om-load-boxcall 'genfun "OM*" 'om* '((om-load-inputfun 'input-funbox "first input" "SELF" 0) (om-load-inputfun 'input-funbox "second input" "NUM" 100)) (om-make-point 137 203) (om-make-point 20 35) nil nil nil 1) (om-load-boxcall 'genfun "inlist" 'listloop '((om-load-inputfun 'input-funbox "list to iterate" "LIST" nil)) (om-make-point 121 121) nil nil nil nil 1) (om-load-boxin "input0" 0 (om-make-point 125 47) "no documentation" nil nil nil) (om-load-seqbox "finally" 'finaldo '((om-load-inputfun 'input-funbox "patch" "PATCH" nil)) (om-make-point 380 312) nil nil nil 0) (om-load-seqbox "eachTime" 'loopdo '((om-load-inputfun 'input-funbox "patch" "PATCH" nil)) (om-make-point 80 301) nil nil nil 0)) '((2 0 0 1 nil 0) (0 0 1 0 nil 0) (3 0 2 0 nil 0) (4 0 3 0 nil 0) (5 0 4 0 nil 0) (1 1 6 0 nil 0) (1 0 7 0 nil 0)) 1 nil nil) (om-load-editor-box1 "MULTI-SEQ1" 'multi-seq '((om-load-inputfun 'input-funbox "objs" "SELF" nil) (om-load-inputfun 'input-funbox "no documentation" "CHORD-SEQS" (list (let ((newobj (when (find-class 'chord-seq nil) (make-instance 'chord-seq :lmidic '((6000)) :lonset '(0 1000) :ldur '((1000)) :lvel '((100)) :loffset '((0)) :lchan '((1)) :legato 0)))) (load-port-info newobj '((0))) (init-mus-color newobj (list (list nil (om-make-color 0 0 0)) (list (list 0) (om-make-color 0 0 0)) (list (list 0 0) (om-make-color 0 0 0)))) (set-extra-pairs newobj 'nil) (set-patch-pairs newobj 'nil) (set-tonalite newobj nil) newobj)))) (om-make-point 643 291) (om-make-point 458 316) (if (find-class 'multi-seq nil) (let ((newobj (make-instance 'multi-seq :chord-seqs (list (let ((newobj (when (find-class 'chord-seq nil) (make-instance 'chord-seq :lmidic '((6000) (6100) (6500) (6200) (6600) (6700) (6700) (6800) (6000) (6900) (6100) (6200) (6200) (6300) (6700) (6400) (6800) (6900) (6900) (7000) (6200) (7100) (6300) (6400) (6400) (6500) (6900) (6600) (7000) (7100) (7100) (6000) (6400) (6100) (6500) (6600) (6600) (6700) (7100) (6800) (6000) (6100) (6100) (6200) (6600) (6300) (6700) (6800) (6800) (6900) (6100) (7000) (6200) (6300) (6300) (6400) (6800) (6500) (6900) (7000) (7000) (7100) (6300) (6000) (6400) (6500) (6500) (6600) (7000) (6700) (7100) (6000)) :lonset '(0 1000 2000 3000 4000 5000 6000 7000 8000 9000 10000 11000 12000 13000 14000 15000 16000 17000 18000 19000 20000 21000 22000 23000 24000 25000 26000 27000 28000 29000 30000 31000 32000 33000 34000 35000 36000 37000 38000 39000 40000 41000 42000 43000 44000 45000 46000 47000 48000 49000 50000 51000 52000 53000 54000 55000 56000 57000 58000 59000 60000 61000 62000 63000 64000 65000 66000 67000 68000 69000 70000 71000 72000) :ldurlvel '((100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100)) :loffset '((0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0)) :lchan '((1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1)) :legato 0)))) (load-port-info newobj '((0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0))) (init-mus-color newobj nil) (set-extra-pairs newobj 'nil) (set-patch-pairs newobj 'nil) (set-tonalite newobj nil) newobj) (let ((newobj (when (find-class 'chord-seq nil) (make-instance 'chord-seq :lmidic '((6100) (6400) (6900) (6400) (6100) (6000) (6100) (6400) (6900) (6400) (6100) (6000) (6100) (6400) (6900) (6400) (6100) (6000) (6100) (6400) (6900) (6400) (6100) (6000) (6100) (6400) (6900) (6400) (6100) (6000) (6100) (6400) (6900) (6400) (6100) (6000) (6100) (6400) (6900) (6400) (6100) (6000) (6100) (6400) (6900) (6400) (6100) (6000) (6100) (6400) (6900) (6400) (6100) (6000) (6100) (6400) (6900) (6400) (6100) (6000) (6100) (6400) (6900) (6400) (6100) (6000) (6100) (6400) (6900) (6400) (6100) (6000)) :lonset '(0 1000 2000 3000 4000 5000 6000 7000 8000 9000 10000 11000 12000 13000 14000 15000 16000 17000 18000 19000 20000 21000 22000 23000 24000 25000 26000 27000 28000 29000 30000 31000 32000 33000 34000 35000 36000 37000 38000 39000 40000 41000 42000 43000 44000 45000 46000 47000 48000 49000 50000 51000 52000 53000 54000 55000 56000 57000 58000 59000 60000 61000 62000 63000 64000 65000 66000 67000 68000 69000 70000 71000 72000) :ldur '((1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000)) :lvel '((100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100)) :loffset '((0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0)) :lchan '((1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1)) :legato 0)))) (load-port-info newobj '((0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0))) (init-mus-color newobj nil) (set-extra-pairs newobj 'nil) (set-patch-pairs newobj 'nil) (set-tonalite newobj nil) newobj) (let ((newobj (when (find-class 'chord-seq nil) (make-instance 'chord-seq :lmidic '((6300) (6500) (6700) (6900) (7100) (6100) (6300) (6500) (6700) (6900) (7100) (6100) (6300) (6500) (6700) (6900) (7100) (6100) (6300) (6500) (6700) (6900) (7100) (6100) (6300) (6500) (6700) (6900) (7100) (6100) (6300) (6500) (6700) (6900) (7100) (6100) (6300) (6500) (6700) (6900) (7100) (6100) (6300) (6500) (6700) (6900) (7100) (6100) (6300) (6500) (6700) (6900) (7100) (6100) (6300) (6500) (6700) (6900) (7100) (6100) (6300) (6500) (6700) (6900) (7100) (6100) (6300) (6500) (6700) (6900) (7100) (6100)) :lonset '(0 1000 2000 3000 4000 5000 6000 7000 8000 9000 10000 11000 12000 13000 14000 15000 16000 17000 18000 19000 20000 21000 22000 23000 24000 25000 26000 27000 28000 29000 30000 31000 32000 33000 34000 35000 36000 37000 38000 39000 40000 41000 42000 43000 44000 45000 46000 47000 48000 49000 50000 51000 52000 53000 54000 55000 56000 57000 58000 59000 60000 61000 62000 63000 64000 65000 66000 67000 68000 69000 70000 71000 72000) :ldurlvel '((100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100)) :loffset '((0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0)) :lchan '((1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1)) :legato 0)))) (load-port-info newobj '((0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0))) (init-mus-color newobj nil) (set-extra-pairs newobj 'nil) (set-patch-pairs newobj 'nil) (set-tonalite newobj nil) newobj) (let ((newobj (when (find-class 'chord-seq nil) (make-instance 'chord-seq :lmidiclonset '(0 1000 2000 3000 4000 5000 6000 7000 8000 9000 10000 11000 12000 13000 14000 15000 16000 17000 18000 19000 20000 21000 22000 23000 24000 25000 26000 27000 28000 29000 30000 31000 32000 33000 34000 35000 36000 37000 38000 39000 40000 41000 42000 43000 44000 45000 46000 47000 48000 49000 50000 51000 52000 53000 54000 55000 56000 57000 58000 59000 60000 61000 62000 63000 64000 65000 66000 67000 68000 69000 70000 71000 72000) :ldurlvel '((100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100)) :loffset '((0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0)) :lchan '((1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1)) :legato 0)))) (load-port-info newobj '((0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0))) (init-mus-color newobj nil) (set-extra-pairs newobj 'nil) (set-patch-pairs newobj 'nil) (set-tonalite newobj nil) newobj) (let ((newobj (when (find-class 'chord-seq nil) (make-instance 'chord-seq :lmidiclonset '(0 1000 2000 3000 4000 5000 6000 7000 8000 9000 10000 11000 12000 13000 14000 15000 16000 17000 18000 19000 20000 21000 22000 23000 24000 25000 26000 27000 28000 29000 30000 31000 32000 33000 34000 35000 36000 37000 38000 39000 40000 41000 42000 43000 44000 45000 46000 47000 48000 49000 50000 51000 52000 53000 54000 55000 56000 57000 58000 59000 60000 61000 62000 63000 64000 65000 66000 67000 68000 69000 70000 71000 72000) :ldurlvel '((100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100)) :loffset '((0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0)) :lchan '((1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1)) :legato 0)))) (load-port-info newobj '((0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0))) (init-mus-color newobj nil) (set-extra-pairs newobj 'nil) (set-patch-pairs newobj 'nil) (set-tonalite newobj nil) newobj)) :from-file t))) (load-port-info newobj '(((0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0)) ((0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0)) ((0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0)) ((0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0)) ((0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0)))) (init-mus-color newobj (list (list nil (om-make-color 0 0 0)) (list (list 0) (om-make-color 0 0 0)) (list (list 0 0) (om-make-color 0 0 0)) (list (list 0 0 0) (om-make-color 0 0 0)) (list (list 0 1) (om-make-color 0 0 0)) (list (list 0 1 0) (om-make-color 0 0 0)) (list (list 0 2) (om-make-color 0 0 0)) (list (list 0 2 0) (om-make-color 0 0 0)) (list (list 0 3) (om-make-color 0 0 0)) (list (list 0 3 0) (om-make-color 0 0 0)) (list (list 0 4) (om-make-color 0 0 0)) (list (list 0 4 0) (om-make-color 0 0 0)) (list (list 0 5) (om-make-color 0 0 0)) (list (list 0 5 0) (om-make-color 0 0 0)) (list (list 0 6) (om-make-color 0 0 0)) (list (list 0 6 0) (om-make-color 0 0 0)) (list (list 0 7) (om-make-color 0 0 0)) (list (list 0 7 0) (om-make-color 0 0 0)) (list (list 0 8) (om-make-color 0 0 0)) (list (list 0 8 0) (om-make-color 0 0 0)) (list (list 0 9) (om-make-color 0 0 0)) (list (list 0 9 0) (om-make-color 0 0 0)) (list (list 0 10) (om-make-color 0 0 0)) (list (list 0 10 0) (om-make-color 0 0 0)) (list (list 0 11) (om-make-color 0 0 0)) (list (list 0 11 0) (om-make-color 0 0 0)) (list (list 0 12) (om-make-color 0 0 0)) (list (list 0 12 0) (om-make-color 0 0 0)) (list (list 0 13) (om-make-color 0 0 0)) (list (list 0 13 0) (om-make-color 0 0 0)) (list (list 0 14) (om-make-color 0 0 0)) (list (list 0 14 0) (om-make-color 0 0 0)) (list (list 0 15) (om-make-color 0 0 0)) (list (list 0 15 0) (om-make-color 0 0 0)) (list (list 0 16) (om-make-color 0 0 0)) (list (list 0 16 0) (om-make-color 0 0 0)) (list (list 0 17) (om-make-color 0 0 0)) (list (list 0 17 0) (om-make-color 0 0 0)) (list (list 0 18) (om-make-color 0 0 0)) (list (list 0 18 0) (om-make-color 0 0 0)) (list (list 0 19) (om-make-color 0 0 0)) (list (list 0 19 0) (om-make-color 0 0 0)) (list (list 0 20) (om-make-color 0 0 0)) (list (list 0 20 0) (om-make-color 0 0 0)) (list (list 0 21) (om-make-color 0 0 0)) (list (list 0 21 0) (om-make-color 0 0 0)) (list (list 0 22) (om-make-color 0 0 0)) (list (list 0 22 0) (om-make-color 0 0 0)) (list (list 0 23) (om-make-color 0 0 0)) (list (list 0 23 0) (om-make-color 0 0 0)) (list (list 0 24) (om-make-color 0 0 0)) (list (list 0 24 0) (om-make-color 0 0 0)) (list (list 0 25) (om-make-color 0 0 0)) (list (list 0 25 0) (om-make-color 0 0 0)) (list (list 0 26) (om-make-color 0 0 0)) (list (list 0 26 0) (om-make-color 0 0 0)) (list (list 0 27) (om-make-color 0 0 0)) (list (list 0 27 0) (om-make-color 0 0 0)) (list (list 0 28) (om-make-color 0 0 0)) (list (list 0 28 0) (om-make-color 0 0 0)) (list (list 0 29) (om-make-color 0 0 0)) (list (list 0 29 0) (om-make-color 0 0 0)) (list (list 0 30) (om-make-color 0 0 0)) (list (list 0 30 0) (om-make-color 0 0 0)) (list (list 0 31) (om-make-color 0 0 0)) (list (list 0 31 0) (om-make-color 0 0 0)) (list (list 0 32) (om-make-color 0 0 0)) (list (list 0 32 0) (om-make-color 0 0 0)) (list (list 0 33) (om-make-color 0 0 0)) (list (list 0 33 0) (om-make-color 0 0 0)) (list (list 0 34) (om-make-color 0 0 0)) (list (list 0 34 0) (om-make-color 0 0 0)) (list (list 0 35) (om-make-color 0 0 0)) (list (list 0 35 0) (om-make-color 0 0 0)) (list (list 0 36) (om-make-color 0 0 0)) (list (list 0 36 0) (om-make-color 0 0 0)) (list (list 0 37) (om-make-color 0 0 0)) (list (list 0 37 0) (om-make-color 0 0 0)) (list (list 0 38) (om-make-color 0 0 0)) (list (list 0 38 0) (om-make-color 0 0 0)) (list (list 0 39) (om-make-color 0 0 0)) (list (list 0 39 0) (om-make-color 0 0 0)) (list (list 0 40) (om-make-color 0 0 0)) (list (list 0 40 0) (om-make-color 0 0 0)) (list (list 0 41) (om-make-color 0 0 0)) (list (list 0 41 0) (om-make-color 0 0 0)) (list (list 0 42) (om-make-color 0 0 0)) (list (list 0 42 0) (om-make-color 0 0 0)) (list (list 0 43) (om-make-color 0 0 0)) (list (list 0 43 0) (om-make-color 0 0 0)) (list (list 0 44) (om-make-color 0 0 0)) (list (list 0 44 0) (om-make-color 0 0 0)) (list (list 0 45) (om-make-color 0 0 0)) (list (list 0 45 0) (om-make-color 0 0 0)) (list (list 0 46) (om-make-color 0 0 0)) (list (list 0 46 0) (om-make-color 0 0 0)) (list (list 0 47) (om-make-color 0 0 0)) (list (list 0 47 0) (om-make-color 0 0 0)) (list (list 0 48) (om-make-color 0 0 0)) (list (list 0 48 0) (om-make-color 0 0 0)) (list (list 0 49) (om-make-color 0 0 0)) (list (list 0 49 0) (om-make-color 0 0 0)) (list (list 0 50) (om-make-color 0 0 0)) (list (list 0 50 0) (om-make-color 0 0 0)) (list (list 0 51) (om-make-color 0 0 0)) (list (list 0 51 0) (om-make-color 0 0 0)) (list (list 0 52) (om-make-color 0 0 0)) (list (list 0 52 0) (om-make-color 0 0 0)) (list (list 0 53) (om-make-color 0 0 0)) (list (list 0 53 0) (om-make-color 0 0 0)) (list (list 0 54) (om-make-color 0 0 0)) (list (list 0 54 0) (om-make-color 0 0 0)) (list (list 0 55) (om-make-color 0 0 0)) (list (list 0 55 0) (om-make-color 0 0 0)) (list (list 0 56) (om-make-color 0 0 0)) (list (list 0 56 0) (om-make-color 0 0 0)) (list (list 0 57) (om-make-color 0 0 0)) (list (list 0 57 0) (om-make-color 0 0 0)) (list (list 0 58) (om-make-color 0 0 0)) (list (list 0 58 0) (om-make-color 0 0 0)) (list (list 0 59) (om-make-color 0 0 0)) (list (list 0 59 0) (om-make-color 0 0 0)) (list (list 0 60) (om-make-color 0 0 0)) (list (list 0 60 0) (om-make-color 0 0 0)) (list (list 0 61) (om-make-color 0 0 0)) (list (list 0 61 0) (om-make-color 0 0 0)) (list (list 0 62) (om-make-color 0 0 0)) (list (list 0 62 0) (om-make-color 0 0 0)) (list (list 0 63) (om-make-color 0 0 0)) (list (list 0 63 0) (om-make-color 0 0 0)) (list (list 0 64) (om-make-color 0 0 0)) (list (list 0 64 0) (om-make-color 0 0 0)) (list (list 0 65) (om-make-color 0 0 0)) (list (list 0 65 0) (om-make-color 0 0 0)) (list (list 0 66) (om-make-color 0 0 0)) (list (list 0 66 0) (om-make-color 0 0 0)) (list (list 0 67) (om-make-color 0 0 0)) (list (list 0 67 0) (om-make-color 0 0 0)) (list (list 0 68) (om-make-color 0 0 0)) (list (list 0 68 0) (om-make-color 0 0 0)) (list (list 0 69) (om-make-color 0 0 0)) (list (list 0 69 0) (om-make-color 0 0 0)) (list (list 0 70) (om-make-color 0 0 0)) (list (list 0 70 0) (om-make-color 0 0 0)) (list (list 0 71) (om-make-color 0 0 0)) (list (list 0 71 0) (om-make-color 0 0 0)) (list (list 1) (om-make-color 0 0 0)) (list (list 1 0) (om-make-color 0 0 0)) (list (list 1 0 0) (om-make-color 0 0 0)) (list (list 1 1) (om-make-color 0 0 0)) (list (list 1 1 0) (om-make-color 0 0 0)) (list (list 1 2) (om-make-color 0 0 0)) (list (list 1 2 0) (om-make-color 0 0 0)) (list (list 1 3) (om-make-color 0 0 0)) (list (list 1 3 0) (om-make-color 0 0 0)) (list (list 1 4) (om-make-color 0 0 0)) (list (list 1 4 0) (om-make-color 0 0 0)) (list (list 1 5) (om-make-color 0 0 0)) (list (list 1 5 0) (om-make-color 0 0 0)) (list (list 1 6) (om-make-color 0 0 0)) (list (list 1 6 0) (om-make-color 0 0 0)) (list (list 1 7) (om-make-color 0 0 0)) (list (list 1 7 0) (om-make-color 0 0 0)) (list (list 1 8) (om-make-color 0 0 0)) (list (list 1 8 0) (om-make-color 0 0 0)) (list (list 1 9) (om-make-color 0 0 0)) (list (list 1 9 0) (om-make-color 0 0 0)) (list (list 1 10) (om-make-color 0 0 0)) (list (list 1 10 0) (om-make-color 0 0 0)) (list (list 1 11) (om-make-color 0 0 0)) (list (list 1 11 0) (om-make-color 0 0 0)) (list (list 1 12) (om-make-color 0 0 0)) (list (list 1 12 0) (om-make-color 0 0 0)) (list (list 1 13) (om-make-color 0 0 0)) (list (list 1 13 0) (om-make-color 0 0 0)) (list (list 1 14) (om-make-color 0 0 0)) (list (list 1 14 0) (om-make-color 0 0 0)) (list (list 1 15) (om-make-color 0 0 0)) (list (list 1 15 0) (om-make-color 0 0 0)) (list (list 1 16) (om-make-color 0 0 0)) (list (list 1 16 0) (om-make-color 0 0 0)) (list (list 1 17) (om-make-color 0 0 0)) (list (list 1 17 0) (om-make-color 0 0 0)) (list (list 1 18) (om-make-color 0 0 0)) (list (list 1 18 0) (om-make-color 0 0 0)) (list (list 1 19) (om-make-color 0 0 0)) (list (list 1 19 0) (om-make-color 0 0 0)) (list (list 1 20) (om-make-color 0 0 0)) (list (list 1 20 0) (om-make-color 0 0 0)) (list (list 1 21) (om-make-color 0 0 0)) (list (list 1 21 0) (om-make-color 0 0 0)) (list (list 1 22) (om-make-color 0 0 0)) (list (list 1 22 0) (om-make-color 0 0 0)) (list (list 1 23) (om-make-color 0 0 0)) (list (list 1 23 0) (om-make-color 0 0 0)) (list (list 1 24) (om-make-color 0 0 0)) (list (list 1 24 0) (om-make-color 0 0 0)) (list (list 1 25) (om-make-color 0 0 0)) (list (list 1 25 0) (om-make-color 0 0 0)) (list (list 1 26) (om-make-color 0 0 0)) (list (list 1 26 0) (om-make-color 0 0 0)) (list (list 1 27) (om-make-color 0 0 0)) (list (list 1 27 0) (om-make-color 0 0 0)) (list (list 1 28) (om-make-color 0 0 0)) (list (list 1 28 0) (om-make-color 0 0 0)) (list (list 1 29) (om-make-color 0 0 0)) (list (list 1 29 0) (om-make-color 0 0 0)) (list (list 1 30) (om-make-color 0 0 0)) (list (list 1 30 0) (om-make-color 0 0 0)) (list (list 1 31) (om-make-color 0 0 0)) (list (list 1 31 0) (om-make-color 0 0 0)) (list (list 1 32) (om-make-color 0 0 0)) (list (list 1 32 0) (om-make-color 0 0 0)) (list (list 1 33) (om-make-color 0 0 0)) (list (list 1 33 0) (om-make-color 0 0 0)) (list (list 1 34) (om-make-color 0 0 0)) (list (list 1 34 0) (om-make-color 0 0 0)) (list (list 1 35) (om-make-color 0 0 0)) (list (list 1 35 0) (om-make-color 0 0 0)) (list (list 1 36) (om-make-color 0 0 0)) (list (list 1 36 0) (om-make-color 0 0 0)) (list (list 1 37) (om-make-color 0 0 0)) (list (list 1 37 0) (om-make-color 0 0 0)) (list (list 1 38) (om-make-color 0 0 0)) (list (list 1 38 0) (om-make-color 0 0 0)) (list (list 1 39) (om-make-color 0 0 0)) (list (list 1 39 0) (om-make-color 0 0 0)) (list (list 1 40) (om-make-color 0 0 0)) (list (list 1 40 0) (om-make-color 0 0 0)) (list (list 1 41) (om-make-color 0 0 0)) (list (list 1 41 0) (om-make-color 0 0 0)) (list (list 1 42) (om-make-color 0 0 0)) (list (list 1 42 0) (om-make-color 0 0 0)) (list (list 1 43) (om-make-color 0 0 0)) (list (list 1 43 0) (om-make-color 0 0 0)) (list (list 1 44) (om-make-color 0 0 0)) (list (list 1 44 0) (om-make-color 0 0 0)) (list (list 1 45) (om-make-color 0 0 0)) (list (list 1 45 0) (om-make-color 0 0 0)) (list (list 1 46) (om-make-color 0 0 0)) (list (list 1 46 0) (om-make-color 0 0 0)) (list (list 1 47) (om-make-color 0 0 0)) (list (list 1 47 0) (om-make-color 0 0 0)) (list (list 1 48) (om-make-color 0 0 0)) (list (list 1 48 0) (om-make-color 0 0 0)) (list (list 1 49) (om-make-color 0 0 0)) (list (list 1 49 0) (om-make-color 0 0 0)) (list (list 1 50) (om-make-color 0 0 0)) (list (list 1 50 0) (om-make-color 0 0 0)) (list (list 1 51) (om-make-color 0 0 0)) (list (list 1 51 0) (om-make-color 0 0 0)) (list (list 1 52) (om-make-color 0 0 0)) (list (list 1 52 0) (om-make-color 0 0 0)) (list (list 1 53) (om-make-color 0 0 0)) (list (list 1 53 0) (om-make-color 0 0 0)) (list (list 1 54) (om-make-color 0 0 0)) (list (list 1 54 0) (om-make-color 0 0 0)) (list (list 1 55) (om-make-color 0 0 0)) (list (list 1 55 0) (om-make-color 0 0 0)) (list (list 1 56) (om-make-color 0 0 0)) (list (list 1 56 0) (om-make-color 0 0 0)) (list (list 1 57) (om-make-color 0 0 0)) (list (list 1 57 0) (om-make-color 0 0 0)) (list (list 1 58) (om-make-color 0 0 0)) (list (list 1 58 0) (om-make-color 0 0 0)) (list (list 1 59) (om-make-color 0 0 0)) (list (list 1 59 0) (om-make-color 0 0 0)) (list (list 1 60) (om-make-color 0 0 0)) (list (list 1 60 0) (om-make-color 0 0 0)) (list (list 1 61) (om-make-color 0 0 0)) (list (list 1 61 0) (om-make-color 0 0 0)) (list (list 1 62) (om-make-color 0 0 0)) (list (list 1 62 0) (om-make-color 0 0 0)) (list (list 1 63) (om-make-color 0 0 0)) (list (list 1 63 0) (om-make-color 0 0 0)) (list (list 1 64) (om-make-color 0 0 0)) (list (list 1 64 0) (om-make-color 0 0 0)) (list (list 1 65) (om-make-color 0 0 0)) (list (list 1 65 0) (om-make-color 0 0 0)) (list (list 1 66) (om-make-color 0 0 0)) (list (list 1 66 0) (om-make-color 0 0 0)) (list (list 1 67) (om-make-color 0 0 0)) (list (list 1 67 0) (om-make-color 0 0 0)) (list (list 1 68) (om-make-color 0 0 0)) (list (list 1 68 0) (om-make-color 0 0 0)) (list (list 1 69) (om-make-color 0 0 0)) (list (list 1 69 0) (om-make-color 0 0 0)) (list (list 1 70) (om-make-color 0 0 0)) (list (list 1 70 0) (om-make-color 0 0 0)) (list (list 1 71) (om-make-color 0 0 0)) (list (list 1 71 0) (om-make-color 0 0 0)) (list (list 2) (om-make-color 0 0 0)) (list (list 2 0) (om-make-color 0 0 0)) (list (list 2 0 0) (om-make-color 0 0 0)) (list (list 2 1) (om-make-color 0 0 0)) (list (list 2 1 0) (om-make-color 0 0 0)) (list (list 2 2) (om-make-color 0 0 0)) (list (list 2 2 0) (om-make-color 0 0 0)) (list (list 2 3) (om-make-color 0 0 0)) (list (list 2 3 0) (om-make-color 0 0 0)) (list (list 2 4) (om-make-color 0 0 0)) (list (list 2 4 0) (om-make-color 0 0 0)) (list (list 2 5) (om-make-color 0 0 0)) (list (list 2 5 0) (om-make-color 0 0 0)) (list (list 2 6) (om-make-color 0 0 0)) (list (list 2 6 0) (om-make-color 0 0 0)) (list (list 2 7) (om-make-color 0 0 0)) (list (list 2 7 0) (om-make-color 0 0 0)) (list (list 2 8) (om-make-color 0 0 0)) (list (list 2 8 0) (om-make-color 0 0 0)) (list (list 2 9) (om-make-color 0 0 0)) (list (list 2 9 0) (om-make-color 0 0 0)) (list (list 2 10) (om-make-color 0 0 0)) (list (list 2 10 0) (om-make-color 0 0 0)) (list (list 2 11) (om-make-color 0 0 0)) (list (list 2 11 0) (om-make-color 0 0 0)) (list (list 2 12) (om-make-color 0 0 0)) (list (list 2 12 0) (om-make-color 0 0 0)) (list (list 2 13) (om-make-color 0 0 0)) (list (list 2 13 0) (om-make-color 0 0 0)) (list (list 2 14) (om-make-color 0 0 0)) (list (list 2 14 0) (om-make-color 0 0 0)) (list (list 2 15) (om-make-color 0 0 0)) (list (list 2 15 0) (om-make-color 0 0 0)) (list (list 2 16) (om-make-color 0 0 0)) (list (list 2 16 0) (om-make-color 0 0 0)) (list (list 2 17) (om-make-color 0 0 0)) (list (list 2 17 0) (om-make-color 0 0 0)) (list (list 2 18) (om-make-color 0 0 0)) (list (list 2 18 0) (om-make-color 0 0 0)) (list (list 2 19) (om-make-color 0 0 0)) (list (list 2 19 0) (om-make-color 0 0 0)) (list (list 2 20) (om-make-color 0 0 0)) (list (list 2 20 0) (om-make-color 0 0 0)) (list (list 2 21) (om-make-color 0 0 0)) (list (list 2 21 0) (om-make-color 0 0 0)) (list (list 2 22) (om-make-color 0 0 0)) (list (list 2 22 0) (om-make-color 0 0 0)) (list (list 2 23) (om-make-color 0 0 0)) (list (list 2 23 0) (om-make-color 0 0 0)) (list (list 2 24) (om-make-color 0 0 0)) (list (list 2 24 0) (om-make-color 0 0 0)) (list (list 2 25) (om-make-color 0 0 0)) (list (list 2 25 0) (om-make-color 0 0 0)) (list (list 2 26) (om-make-color 0 0 0)) (list (list 2 26 0) (om-make-color 0 0 0)) (list (list 2 27) (om-make-color 0 0 0)) (list (list 2 27 0) (om-make-color 0 0 0)) (list (list 2 28) (om-make-color 0 0 0)) (list (list 2 28 0) (om-make-color 0 0 0)) (list (list 2 29) (om-make-color 0 0 0)) (list (list 2 29 0) (om-make-color 0 0 0)) (list (list 2 30) (om-make-color 0 0 0)) (list (list 2 30 0) (om-make-color 0 0 0)) (list (list 2 31) (om-make-color 0 0 0)) (list (list 2 31 0) (om-make-color 0 0 0)) (list (list 2 32) (om-make-color 0 0 0)) (list (list 2 32 0) (om-make-color 0 0 0)) (list (list 2 33) (om-make-color 0 0 0)) (list (list 2 33 0) (om-make-color 0 0 0)) (list (list 2 34) (om-make-color 0 0 0)) (list (list 2 34 0) (om-make-color 0 0 0)) (list (list 2 35) (om-make-color 0 0 0)) (list (list 2 35 0) (om-make-color 0 0 0)) (list (list 2 36) (om-make-color 0 0 0)) (list (list 2 36 0) (om-make-color 0 0 0)) (list (list 2 37) (om-make-color 0 0 0)) (list (list 2 37 0) (om-make-color 0 0 0)) (list (list 2 38) (om-make-color 0 0 0)) (list (list 2 38 0) (om-make-color 0 0 0)) (list (list 2 39) (om-make-color 0 0 0)) (list (list 2 39 0) (om-make-color 0 0 0)) (list (list 2 40) (om-make-color 0 0 0)) (list (list 2 40 0) (om-make-color 0 0 0)) (list (list 2 41) (om-make-color 0 0 0)) (list (list 2 41 0) (om-make-color 0 0 0)) (list (list 2 42) (om-make-color 0 0 0)) (list (list 2 42 0) (om-make-color 0 0 0)) (list (list 2 43) (om-make-color 0 0 0)) (list (list 2 43 0) (om-make-color 0 0 0)) (list (list 2 44) (om-make-color 0 0 0)) (list (list 2 44 0) (om-make-color 0 0 0)) (list (list 2 45) (om-make-color 0 0 0)) (list (list 2 45 0) (om-make-color 0 0 0)) (list (list 2 46) (om-make-color 0 0 0)) (list (list 2 46 0) (om-make-color 0 0 0)) (list (list 2 47) (om-make-color 0 0 0)) (list (list 2 47 0) (om-make-color 0 0 0)) (list (list 2 48) (om-make-color 0 0 0)) (list (list 2 48 0) (om-make-color 0 0 0)) (list (list 2 49) (om-make-color 0 0 0)) (list (list 2 49 0) (om-make-color 0 0 0)) (list (list 2 50) (om-make-color 0 0 0)) (list (list 2 50 0) (om-make-color 0 0 0)) (list (list 2 51) (om-make-color 0 0 0)) (list (list 2 51 0) (om-make-color 0 0 0)) (list (list 2 52) (om-make-color 0 0 0)) (list (list 2 52 0) (om-make-color 0 0 0)) (list (list 2 53) (om-make-color 0 0 0)) (list (list 2 53 0) (om-make-color 0 0 0)) (list (list 2 54) (om-make-color 0 0 0)) (list (list 2 54 0) (om-make-color 0 0 0)) (list (list 2 55) (om-make-color 0 0 0)) (list (list 2 55 0) (om-make-color 0 0 0)) (list (list 2 56) (om-make-color 0 0 0)) (list (list 2 56 0) (om-make-color 0 0 0)) (list (list 2 57) (om-make-color 0 0 0)) (list (list 2 57 0) (om-make-color 0 0 0)) (list (list 2 58) (om-make-color 0 0 0)) (list (list 2 58 0) (om-make-color 0 0 0)) (list (list 2 59) (om-make-color 0 0 0)) (list (list 2 59 0) (om-make-color 0 0 0)) (list (list 2 60) (om-make-color 0 0 0)) (list (list 2 60 0) (om-make-color 0 0 0)) (list (list 2 61) (om-make-color 0 0 0)) (list (list 2 61 0) (om-make-color 0 0 0)) (list (list 2 62) (om-make-color 0 0 0)) (list (list 2 62 0) (om-make-color 0 0 0)) (list (list 2 63) (om-make-color 0 0 0)) (list (list 2 63 0) (om-make-color 0 0 0)) (list (list 2 64) (om-make-color 0 0 0)) (list (list 2 64 0) (om-make-color 0 0 0)) (list (list 2 65) (om-make-color 0 0 0)) (list (list 2 65 0) (om-make-color 0 0 0)) (list (list 2 66) (om-make-color 0 0 0)) (list (list 2 66 0) (om-make-color 0 0 0)) (list (list 2 67) (om-make-color 0 0 0)) (list (list 2 67 0) (om-make-color 0 0 0)) (list (list 2 68) (om-make-color 0 0 0)) (list (list 2 68 0) (om-make-color 0 0 0)) (list (list 2 69) (om-make-color 0 0 0)) (list (list 2 69 0) (om-make-color 0 0 0)) (list (list 2 70) (om-make-color 0 0 0)) (list (list 2 70 0) (om-make-color 0 0 0)) (list (list 2 71) (om-make-color 0 0 0)) (list (list 2 71 0) (om-make-color 0 0 0)) (list (list 3) (om-make-color 0 0 0)) (list (list 3 0) (om-make-color 0 0 0)) (list (list 3 0 0) (om-make-color 0 0 0)) (list (list 3 1) (om-make-color 0 0 0)) (list (list 3 1 0) (om-make-color 0 0 0)) (list (list 3 2) (om-make-color 0 0 0)) (list (list 3 2 0) (om-make-color 0 0 0)) (list (list 3 3) (om-make-color 0 0 0)) (list (list 3 3 0) (om-make-color 0 0 0)) (list (list 3 4) (om-make-color 0 0 0)) (list (list 3 4 0) (om-make-color 0 0 0)) (list (list 3 5) (om-make-color 0 0 0)) (list (list 3 5 0) (om-make-color 0 0 0)) (list (list 3 6) (om-make-color 0 0 0)) (list (list 3 6 0) (om-make-color 0 0 0)) (list (list 3 7) (om-make-color 0 0 0)) (list (list 3 7 0) (om-make-color 0 0 0)) (list (list 3 8) (om-make-color 0 0 0)) (list (list 3 8 0) (om-make-color 0 0 0)) (list (list 3 9) (om-make-color 0 0 0)) (list (list 3 9 0) (om-make-color 0 0 0)) (list (list 3 10) (om-make-color 0 0 0)) (list (list 3 10 0) (om-make-color 0 0 0)) (list (list 3 11) (om-make-color 0 0 0)) (list (list 3 11 0) (om-make-color 0 0 0)) (list (list 3 12) (om-make-color 0 0 0)) (list (list 3 12 0) (om-make-color 0 0 0)) (list (list 3 13) (om-make-color 0 0 0)) (list (list 3 13 0) (om-make-color 0 0 0)) (list (list 3 14) (om-make-color 0 0 0)) (list (list 3 14 0) (om-make-color 0 0 0)) (list (list 3 15) (om-make-color 0 0 0)) (list (list 3 15 0) (om-make-color 0 0 0)) (list (list 3 16) (om-make-color 0 0 0)) (list (list 3 16 0) (om-make-color 0 0 0)) (list (list 3 17) (om-make-color 0 0 0)) (list (list 3 17 0) (om-make-color 0 0 0)) (list (list 3 18) (om-make-color 0 0 0)) (list (list 3 18 0) (om-make-color 0 0 0)) (list (list 3 19) (om-make-color 0 0 0)) (list (list 3 19 0) (om-make-color 0 0 0)) (list (list 3 20) (om-make-color 0 0 0)) (list (list 3 20 0) (om-make-color 0 0 0)) (list (list 3 21) (om-make-color 0 0 0)) (list (list 3 21 0) (om-make-color 0 0 0)) (list (list 3 22) (om-make-color 0 0 0)) (list (list 3 22 0) (om-make-color 0 0 0)) (list (list 3 23) (om-make-color 0 0 0)) (list (list 3 23 0) (om-make-color 0 0 0)) (list (list 3 24) (om-make-color 0 0 0)) (list (list 3 24 0) (om-make-color 0 0 0)) (list (list 3 25) (om-make-color 0 0 0)) (list (list 3 25 0) (om-make-color 0 0 0)) (list (list 3 26) (om-make-color 0 0 0)) (list (list 3 26 0) (om-make-color 0 0 0)) (list (list 3 27) (om-make-color 0 0 0)) (list (list 3 27 0) (om-make-color 0 0 0)) (list (list 3 28) (om-make-color 0 0 0)) (list (list 3 28 0) (om-make-color 0 0 0)) (list (list 3 29) (om-make-color 0 0 0)) (list (list 3 29 0) (om-make-color 0 0 0)) (list (list 3 30) (om-make-color 0 0 0)) (list (list 3 30 0) (om-make-color 0 0 0)) (list (list 3 31) (om-make-color 0 0 0)) (list (list 3 31 0) (om-make-color 0 0 0)) (list (list 3 32) (om-make-color 0 0 0)) (list (list 3 32 0) (om-make-color 0 0 0)) (list (list 3 33) (om-make-color 0 0 0)) (list (list 3 33 0) (om-make-color 0 0 0)) (list (list 3 34) (om-make-color 0 0 0)) (list (list 3 34 0) (om-make-color 0 0 0)) (list (list 3 35) (om-make-color 0 0 0)) (list (list 3 35 0) (om-make-color 0 0 0)) (list (list 3 36) (om-make-color 0 0 0)) (list (list 3 36 0) (om-make-color 0 0 0)) (list (list 3 37) (om-make-color 0 0 0)) (list (list 3 37 0) (om-make-color 0 0 0)) (list (list 3 38) (om-make-color 0 0 0)) (list (list 3 38 0) (om-make-color 0 0 0)) (list (list 3 39) (om-make-color 0 0 0)) (list (list 3 39 0) (om-make-color 0 0 0)) (list (list 3 40) (om-make-color 0 0 0)) (list (list 3 40 0) (om-make-color 0 0 0)) (list (list 3 41) (om-make-color 0 0 0)) (list (list 3 41 0) (om-make-color 0 0 0)) (list (list 3 42) (om-make-color 0 0 0)) (list (list 3 42 0) (om-make-color 0 0 0)) (list (list 3 43) (om-make-color 0 0 0)) (list (list 3 43 0) (om-make-color 0 0 0)) (list (list 3 44) (om-make-color 0 0 0)) (list (list 3 44 0) (om-make-color 0 0 0)) (list (list 3 45) (om-make-color 0 0 0)) (list (list 3 45 0) (om-make-color 0 0 0)) (list (list 3 46) (om-make-color 0 0 0)) (list (list 3 46 0) (om-make-color 0 0 0)) (list (list 3 47) (om-make-color 0 0 0)) (list (list 3 47 0) (om-make-color 0 0 0)) (list (list 3 48) (om-make-color 0 0 0)) (list (list 3 48 0) (om-make-color 0 0 0)) (list (list 3 49) (om-make-color 0 0 0)) (list (list 3 49 0) (om-make-color 0 0 0)) (list (list 3 50) (om-make-color 0 0 0)) (list (list 3 50 0) (om-make-color 0 0 0)) (list (list 3 51) (om-make-color 0 0 0)) (list (list 3 51 0) (om-make-color 0 0 0)) (list (list 3 52) (om-make-color 0 0 0)) (list (list 3 52 0) (om-make-color 0 0 0)) (list (list 3 53) (om-make-color 0 0 0)) (list (list 3 53 0) (om-make-color 0 0 0)) (list (list 3 54) (om-make-color 0 0 0)) (list (list 3 54 0) (om-make-color 0 0 0)) (list (list 3 55) (om-make-color 0 0 0)) (list (list 3 55 0) (om-make-color 0 0 0)) (list (list 3 56) (om-make-color 0 0 0)) (list (list 3 56 0) (om-make-color 0 0 0)) (list (list 3 57) (om-make-color 0 0 0)) (list (list 3 57 0) (om-make-color 0 0 0)) (list (list 3 58) (om-make-color 0 0 0)) (list (list 3 58 0) (om-make-color 0 0 0)) (list (list 3 59) (om-make-color 0 0 0)) (list (list 3 59 0) (om-make-color 0 0 0)) (list (list 3 60) (om-make-color 0 0 0)) (list (list 3 60 0) (om-make-color 0 0 0)) (list (list 3 61) (om-make-color 0 0 0)) (list (list 3 61 0) (om-make-color 0 0 0)) (list (list 3 62) (om-make-color 0 0 0)) (list (list 3 62 0) (om-make-color 0 0 0)) (list (list 3 63) (om-make-color 0 0 0)) (list (list 3 63 0) (om-make-color 0 0 0)) (list (list 3 64) (om-make-color 0 0 0)) (list (list 3 64 0) (om-make-color 0 0 0)) (list (list 3 65) (om-make-color 0 0 0)) (list (list 3 65 0) (om-make-color 0 0 0)) (list (list 3 66) (om-make-color 0 0 0)) (list (list 3 66 0) (om-make-color 0 0 0)) (list (list 3 67) (om-make-color 0 0 0)) (list (list 3 67 0) (om-make-color 0 0 0)) (list (list 3 68) (om-make-color 0 0 0)) (list (list 3 68 0) (om-make-color 0 0 0)) (list (list 3 69) (om-make-color 0 0 0)) (list (list 3 69 0) (om-make-color 0 0 0)) (list (list 3 70) (om-make-color 0 0 0)) (list (list 3 70 0) (om-make-color 0 0 0)) (list (list 3 71) (om-make-color 0 0 0)) (list (list 3 71 0) (om-make-color 0 0 0)) (list (list 4) (om-make-color 0 0 0)) (list (list 4 0) (om-make-color 0 0 0)) (list (list 4 0 0) (om-make-color 0 0 0)) (list (list 4 1) (om-make-color 0 0 0)) (list (list 4 1 0) (om-make-color 0 0 0)) (list (list 4 2) (om-make-color 0 0 0)) (list (list 4 2 0) (om-make-color 0 0 0)) (list (list 4 3) (om-make-color 0 0 0)) (list (list 4 3 0) (om-make-color 0 0 0)) (list (list 4 4) (om-make-color 0 0 0)) (list (list 4 4 0) (om-make-color 0 0 0)) (list (list 4 5) (om-make-color 0 0 0)) (list (list 4 5 0) (om-make-color 0 0 0)) (list (list 4 6) (om-make-color 0 0 0)) (list (list 4 6 0) (om-make-color 0 0 0)) (list (list 4 7) (om-make-color 0 0 0)) (list (list 4 7 0) (om-make-color 0 0 0)) (list (list 4 8) (om-make-color 0 0 0)) (list (list 4 8 0) (om-make-color 0 0 0)) (list (list 4 9) (om-make-color 0 0 0)) (list (list 4 9 0) (om-make-color 0 0 0)) (list (list 4 10) (om-make-color 0 0 0)) (list (list 4 10 0) (om-make-color 0 0 0)) (list (list 4 11) (om-make-color 0 0 0)) (list (list 4 11 0) (om-make-color 0 0 0)) (list (list 4 12) (om-make-color 0 0 0)) (list (list 4 12 0) (om-make-color 0 0 0)) (list (list 4 13) (om-make-color 0 0 0)) (list (list 4 13 0) (om-make-color 0 0 0)) (list (list 4 14) (om-make-color 0 0 0)) (list (list 4 14 0) (om-make-color 0 0 0)) (list (list 4 15) (om-make-color 0 0 0)) (list (list 4 15 0) (om-make-color 0 0 0)) (list (list 4 16) (om-make-color 0 0 0)) (list (list 4 16 0) (om-make-color 0 0 0)) (list (list 4 17) (om-make-color 0 0 0)) (list (list 4 17 0) (om-make-color 0 0 0)) (list (list 4 18) (om-make-color 0 0 0)) (list (list 4 18 0) (om-make-color 0 0 0)) (list (list 4 19) (om-make-color 0 0 0)) (list (list 4 19 0) (om-make-color 0 0 0)) (list (list 4 20) (om-make-color 0 0 0)) (list (list 4 20 0) (om-make-color 0 0 0)) (list (list 4 21) (om-make-color 0 0 0)) (list (list 4 21 0) (om-make-color 0 0 0)) (list (list 4 22) (om-make-color 0 0 0)) (list (list 4 22 0) (om-make-color 0 0 0)) (list (list 4 23) (om-make-color 0 0 0)) (list (list 4 23 0) (om-make-color 0 0 0)) (list (list 4 24) (om-make-color 0 0 0)) (list (list 4 24 0) (om-make-color 0 0 0)) (list (list 4 25) (om-make-color 0 0 0)) (list (list 4 25 0) (om-make-color 0 0 0)) (list (list 4 26) (om-make-color 0 0 0)) (list (list 4 26 0) (om-make-color 0 0 0)) (list (list 4 27) (om-make-color 0 0 0)) (list (list 4 27 0) (om-make-color 0 0 0)) (list (list 4 28) (om-make-color 0 0 0)) (list (list 4 28 0) (om-make-color 0 0 0)) (list (list 4 29) (om-make-color 0 0 0)) (list (list 4 29 0) (om-make-color 0 0 0)) (list (list 4 30) (om-make-color 0 0 0)) (list (list 4 30 0) (om-make-color 0 0 0)) (list (list 4 31) (om-make-color 0 0 0)) (list (list 4 31 0) (om-make-color 0 0 0)) (list (list 4 32) (om-make-color 0 0 0)) (list (list 4 32 0) (om-make-color 0 0 0)) (list (list 4 33) (om-make-color 0 0 0)) (list (list 4 33 0) (om-make-color 0 0 0)) (list (list 4 34) (om-make-color 0 0 0)) (list (list 4 34 0) (om-make-color 0 0 0)) (list (list 4 35) (om-make-color 0 0 0)) (list (list 4 35 0) (om-make-color 0 0 0)) (list (list 4 36) (om-make-color 0 0 0)) (list (list 4 36 0) (om-make-color 0 0 0)) (list (list 4 37) (om-make-color 0 0 0)) (list (list 4 37 0) (om-make-color 0 0 0)) (list (list 4 38) (om-make-color 0 0 0)) (list (list 4 38 0) (om-make-color 0 0 0)) (list (list 4 39) (om-make-color 0 0 0)) (list (list 4 39 0) (om-make-color 0 0 0)) (list (list 4 40) (om-make-color 0 0 0)) (list (list 4 40 0) (om-make-color 0 0 0)) (list (list 4 41) (om-make-color 0 0 0)) (list (list 4 41 0) (om-make-color 0 0 0)) (list (list 4 42) (om-make-color 0 0 0)) (list (list 4 42 0) (om-make-color 0 0 0)) (list (list 4 43) (om-make-color 0 0 0)) (list (list 4 43 0) (om-make-color 0 0 0)) (list (list 4 44) (om-make-color 0 0 0)) (list (list 4 44 0) (om-make-color 0 0 0)) (list (list 4 45) (om-make-color 0 0 0)) (list (list 4 45 0) (om-make-color 0 0 0)) (list (list 4 46) (om-make-color 0 0 0)) (list (list 4 46 0) (om-make-color 0 0 0)) (list (list 4 47) (om-make-color 0 0 0)) (list (list 4 47 0) (om-make-color 0 0 0)) (list (list 4 48) (om-make-color 0 0 0)) (list (list 4 48 0) (om-make-color 0 0 0)) (list (list 4 49) (om-make-color 0 0 0)) (list (list 4 49 0) (om-make-color 0 0 0)) (list (list 4 50) (om-make-color 0 0 0)) (list (list 4 50 0) (om-make-color 0 0 0)) (list (list 4 51) (om-make-color 0 0 0)) (list (list 4 51 0) (om-make-color 0 0 0)) (list (list 4 52) (om-make-color 0 0 0)) (list (list 4 52 0) (om-make-color 0 0 0)) (list (list 4 53) (om-make-color 0 0 0)) (list (list 4 53 0) (om-make-color 0 0 0)) (list (list 4 54) (om-make-color 0 0 0)) (list (list 4 54 0) (om-make-color 0 0 0)) (list (list 4 55) (om-make-color 0 0 0)) (list (list 4 55 0) (om-make-color 0 0 0)) (list (list 4 56) (om-make-color 0 0 0)) (list (list 4 56 0) (om-make-color 0 0 0)) (list (list 4 57) (om-make-color 0 0 0)) (list (list 4 57 0) (om-make-color 0 0 0)) (list (list 4 58) (om-make-color 0 0 0)) (list (list 4 58 0) (om-make-color 0 0 0)) (list (list 4 59) (om-make-color 0 0 0)) (list (list 4 59 0) (om-make-color 0 0 0)) (list (list 4 60) (om-make-color 0 0 0)) (list (list 4 60 0) (om-make-color 0 0 0)) (list (list 4 61) (om-make-color 0 0 0)) (list (list 4 61 0) (om-make-color 0 0 0)) (list (list 4 62) (om-make-color 0 0 0)) (list (list 4 62 0) (om-make-color 0 0 0)) (list (list 4 63) (om-make-color 0 0 0)) (list (list 4 63 0) (om-make-color 0 0 0)) (list (list 4 64) (om-make-color 0 0 0)) (list (list 4 64 0) (om-make-color 0 0 0)) (list (list 4 65) (om-make-color 0 0 0)) (list (list 4 65 0) (om-make-color 0 0 0)) (list (list 4 66) (om-make-color 0 0 0)) (list (list 4 66 0) (om-make-color 0 0 0)) (list (list 4 67) (om-make-color 0 0 0)) (list (list 4 67 0) (om-make-color 0 0 0)) (list (list 4 68) (om-make-color 0 0 0)) (list (list 4 68 0) (om-make-color 0 0 0)) (list (list 4 69) (om-make-color 0 0 0)) (list (list 4 69 0) (om-make-color 0 0 0)) (list (list 4 70) (om-make-color 0 0 0)) (list (list 4 70 0) (om-make-color 0 0 0)) (list (list 4 71) (om-make-color 0 0 0)) (list (list 4 71 0) (om-make-color 0 0 0)))) (set-extra-pairs newobj 'nil) (set-patch-pairs newobj 'nil) (set-tonalite newobj nil) newobj)) nil nil (corrige (pairlis '(obj-mode palette-mode winpos winsize mode grillestep notechancolor? zoom inport outport deltapict cmnpref staff fontsize approx show-stems) (list 2 0 2621450 18350450 0 1000 nil 1 1 1 (om-make-point 0 0) (let ((newobj (make-instance 'edition-values))) (setf (paper-size newobj) (om-make-point 600 800)) (setf (top-margin newobj) 2) (setf (left-margin newobj) 1) (setf (right-margin newobj) 1) (setf (bottom-margin newobj) 1) (setf (orientation newobj) nil) (setf (scale newobj) nil) (setf (system-space newobj) '(1 1 1 1 1)) (setf (line-space newobj) 1) (setf (title newobj) nil) (setf (show-title? newobj) nil) (setf (show-page? newobj) nil) (setf (sheet-id newobj) nil) (setf (page-mode newobj) nil) newobj) (list 'g 'g 'g 'g 'g) 24 2 't))) t nil nil) (om-load-boxcall 'bastype "aux11" 't 'nil (om-make-point 777 62) (om-make-point 265 49) (list 0 1 5 2 6 7 7 8 0 9 1 2 2 3 7 4 8 9 9 10 2 11 3 4 4 5 9 6 10 11 11 0 4 1 5 6 6 7 11 8 0 1 1 2 6 3 7 8 8 9 1 10 2 3 3 4 8 5 9 10 10 11 3 0 4 5 5 6 10 7 11 0) "(0 1 5 2 6 7 7 8 0 9 1 2 2 3 7 4 8 9 9 10 2 11 3 4 4 5 9 6 10 11 11 0 4 1 5 6 6 7 11 8 0 1 1 2 6 3 7 8 8 9 1 10 2 3 3 4 8 5 9 10 10 11 3 0 4 5 5 6 10 7 11 0)" nil) (om-load-boxcomment "comment1" (om-make-point 665 57) '"Reducibility by successive additions" "" (om-make-point 180 0) nil (om-make-color 5/17 41/255 143/255) (om-make-font "Geneva" 36 :family nil :style 'nil :mode nil)) (om-load-boxcall 'bastype "aux1" 't 'nil (om-make-point 249 74) (om-make-point 261 55) (list 0 1 5 2 6 7 7 8 0 9 1 2 2 3 7 4 8 9 9 10 2 11 3 4 4 5 9 6 10 11 11 0 4 1 5 6 6 7 11 8 0 1 1 2 6 3 7 8 8 9 1 10 2 3 3 4 8 5 9 10 10 11 3 0 4 5 5 6 10 7 11 0) "(0 1 5 2 6 7 7 8 0 9 1 2 2 3 7 4 8 9 9 10 2 11 3 4 4 5 9 6 10 11 11 0 4 1 5 6 6 7 11 8 0 1 1 2 6 3 7 8 8 9 1 10 2 3 3 4 8 5 9 10 10 11 3 0 4 5 5 6 10 7 11 0)" nil) (om-load-boxcomment "comment" (om-make-point 115 33) '"period = 72" "" (om-make-point 521 79) nil (om-make-color 0 0 0) (om-make-font "Geneva" 10 :family nil :style 'nil :mode nil)) (om-load-boxcall 'bastype "aux2" 't 'nil (om-make-point 141 83) (om-make-point 57 20) (list 3 1 0) "(3 1 0)" nil) (om-load-boxcall 'bastype "aux" 't 'nil (om-make-point 41 85) (om-make-point 23 20) (list 2) "(2)" nil) (om-load-boxcall 'bastype "aux1" 't 'nil (om-make-point 228 246) (om-make-point 404 258) (list 0 1 5 0 11 7 0 1 5 0 11 7 2 2 2 4 6 11 9 6 9 1 8 3 11 2 11 9 4 8 6 2 4 9 1 8 3 11 4 5 5 8 7 3 2 6 6 0 10 11 9 2 5 5 0 7 11 6 11 1 0 4 2 6 8 1 5 8 11 7 0 5 9 0 3 7 2 6 2 8 2 3 1 2 9 5 4 3 7 2 3 5 4 8 2 2 4 9 5 0 3 3 4 5 9 8 11 11 6 10 2 0 2 7 9 10 5 9 8 7 11 2 11 1 0 8 6 6 0 1 5 0 11 11 8 9 1 8 3 11 10 6 10 8 6 11 1 2 5 5 4 3 11 6 3 9 4 8 6 2 8 5 9 4 11 3 8 1 9 4 11 3 2 10 2 8 2 7 9 2 9 9 0 7 11 6 11 5 8 0 10 2 0 5 1 0 7 11 0 5 1 8 11 11 10 6 2 0 6 3 1 2 9 5 8 11 3 10 11 9 8 4 6 10 8 9 5 4 11 11 8 1 9 8 3 3 6 10 2 0 2 11 5 6 1 5 0 11 7 6 7 5 0 8 10 2 8 5 1 0 11 3 0 9 1 8 3 11 2 2 6 4 2 3 5 10 9 1 8 3 11 10 11 5 8 4 6 2 0 9 9 4 11 3 8 5 5 0 7 11 6 2 10 0 10 11 9 2 1 5 8 11 7 6 11 9 0 0 10 2 0 5 5 8 3 7 8 9 5 4 3 7 2 6 2 4 2 11 5 10 9 5 0 3 3 10 11 9 8 8 2 6 4 5 9 8 7 3 4 5 9 8 7 11 2 2 10 0 2 3 9 6 1 5 0 11 11 2 3 1 8 0 2 10 0 1 5 0 11 7 8 5 5 4 3 11 6 6 6 4 2 3 5 2 5 9 4 11 3 2 7 9 4 8 6 2 4 5 5 8 7 3 8 9 9 0 7 11 6 2 2 8 6 7 5 6 5 1 0 7 11 6 11 1 8 8 2 10 0 5 9 0 3 7 8 9 5 8 11 3 10 2 6 8 10 3 1 2 9 5 4 11 11 2 7 9 8 0 6 6 4 5 9 8 11 11 0 1 5 0 11 7 6 10 2 0 2 7 5 2 5 1 0 11 3 6 3 1 8 0 2 2 8 9 1 8 3 11 4 9 1 8 3 11 10 2 2 8 10 3 5 6 9 9 4 11 3 2 11 5 0 4 2 6 8 1 9 4 11 3 8 1 5 8 11 7 6 2 6 0 6 7 5 6 5 5 8 3 7 2 3 5 4 0 10 2 0 5 1 8 11 11 4 9 5 0 3 3 10 2 6 8 2 11 9 10 5 9 8 7 3 10 11 9 8 4 2 2 8 1 9 8 3 3 0 1 5 0 11 11 2 6 10 8 6 11 1 6 1 5 0 11 7 2 11 5 4 0 2 6 0 9 1 8 3 11 8 5 9 4 11 3 2 10 6 4 2 3 5 10 5 5 8 7 3 2 3 9 0 4 2 6 8 5 5 0 7 11 0 5 1 0 7 11 6 2 10 8 2 11 1 6 5 9 0 3 7 2 3 5 8 8 6 10 8 9 5 4 3 7 8 9 5 4 11 11 2 10 6 8 6 3 9 10 5 9 8 11 11 6 7 5 0 8 10 6 4 5 9 8 7 11 8 5 1 0 11 3 6 6 10 8 6 11 5 2 9 1 8 3 11 10 3 1 8 0 2 10 8 5 5 4 3 11 0 9 9 4 11 3 2 2 2 0 10 11 9 2 1 9 4 11 3 2 7 5 8 8 10 6 8 9 9 0 7 11 0 5 5 8 3 7 2 6 2 4 6 7 5 6 5 1 8 11 11 10 3 5 0 0 6 10 8 9 5 8 11 3 4 5 9 8 7 3 10 2 6 8 10 11 5 2 1 9 8 3 3 6 7 5 0 8 2 2) "(0 1 5 0 11 7 0 1 5 0 11 7 2 2 2 4 6 11 9 6 9 1 8 3 11 2 11 9 4 8 6 2 4 9 1 8 3 11 4 5 5 8 7 3 2 6 6 0 10 11 9 2 5 5 0 7 11 6 11 1 0 4 2 6 8 1 5 8 11 7 0 5 9 0 3 7 2 6 2 8 2 3 1 2 9 5 4 3 7 2 3 5 4 8 2 2 4 9 5 0 3 3 4 5 9 8 11 11 6 10 2 0 2 7 9 10 5 9 8 7 11 2 11 1 0 8 6 6 0 1 5 0 11 11 8 9 1 8 3 11 10 6 10 8 6 11 1 2 5 5 4 3 11 6 3 9 4 8 6 2 8 5 9 4 11 3 8 1 9 4 11 3 2 10 2 8 2 7 9 2 9 9 0 7 11 6 11 5 8 0 10 2 0 5 1 0 7 11 0 5 1 8 11 11 10 6 2 0 6 3 1 2 9 5 8 11 3 10 11 9 8 4 6 10 8 9 5 4 11 11 8 1 9 8 3 3 6 10 2 0 2 11 5 6 1 5 0 11 7 6 7 5 0 8 10 2 8 5 1 0 11 3 0 9 1 8 3 11 2 2 6 4 2 3 5 10 9 1 8 3 11 10 11 5 8 4 6 2 0 9 9 4 11 3 8 5 5 0 7 11 6 2 10 0 10 11 9 2 1 5 8 11 7 6 11 9 0 0 10 2 0 5 5 8 3 7 8 9 5 4 3 7 2 6 2 4 2 11 5 10 9 5 0 3 3 10 11 9 8 8 2 6 4 5 9 8 7 3 4 5 9 8 7 11 2 2 10 0 2 3 9 6 1 5 0 11 11 2 3 1 8 0 2 10 0 1 5 0 11 7 8 5 5 4 3 11 6 6 6 4 2 3 5 2 5 9 4 11 3 2 7 9 4 8 6 2 4 5 5 8 7 3 8 9 9 0 7 11 6 2 2 8 6 7 5 6 5 1 0 7 11 6 11 1 8 8 2 10 0 5 9 0 3 7 8 9 5 8 11 3 10 2 6 8 10 3 1 2 9 5 4 11 11 2 7 9 8 0 6 6 4 5 9 8 11 11 0 1 5 0 11 7 6 10 2 0 2 7 5 2 5 1 0 11 3 6 3 1 8 0 2 2 8 9 1 8 3 11 4 9 1 8 3 11 10 2 2 8 10 3 5 6 9 9 4 11 3 2 11 5 0 4 2 6 8 1 9 4 11 3 8 1 5 8 11 7 6 2 6 0 6 7 5 6 5 5 8 3 7 2 3 5 4 0 10 2 0 5 1 8 11 11 4 9 5 0 3 3 10 2 6 8 2 11 9 10 5 9 8 7 3 10 11 9 8 4 2 2 8 1 9 8 3 3 0 1 5 0 11 11 2 6 10 8 6 11 1 6 1 5 0 11 7 2 11 5 4 0 2 6 0 9 1 8 3 11 8 5 9 4 11 3 2 10 6 4 2 3 5 10 5 5 8 7 3 2 3 9 0 4 2 6 8 5 5 0 7 11 0 5 1 0 7 11 6 2 10 8 2 11 1 6 5 9 0 3 7 2 3 5 8 8 6 10 8 9 5 4 3 7 8 9 5 4 11 11 2 10 6 8 6 3 9 10 5 9 8 11 11 6 7 5 0 8 10 6 4 5 9 8 7 11 8 5 1 0 11 3 6 6 10 8 6 11 5 2 9 1 8 3 11 10 3 1 8 0 2 10 8 5 5 4 3 11 0 9 9 4 11 3 2 2 2 0 10 11 9 2 1 9 4 11 3 2 7 5 8 8 10 6 8 9 9 0 7 11 0 5 5 8 3 7 2 6 2 4 6 7 5 6 5 1 8 11 11 10 3 5 0 0 6 10 8 9 5 8 11 3 4 5 9 8 7 3 10 2 6 8 10 11 5 2 1 9 8 3 3 6 7 5 0 8 2 2)" nil)) '((5 0 0 0 nil 0) (6 0 0 1 nil 0) (16 0 1 0 nil 0) (15 0 1 1 nil 0) (11 0 2 0 nil 0) (8 0 2 1 nil 0) (13 0 3 0 nil 0) (17 0 4 0 nil 0) (2 0 9 0 nil 0) (9 0 10 1 nil 0)) (list (let ((newpict (make-instance 'patch-picture :name '|USER-ciel|))) (setf (thepict newpict) (om-get-picture '|USER-ciel|)) (setf (name newpict) '|USER-ciel|) (setf (pict-pos newpict) (om-make-point 695 58)) (setf (pict-size newpict) (om-make-point 417 216)) newpict) (let ((newpict (make-instance 'patch-picture :name '|USER-ciel|))) (setf (thepict newpict) (om-get-picture '|USER-ciel|)) (setf (name newpict) '|USER-ciel|) (setf (pict-pos newpict) (om-make-point 22 214)) (setf (pict-size newpict) (om-make-point 575 464)) newpict)) 5.0))
