; OM File Header - Saved 2015/03/10 17:00:51
; (6.080003 :patc (om-make-point 118 260) (om-make-point 50 50) (om-make-point 1364 558) "" 183 0 "2015/03/10 16:37:58" "2015/03/10 16:37:58")
; End File Header
(in-package :om)(load-lib-for (quote nil))(setf *om-current-persistent* (om-load-patch1 "cosmobagatela01_geradora" (quote ((om-load-boxcall (quote bastype) "list 7" (quote list) (quote nil) (om-make-point 978 378) (om-make-point 403 32) (list (quote d4) (quote bb1) (quote gb2) (quote d3)) "(D4 Bb1 Gb2 D3 ) (C#4 Bb1 Gb2 C#3 )  (D2 B2 G2 D3 D4 ) (D3 G2) " nil) (om-load-boxcall (quote genfun) "N->MC 6" (quote n->mc) (quote ((om-load-inputfun (quote input-funbox) "note name or list of note names" "STRS" (list "C3")))) (om-make-point 425 505) nil nil nil nil 1) (om-load-boxcall (quote bastype) "list 6" (quote list) (quote nil) (om-make-point 183 437) (om-make-point 1225 32) (list (quote bb2) (quote gb3) (quote d4) (quote f4) (quote c\#5) (quote a5) (quote a4) (quote a3) (quote a2) (quote a1) (quote c\#2) (quote eb1) (quote bb1) (quote gb2) (quote d3) (quote f3) (quote c\#4) (quote a4) (quote e5) (quote eb1) (quote bb1) (quote gb2) (quote d3) (quote eb2) (quote bb2) (quote gb3) (quote d4) (quote bb1) (quote gb2) (quote d3) (quote d3) (quote d2) (quote gb2) (quote g2) (quote d3) (list (quote g2) (quote bb3) (quote d3)) (quote d4) (list (quote d4) (quote f4) (quote a2)) (quote a\#3) (quote g3) (quote g4) (quote g2) (quote a\#1) (list (quote g1) (quote g0)) (list (quote g1) (quote b2) (quote e3) (quote g4))) "(Bb2 Gb3 D4 F4 C#5 A5 A4 A3 A2 A1 C#2 Eb1 Bb1 Gb2 D3 F3 C#4 A4 E5 Eb1 Bb1 Gb2 D3 Eb2 Bb2 Gb3 D4 Bb1 Gb2 D3 D3 D2 Gb2 G2 D3 (G2 Bb3 D3 ) D4 (D4 F4 A2) A#3 G3 G4 G2 A#1 (G1 G0) (G1 B2 E3 G4) )" nil) (om-load-editor-box1 "CHORD-SEQ 2" (quote chord-seq) (quote ((om-load-inputfun (quote input-funbox) "object" "self" nil) (om-load-inputfun (quote input-funbox) "pitches (mc): list or list of lists" "lmidic" (list 6000)) (om-load-inputfun (quote input-funbox) "onsets (ms): list" "lonset" (list 0 180)) (om-load-inputfun (quote input-funbox) "durations (ms): list or list of lists" "ldur" (list 1000)) (om-load-inputfun (quote input-funbox) "velocities (0-127): list or list of lists" "lvel" (list 100)) (om-load-inputfun (quote input-funbox) "offsets (ms): list or list of lists" "loffset" (list 0)) (om-load-inputfun (quote input-funbox) "MIDI channels (1-16): list or list of lists" "lchan" (list 1)) (om-load-inputfun (quote input-funbox) "relative chords duration (0-100)" "legato" 0))) (om-make-point 521 490) (om-make-point 462 131) (let ((newobj (when (find-class (quote chord-seq) nil) (make-instance (quote chord-seq) :lmidic (quote ((5800) (6600) (7400) (7700) (8500) (9300) (8100) (6900) (5700) (4500) (4900) (3900) (4600) (5400) (6200) (6500) (7300) (8100) (8800) (3900) (4600) (5400) (6200) (5100) (5800) (6600) (7400) (4600) (5400) (6200) (6200) (5000) (5400) (5500) (6200) (5500 7000 6200) (7400) (7400 7700 5700) (7000) (6700) (7900) (5500) (4600) (4300 3100) (4300 5900 6400 7900))) :lonset (quote (0 180 360 540 720 900 1080 1260 1440 1620 1800 1980 2160 2340 2520 2700 2880 3060 3240 3420 3600 3780 3960 4140 4320 4500 4680 4860 5040 5220 5400 5580 5760 5940 6120 6300 6480 6660 6840 7020 7200 7380 7560 7740 7920 8920)) :ldur (quote ((1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000 1000 1000) (1000) (1000 1000 1000) (1000) (1000) (1000) (1000) (1000) (1000 1000) (1000 1000 1000 1000))) :lvel (quote ((100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100 100 100) (100) (100 100 100) (100) (100) (100) (100) (100) (100 100) (100 100 100 100))) :loffset (quote ((0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0 0) (0) (0 0 0) (0) (0) (0) (0) (0) (0 0) (0 0 0 0))) :lchan (quote ((1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1 1 1) (1) (1 1 1) (1) (1) (1) (1) (1) (1 1) (1 1 1 1))) :legato 0)))) (load-port-info newobj (quote ((0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0 0) (0) (0 0 0) (0) (0) (0) (0) (0) (0 0) (0 0 0 0)))) (init-mus-color newobj (quote nil)) (set-extra-pairs newobj (quote nil)) (set-patch-pairs newobj (quote nil)) (set-name newobj nil) (set-tonalite newobj nil) newobj) nil nil (pairlis (quote (approx fontsize staff cmnpref deltapict outport inport player zoom notechancolor? grillestep mode winsize winpos score-mode obj-mode cursor-mode show-stems scale)) (list 2 24 (quote gf) (let ((newobj (make-instance (quote edition-values)))) (setf (paper-size newobj) (om-make-point 600 800)) (setf (top-margin newobj) 2) (setf (left-margin newobj) 1) (setf (right-margin newobj) 1) (setf (bottom-margin newobj) 1) (setf (orientation newobj) nil) (setf (scale newobj) nil) (setf (system-space newobj) (quote (1))) (setf (system-color newobj) (quote nil)) (setf (line-space newobj) 1) (setf (title newobj) nil) (setf (show-title? newobj) nil) (setf (show-page? newobj) nil) (setf (sheet-id newobj) nil) (setf (page-mode newobj) nil) newobj) (om-make-point 0 0) nil nil (quote :jackmidi) 1 nil 1000 0 (om-make-point 552 331) (om-make-point 0 0) 0 1 (quote :normal) (quote t) nil)) t nil nil nil) (om-load-editor-box1 "CHORD-SEQ" (quote chord-seq) (quote ((om-load-inputfun (quote input-funbox) "object" "self" nil) (om-load-inputfun (quote input-funbox) "pitches (mc): list or list of lists" "lmidic" (list 6000)) (om-load-inputfun (quote input-funbox) "onsets (ms): list" "lonset" (list 0 200)) (om-load-inputfun (quote input-funbox) "durations (ms): list or list of lists" "ldur" (list 1000)) (om-load-inputfun (quote input-funbox) "velocities (0-127): list or list of lists" "lvel" (list 100)) (om-load-inputfun (quote input-funbox) "offsets (ms): list or list of lists" "loffset" (list 0)) (om-load-inputfun (quote input-funbox) "MIDI channels (1-16): list or list of lists" "lchan" (list 1)) (om-load-inputfun (quote input-funbox) "relative chords duration (0-100)" "legato" 0))) (om-make-point 827 58) (om-make-point 136 123) (let ((newobj (when (find-class (quote chord-seq) nil) (make-instance (quote chord-seq) :lmidic (quote ((3900) (4600) (5400) (6200) (6500) (7300) (8100) (8800))) :lonset (quote (0 200 400 600 800 1000 1200 1400 2400)) :ldur (quote ((1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000))) :lvel (quote ((100) (100) (100) (100) (100) (100) (100) (100))) :loffset (quote ((0) (0) (0) (0) (0) (0) (0) (0))) :lchan (quote ((1) (1) (1) (1) (1) (1) (1) (1))) :legato 0)))) (load-port-info newobj (quote ((0) (0) (0) (0) (0) (0) (0) (0)))) (init-mus-color newobj (quote nil)) (set-extra-pairs newobj (quote nil)) (set-patch-pairs newobj (quote nil)) (set-name newobj nil) (set-tonalite newobj nil) newobj) nil nil (pairlis (quote (approx fontsize staff cmnpref deltapict outport inport player zoom notechancolor? grillestep mode winsize winpos score-mode obj-mode cursor-mode show-stems scale)) (list 2 24 (quote gf) (let ((newobj (make-instance (quote edition-values)))) (setf (paper-size newobj) (om-make-point 600 800)) (setf (top-margin newobj) 2) (setf (left-margin newobj) 1) (setf (right-margin newobj) 1) (setf (bottom-margin newobj) 1) (setf (orientation newobj) nil) (setf (scale newobj) nil) (setf (system-space newobj) (quote (1))) (setf (system-color newobj) (quote nil)) (setf (line-space newobj) 1) (setf (title newobj) nil) (setf (show-title? newobj) nil) (setf (show-page? newobj) nil) (setf (sheet-id newobj) nil) (setf (page-mode newobj) nil) newobj) (om-make-point 0 0) nil nil (quote :jackmidi) 1 nil 1000 0 (om-make-point 552 331) (om-make-point 0 0) 0 1 (quote :normal) (quote t) nil)) t nil nil nil) (om-load-boxcall (quote bastype) "list 5" (quote list) (quote nil) (om-make-point 655 24) (om-make-point 203 32) (list (quote eb1) (quote bb1) (quote gb2) (quote d3) (quote f3) (quote c\#4) (quote a4) (quote e5)) "(Eb1 Bb1 Gb2 D3 F3 C#4 A4 E5)" nil) (om-load-boxcall (quote genfun) "OM/ 5" (quote om/) (quote ((om-load-inputfun (quote input-funbox) "number or list" "ARG1" 1) (om-load-inputfun (quote input-funbox) "number or list" "ARG2" 100))) (om-make-point 909 221) nil nil nil nil 1) (om-load-editor-box1 "TEXT-BOX 5" (quote text-box) (quote ((om-load-inputfun (quote input-funbox) "dialog-item text (string)" "text" "untitled"))) (om-make-point 838 261) (om-make-point 110 51) (om-make-dialog-item (quote text-box) (om-make-point 1 1) (om-make-point 90 24) "(7 8 8 3 8 8 7)" :font (om-make-font "DejaVu Sans" 10.998697916666666D0 :family "DejaVu Sans" :style (quote (:plain)) :mode (quote nil))) nil nil (pairlis (quote (winsize winpos)) (list (om-make-point 335 275) (om-make-point 10 40))) t nil nil nil) (om-load-boxcall (quote genfun) "X->DX 5" (quote x->dx) (quote ((om-load-inputfun (quote input-funbox) "a list of numbers" "SELF" 0))) (om-make-point 715 341) nil nil nil nil 1) (om-load-editor-box1 "CHORD 5" (quote chord) (quote ((om-load-inputfun (quote input-funbox) "object" "self" nil) (om-load-inputfun (quote input-funbox) "pitches (list of midicents)" "lmidic" (list 6000)) (om-load-inputfun (quote input-funbox) "velocities (list of values 0-127)" "lvel" (list 100)) (om-load-inputfun (quote input-funbox) "offsets (list of values in ms)" "loffset" (list 0)) (om-load-inputfun (quote input-funbox) "durations (list of values in ms)" "ldur" (list 1000)) (om-load-inputfun (quote input-funbox) "MIDI channels (list of values 0-16)" "lchan" (list 1)))) (om-make-point 686 194) (om-make-point 126 120) (let ((thechord (make-instance (quote chord) :lmidic (quote (3900 4600 5400 6200 6500 7300 8100 8800)) :ldur (quote (1000 1000 1000 1000 1000 1000 1000 1000)) :lvel (quote (100 100 100 100 100 100 100 100)) :loffset (quote (0 0 0 0 0 0 0 0)) :lchan (quote (1 1 1 1 1 1 1 1))))) (load-port-info thechord (quote (0 0 0 0 0 0 0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) nil nil (pairlis (quote (approx fontsize staff cmnpref deltapict outport inport player zoom notechancolor? grillestep mode winsize winpos score-mode obj-mode cursor-mode show-stems scale)) (list 2 24 (quote gf) (let ((newobj (make-instance (quote edition-values)))) (setf (paper-size newobj) (om-make-point 600 800)) (setf (top-margin newobj) 2) (setf (left-margin newobj) 1) (setf (right-margin newobj) 1) (setf (bottom-margin newobj) 1) (setf (orientation newobj) nil) (setf (scale newobj) nil) (setf (system-space newobj) (quote (1))) (setf (system-color newobj) (quote nil)) (setf (line-space newobj) 1) (setf (title newobj) nil) (setf (show-title? newobj) nil) (setf (show-page? newobj) nil) (setf (sheet-id newobj) nil) (setf (page-mode newobj) nil) newobj) (om-make-point 0 0) nil nil (quote :jackmidi) 1 nil 1000 0 (om-make-point 504 313) (om-make-point 0 0) 0 0 (quote :normal) (quote t) nil)) t nil nil nil) (om-load-boxcall (quote genfun) "N->MC 5" (quote n->mc) (quote ((om-load-inputfun (quote input-funbox) "note name or list of note names" "STRS" (list "C3")))) (om-make-point 652 101) nil nil nil nil 1) (om-load-boxcall (quote bastype) "list 3" (quote list) (quote nil) (om-make-point 456 66) (om-make-point 88 32) (list (quote db2) (quote c3) (quote b3)) "(Db2 C3 B3)" nil) (om-load-boxcall (quote genfun) "OM/ 4" (quote om/) (quote ((om-load-inputfun (quote input-funbox) "number or list" "ARG1" 1) (om-load-inputfun (quote input-funbox) "number or list" "ARG2" 100))) (om-make-point 583 199) nil nil nil nil 1) (om-load-editor-box1 "TEXT-BOX 4" (quote text-box) (quote ((om-load-inputfun (quote input-funbox) "dialog-item text (string)" "text" "untitled"))) (om-make-point 583 238) (om-make-point 62 50) (om-make-dialog-item (quote text-box) (om-make-point 1 1) (om-make-point 42 23) "(11 11)" :font (om-make-font "DejaVu Sans" 10.998697916666666D0 :family "DejaVu Sans" :style (quote (:plain)) :mode (quote nil))) nil nil (pairlis (quote (winsize winpos)) (list (om-make-point 335 275) (om-make-point 10 40))) t nil nil nil) (om-load-boxcall (quote genfun) "X->DX 4" (quote x->dx) (quote ((om-load-inputfun (quote input-funbox) "a list of numbers" "SELF" 0))) (om-make-point 518 344) nil nil nil nil 1) (om-load-editor-box1 "CHORD 4" (quote chord) (quote ((om-load-inputfun (quote input-funbox) "object" "self" nil) (om-load-inputfun (quote input-funbox) "pitches (list of midicents)" "lmidic" (list 6000)) (om-load-inputfun (quote input-funbox) "velocities (list of values 0-127)" "lvel" (list 100)) (om-load-inputfun (quote input-funbox) "offsets (list of values in ms)" "loffset" (list 0)) (om-load-inputfun (quote input-funbox) "durations (list of values in ms)" "ldur" (list 1000)) (om-load-inputfun (quote input-funbox) "MIDI channels (list of values 0-16)" "lchan" (list 1)))) (om-make-point 429 191) (om-make-point 126 108) (let ((thechord (make-instance (quote chord) :lmidic (quote (4900 6000 7100)) :ldur (quote (1000 1000 1000)) :lvel (quote (100 100 100)) :loffset (quote (0 0 0)) :lchan (quote (1 1 1))))) (load-port-info thechord (quote (0 0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) nil nil (pairlis (quote (approx fontsize staff cmnpref deltapict outport inport player zoom notechancolor? grillestep mode winsize winpos score-mode obj-mode cursor-mode show-stems scale)) (list 2 24 (quote gf) (let ((newobj (make-instance (quote edition-values)))) (setf (paper-size newobj) (om-make-point 600 800)) (setf (top-margin newobj) 2) (setf (left-margin newobj) 1) (setf (right-margin newobj) 1) (setf (bottom-margin newobj) 1) (setf (orientation newobj) nil) (setf (scale newobj) nil) (setf (system-space newobj) (quote (1))) (setf (system-color newobj) (quote nil)) (setf (line-space newobj) 1) (setf (title newobj) nil) (setf (show-title? newobj) nil) (setf (show-page? newobj) nil) (setf (sheet-id newobj) nil) (setf (page-mode newobj) nil) newobj) (om-make-point 0 0) nil nil (quote :jackmidi) 1 nil 1000 0 (om-make-point 504 313) (om-make-point 0 0) 0 0 (quote :normal) (quote t) nil)) t nil nil nil) (om-load-boxcall (quote genfun) "N->MC 4" (quote n->mc) (quote ((om-load-inputfun (quote input-funbox) "note name or list of note names" "STRS" (list "C3")))) (om-make-point 460 113) nil nil nil nil 1) (om-load-boxcall (quote bastype) "list 4" (quote list) (quote nil) (om-make-point 1149 14) (om-make-point 79 32) (list (quote f3) (quote d4) (quote b4)) "(F3 D4 B4)" nil) (om-load-boxcall (quote genfun) "OM/ 3" (quote om/) (quote ((om-load-inputfun (quote input-funbox) "number or list" "ARG1" 1) (om-load-inputfun (quote input-funbox) "number or list" "ARG2" 100))) (om-make-point 1275 146) nil nil nil nil 1) (om-load-editor-box1 "TEXT-BOX 3" (quote text-box) (quote ((om-load-inputfun (quote input-funbox) "dialog-item text (string)" "text" "untitled"))) (om-make-point 1275 185) (om-make-point 53 50) (om-make-dialog-item (quote text-box) (om-make-point 1 1) (om-make-point 33 23) "(9 9)" :font (om-make-font "DejaVu Sans" 10.998697916666666D0 :family "DejaVu Sans" :style (quote (:plain)) :mode (quote nil))) nil nil (pairlis (quote (winsize winpos)) (list (om-make-point 335 275) (om-make-point 10 40))) t nil nil nil) (om-load-boxcall (quote genfun) "X->DX 3" (quote x->dx) (quote ((om-load-inputfun (quote input-funbox) "a list of numbers" "SELF" 0))) (om-make-point 1211 238) nil nil nil nil 1) (om-load-editor-box1 "CHORD 3" (quote chord) (quote ((om-load-inputfun (quote input-funbox) "object" "self" nil) (om-load-inputfun (quote input-funbox) "pitches (list of midicents)" "lmidic" (list 6000)) (om-load-inputfun (quote input-funbox) "velocities (list of values 0-127)" "lvel" (list 100)) (om-load-inputfun (quote input-funbox) "offsets (list of values in ms)" "loffset" (list 0)) (om-load-inputfun (quote input-funbox) "durations (list of values in ms)" "ldur" (list 1000)) (om-load-inputfun (quote input-funbox) "MIDI channels (list of values 0-16)" "lchan" (list 1)))) (om-make-point 1122 139) (om-make-point 126 85) (let ((thechord (make-instance (quote chord) :lmidic (quote (6500 7400 8300)) :ldur (quote (1000 1000 1000)) :lvel (quote (100 100 100)) :loffset (quote (0 0 0)) :lchan (quote (1 1 1))))) (load-port-info thechord (quote (0 0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) nil nil (pairlis (quote (approx fontsize staff cmnpref deltapict outport inport player zoom notechancolor? grillestep mode winsize winpos score-mode obj-mode cursor-mode show-stems scale)) (list 2 24 (quote g) (let ((newobj (make-instance (quote edition-values)))) (setf (paper-size newobj) (om-make-point 600 800)) (setf (top-margin newobj) 2) (setf (left-margin newobj) 1) (setf (right-margin newobj) 1) (setf (bottom-margin newobj) 1) (setf (orientation newobj) nil) (setf (scale newobj) nil) (setf (system-space newobj) (quote (1))) (setf (system-color newobj) (quote nil)) (setf (line-space newobj) 1) (setf (title newobj) nil) (setf (show-title? newobj) nil) (setf (show-page? newobj) nil) (setf (sheet-id newobj) nil) (setf (page-mode newobj) nil) newobj) (om-make-point 0 0) nil nil (quote :jackmidi) 1 nil 1000 0 (om-make-point 370 280) (om-make-point 400 20) 0 0 (quote :normal) (quote t) nil)) t nil nil nil) (om-load-boxcall (quote genfun) "N->MC 3" (quote n->mc) (quote ((om-load-inputfun (quote input-funbox) "note name or list of note names" "STRS" (list "C3")))) (om-make-point 1153 61) nil nil nil nil 1) (om-load-boxcall (quote genfun) "OM/ 2" (quote om/) (quote ((om-load-inputfun (quote input-funbox) "number or list" "ARG1" 1) (om-load-inputfun (quote input-funbox) "number or list" "ARG2" 100))) (om-make-point 351 197) nil nil nil nil 1) (om-load-editor-box1 "TEXT-BOX 2" (quote text-box) (quote ((om-load-inputfun (quote input-funbox) "dialog-item text (string)" "text" "untitled"))) (om-make-point 351 236) (om-make-point 53 50) (om-make-dialog-item (quote text-box) (om-make-point 1 1) (om-make-point 33 23) "(3 9)" :font (om-make-font "DejaVu Sans" 10.998697916666666D0 :family "DejaVu Sans" :style (quote (:plain)) :mode (quote nil))) nil nil (pairlis (quote (winsize winpos)) (list (om-make-point 335 275) (om-make-point 10 40))) t nil nil nil) (om-load-boxcall (quote genfun) "X->DX 2" (quote x->dx) (quote ((om-load-inputfun (quote input-funbox) "a list of numbers" "SELF" 0))) (om-make-point 287 265) nil nil nil nil 1) (om-load-boxcall (quote genfun) "OM/" (quote om/) (quote ((om-load-inputfun (quote input-funbox) "number or list" "ARG1" 1) (om-load-inputfun (quote input-funbox) "number or list" "ARG2" 100))) (om-make-point 52 352) nil nil nil nil 1) (om-load-editor-box1 "TEXT-BOX" (quote text-box) (quote ((om-load-inputfun (quote input-funbox) "dialog-item text (string)" "text" "untitled"))) (om-make-point 29 390) (om-make-point 68 50) (om-make-dialog-item (quote text-box) (om-make-point 1 1) (om-make-point 48 23) "(11 11)" :font (om-make-font "DejaVu Sans" 10.998697916666666D0 :family "DejaVu Sans" :style (quote (:plain)) :mode (quote nil))) nil nil (pairlis (quote (winsize winpos)) (list (om-make-point 335 275) (om-make-point 10 40))) t nil nil nil) (om-load-boxcall (quote genfun) "X->DX" (quote x->dx) (quote ((om-load-inputfun (quote input-funbox) "a list of numbers" "SELF" 0))) (om-make-point 57 299) nil nil nil nil 1) (om-load-boxcall (quote bastype) "list 2" (quote list) (quote nil) (om-make-point 225 65) (om-make-point 88 32) (list (quote cb4) (quote d4) (quote b4)) "(Cb4 D4 B4)" nil) (om-load-editor-box1 "CHORD 2" (quote chord) (quote ((om-load-inputfun (quote input-funbox) "object" "self" nil) (om-load-inputfun (quote input-funbox) "pitches (list of midicents)" "lmidic" (list 6000)) (om-load-inputfun (quote input-funbox) "velocities (list of values 0-127)" "lvel" (list 100)) (om-load-inputfun (quote input-funbox) "offsets (list of values in ms)" "loffset" (list 0)) (om-load-inputfun (quote input-funbox) "durations (list of values in ms)" "ldur" (list 1000)) (om-load-inputfun (quote input-funbox) "MIDI channels (list of values 0-16)" "lchan" (list 1)))) (om-make-point 198 190) (om-make-point 126 84) (let ((thechord (make-instance (quote chord) :lmidic (quote (7100 7400 8300)) :ldur (quote (1000 1000 1000)) :lvel (quote (100 100 100)) :loffset (quote (0 0 0)) :lchan (quote (1 1 1))))) (load-port-info thechord (quote (0 0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) nil nil (pairlis (quote (approx fontsize staff cmnpref deltapict outport inport player zoom notechancolor? grillestep mode winsize winpos score-mode obj-mode cursor-mode show-stems scale)) (list 2 24 (quote g) (let ((newobj (make-instance (quote edition-values)))) (setf (paper-size newobj) (om-make-point 600 800)) (setf (top-margin newobj) 2) (setf (left-margin newobj) 1) (setf (right-margin newobj) 1) (setf (bottom-margin newobj) 1) (setf (orientation newobj) nil) (setf (scale newobj) nil) (setf (system-space newobj) (quote (1))) (setf (system-color newobj) (quote nil)) (setf (line-space newobj) 1) (setf (title newobj) nil) (setf (show-title? newobj) nil) (setf (show-page? newobj) nil) (setf (sheet-id newobj) nil) (setf (page-mode newobj) nil) newobj) (om-make-point 0 0) nil nil (quote :jackmidi) 1 nil 1000 0 (om-make-point 370 280) (om-make-point 400 20) 0 0 (quote :normal) (quote t) nil)) t nil nil nil) (om-load-boxcall (quote genfun) "N->MC 2" (quote n->mc) (quote ((om-load-inputfun (quote input-funbox) "note name or list of note names" "STRS" (list "C3")))) (om-make-point 229 112) nil nil nil nil 1) (om-load-editor-box1 "CHORD" (quote chord) (quote ((om-load-inputfun (quote input-funbox) "object" "self" nil) (om-load-inputfun (quote input-funbox) "pitches (list of midicents)" "lmidic" (list 6000)) (om-load-inputfun (quote input-funbox) "velocities (list of values 0-127)" "lvel" (list 100)) (om-load-inputfun (quote input-funbox) "offsets (list of values in ms)" "loffset" (list 0)) (om-load-inputfun (quote input-funbox) "durations (list of values in ms)" "ldur" (list 1000)) (om-load-inputfun (quote input-funbox) "MIDI channels (list of values 0-16)" "lchan" (list 1)))) (om-make-point 60 205) (om-make-point 117 82) (let ((thechord (make-instance (quote chord) :lmidic (quote (6100 7200 8300)) :ldur (quote (1000 1000 1000)) :lvel (quote (100 100 100)) :loffset (quote (0 0 0)) :lchan (quote (1 1 1))))) (load-port-info thechord (quote (0 0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) nil nil (pairlis (quote (approx fontsize staff cmnpref deltapict outport inport player zoom notechancolor? grillestep mode winsize winpos score-mode obj-mode cursor-mode show-stems scale)) (list 2 24 (quote g) (let ((newobj (make-instance (quote edition-values)))) (setf (paper-size newobj) (om-make-point 600 800)) (setf (top-margin newobj) 2) (setf (left-margin newobj) 1) (setf (right-margin newobj) 1) (setf (bottom-margin newobj) 1) (setf (orientation newobj) nil) (setf (scale newobj) nil) (setf (system-space newobj) (quote (1))) (setf (system-color newobj) (quote nil)) (setf (line-space newobj) 1) (setf (title newobj) nil) (setf (show-title? newobj) nil) (setf (show-page? newobj) nil) (setf (sheet-id newobj) nil) (setf (page-mode newobj) nil) newobj) (om-make-point 0 0) nil nil (quote :jackmidi) 1 nil 1000 0 (om-make-point 370 280) (om-make-point 400 20) 0 0 (quote :normal) (quote t) nil)) t nil nil nil) (om-load-boxcomment "comment" (om-make-point 512 44) (quote "apud Bernard Space and Symmetry in Bartok JMT 1986") "" (om-make-point 55 1) nil (om-make-color 0.9017315S0 0.049881697S0 0.049881697S0) (om-make-font "Courier" 15.998697916666666D0 :family "Courier" :style (quote (:bold)) :mode (quote nil))) (om-load-boxcall (quote bastype) "list" (quote list) (quote nil) (om-make-point 57 55) (om-make-point 88 32) (list (quote db3) (quote c4) (quote b4)) "(Db3 C4 B4)" nil) (om-load-boxcall (quote genfun) "N->MC" (quote n->mc) (quote ((om-load-inputfun (quote input-funbox) "note name or list of note names" "STRS" (list "C3")))) (om-make-point 92 114) nil nil nil nil 1))) (quote ((2 0 1 0 nil 0) (1 0 3 1 nil 0) (10 0 4 1 nil 0) (8 0 6 0 nil 0) (6 0 7 0 nil 0) (9 1 8 0 nil 0) (10 0 9 1 nil 0) (5 0 10 0 nil 0) (14 0 12 0 nil 0) (12 0 13 0 nil 0) (15 1 14 0 nil 0) (16 0 15 1 nil 0) (11 0 16 0 nil 0) (20 0 18 0 nil 0) (18 0 19 0 nil 0) (21 1 20 0 nil 0) (22 0 21 1 nil 0) (17 0 22 0 nil 0) (25 0 23 0 nil 0) (23 0 24 0 nil 0) (30 1 25 0 nil 0) (28 0 26 0 nil 0) (26 0 27 0 nil 0) (32 1 28 0 nil 0) (31 0 30 1 nil 0) (29 0 31 0 nil 0) (35 0 32 1 nil 0) (34 0 35 0 nil 0))) nil 6.080003))
