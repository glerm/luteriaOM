; OM File Header - Saved 2015/02/22 1:26:11
; (6.04 :patc (om-make-point 85 27) (om-make-point 50 50) (om-make-point 854 525) "No documentation " 183 0 nil "2015/02/22 1:26:11")
; End File Header
(in-package :om)(load-lib-for (quote ("profile")))(setf *om-current-persistent* (om-load-patch1 "weight-average" (quote ((om-load-boxcall (quote lispfun) "LIST" (quote list) (quote ((om-load-inputfun (quote input-funbox) "add-input" "add-input" nil))) (om-make-point 245 353) nil nil nil nil 1) (om-load-editor-box1 "CHORD" (quote chord) (quote ((om-load-inputfun (quote input-funbox) "objs" "SELF" nil) (om-load-inputfun (quote input-funbox) "no documentation" "LMIDIC" (list 6000)) (om-load-inputfun (quote input-funbox) "no documentation" "LVEL" (list 100)) (om-load-inputfun (quote input-funbox) "no documentation" "LOFFSET" (list 0)) (om-load-inputfun (quote input-funbox) "no documentation" "LDUR" (list 1000)) (om-load-inputfun (quote input-funbox) "no documentation" "LCHAN" (list 1)))) (om-make-point 304 310) (om-make-point 74 119) (let ((thechord (make-instance (quote chord) :lmidic (quote (4048)) :ldur (quote (1000)) :lvel (quote (100)) :loffset (quote (0)) :lchan (quote (1))))) (load-port-info thechord (quote (nil))) thechord) nil nil (pairlis (quote (palette-mode scale show-stems obj-mode score-mode winpos winsize mode grillestep notechancolor? zoom microplay inport outport deltapict cmnpref staff fontsize approx)) (list 0 nil (quote t) 1 0 (om-make-point 400 20) (om-make-point 370 280) 0 1000 nil 1 nil 0 0 (om-make-point 0 0) (let ((newobj (make-instance (quote edition-values)))) (setf (paper-size newobj) (om-make-point 600 800)) (setf (top-margin newobj) 2) (setf (left-margin newobj) 1) (setf (right-margin newobj) 1) (setf (bottom-margin newobj) 1) (setf (orientation newobj) nil) (setf (scale newobj) nil) (setf (system-space newobj) (quote (1))) (setf (line-space newobj) 1) (setf (title newobj) nil) (setf (show-title? newobj) nil) (setf (show-page? newobj) nil) (setf (sheet-id newobj) nil) (setf (page-mode newobj) nil) newobj) (quote g) 24 2)) t nil nil nil) (om-load-boxcall (quote genfun) "OM-ROUND" (quote om-round) (quote ((om-load-inputfun (quote input-funbox) "number or tree" "SELF" 1))) (om-make-point 154 334) nil nil nil nil 1) (om-load-boxcall (quote genfun) "WEIGHT-AVERAGE" (quote |Profile|::weight-average) (quote ((om-load-inputfun (quote input-funbox) "no documentation" "LIST" nil))) (om-make-point 125 259) nil nil nil "weight-average" 1) (om-load-boxcall (quote bastype) "xxaux" (quote t) (quote nil) (om-make-point 85 18) (om-make-point 327 50) (list 8000 6800 6098 5600 5214 4898 4632 4400 4196 4014 3848 3698 3560 3432 3312 3200 3096 2996 2902 2814 2730 2648 2572 2498) "(8000 6800 6098 5600 5214 4898 4632 4400 4196 4014 3848 3698 3560 3432 3312 3200 3096 2996 2902 2814 2730 2648$ 2572 2498)" nil) (om-load-editor-box1 "xxCHORD" (quote chord) (quote ((om-load-inputfun (quote input-funbox) "objs" "SELF" nil) (om-load-inputfun (quote input-funbox) "LMIDIC" "LMIDIC" (list 6000)) (om-load-inputfun (quote input-funbox) "LVEL" "LVEL" (list 100)) (om-load-inputfun (quote input-funbox) "LOFFSET" "LOFFSET" (list 0)) (om-load-inputfun (quote input-funbox) "LDUR" "LDUR" (list 1000)) (om-load-inputfun (quote input-funbox) "LCHAN" "LCHAN" (list 1)))) (om-make-point 159 82) (om-make-point 113 157) (let ((thechord (make-instance (quote chord) :lmidic (quote (8000 6800 6098 5600 5214 4898 4632 4400 4196 4014 3848 3698 3560 3432 3312 3200 3096 2996 2902 2814 2730 2648 2572 2498)) :ldur (quote (1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000)) :lvel (quote (100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100)) :loffset (quote (0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0)) :lchan (quote (1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1))))) (load-port-info thechord (quote (nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil))) thechord) nil nil (pairlis (quote (scale microplay obj-mode palette-mode inport outport approx fontsize staff cmnpref deltapict zoom notechancolor? grillestep mode winsize winpos show-stems)) (list nil nil 0 0 0 0 2 24 (quote g) (let ((newobj (make-instance (quote edition-values)))) (setf (paper-size newobj) (om-make-point 600 800)) (setf (top-margin newobj) 2) (setf (left-margin newobj) 1) (setf (right-margin newobj) 1) (setf (bottom-margin newobj) 1) (setf (orientation newobj) nil) (setf (scale newobj) nil) (setf (system-space newobj) (quote (1))) (setf (line-space newobj) 1) (setf (title newobj) nil) (setf (show-title? newobj) nil) (setf (show-page? newobj) nil) (setf (sheet-id newobj) nil) (setf (page-mode newobj) nil) newobj) (om-make-point 0 0) 1 nil 1000 0 (om-make-point 500 280) (om-make-point 10 40) (quote t))) t nil nil nil))) (quote ((2 0 0 0 nil 0) (0 0 1 1 nil 0) (3 0 2 0 nil 0) (5 1 3 0 nil 0) (4 0 5 1 nil 0))) nil 6.04))
