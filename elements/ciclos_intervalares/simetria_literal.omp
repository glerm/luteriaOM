; OM File Header - Saved 2015/03/10 16:35:22
; (6.080003 :patc (om-make-point 172 10) (om-make-point 0 0) (om-make-point 944 507) "" 183 0 "2015/01/14 0:03:18" "2015/03/10 16:35:22")
; End File Header
(in-package :om)(load-lib-for (quote nil))(setf *om-current-persistent* (om-load-patch1 "simetria_literal" (quote ((om-load-editor-box1 "TEXT-BOX 3" (quote text-box) (quote ((om-load-inputfun (quote input-funbox) "dialog-item text (string)" "text" "untitled"))) (om-make-point 293 504) (om-make-point 240 50) (om-make-dialog-item (quote text-box) (om-make-point 1 1) (om-make-point 220 23) "(F4 E4 D4 C4 Bb3 A3 G3 F3 Eb3 D3)" :font (om-make-font "DejaVu Sans" 10.998697916666666D0 :family "DejaVu Sans" :style (quote (:plain)) :mode (quote nil))) nil nil (pairlis (quote (winpos winsize)) (list (om-make-point 10 40) (om-make-point 335 275))) t nil nil nil) (om-load-boxcall (quote genfun) "MC->N" (quote mc->n) (quote ((om-load-inputfun (quote input-funbox) "pitch or pitch list (midicents)" "MIDIC" (list 6000)))) (om-make-point 393 422) nil nil nil nil 1) (om-load-editor-box1 "CHORD-SEQ" (quote chord-seq) (quote ((om-load-inputfun (quote input-funbox) "object" "self" nil) (om-load-inputfun (quote input-funbox) "pitches (mc): list or list of lists" "lmidic" (list 6000)) (om-load-inputfun (quote input-funbox) "onsets (ms): list" "lonset" (list 0 300)) (om-load-inputfun (quote input-funbox) "durations (ms): list or list of lists" "ldur" (list 1000)) (om-load-inputfun (quote input-funbox) "velocities (0-127): list or list of lists" "lvel" (list 100)) (om-load-inputfun (quote input-funbox) "offsets (ms): list or list of lists" "loffset" (list 0)) (om-load-inputfun (quote input-funbox) "MIDI channels (1-16): list or list of lists" "lchan" (list 1)) (om-load-inputfun (quote input-funbox) "relative chords duration (0-100)" "legato" 0))) (om-make-point 95 421) (om-make-point 215 87) (let ((newobj (when (find-class (quote chord-seq) nil) (make-instance (quote chord-seq) :lmidic (quote ((7700) (7600) (7400) (7200) (7000) (6900) (6700) (6500) (6300) (6200))) :lonset (quote (0 300 600 900 1200 1500 1800 2100 2400 2700 3700)) :ldur (quote ((1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000))) :lvel (quote ((100) (100) (100) (100) (100) (100) (100) (100) (100) (100))) :loffset (quote ((0) (0) (0) (0) (0) (0) (0) (0) (0) (0))) :lchan (quote ((1) (1) (1) (1) (1) (1) (1) (1) (1) (1))) :legato 0)))) (load-port-info newobj (quote ((0) (0) (0) (0) (0) (0) (0) (0) (0) (0)))) (init-mus-color newobj (quote nil)) (set-extra-pairs newobj (quote nil)) (set-patch-pairs newobj (quote nil)) (set-name newobj nil) (set-tonalite newobj nil) newobj) nil nil (pairlis (quote (scale show-stems cursor-mode obj-mode score-mode winpos winsize mode grillestep notechancolor? zoom player inport outport deltapict cmnpref staff fontsize approx)) (list nil (quote t) (quote :normal) 1 0 (om-make-point 400 20) (om-make-point 370 280) 0 1000 nil 1 (quote :jackmidi) nil nil (om-make-point 0 0) (let ((newobj (make-instance (quote edition-values)))) (setf (paper-size newobj) (om-make-point 600 800)) (setf (top-margin newobj) 2) (setf (left-margin newobj) 1) (setf (right-margin newobj) 1) (setf (bottom-margin newobj) 1) (setf (orientation newobj) nil) (setf (scale newobj) nil) (setf (system-space newobj) (quote (1))) (setf (system-color newobj) (quote nil)) (setf (line-space newobj) 1) (setf (title newobj) nil) (setf (show-title? newobj) nil) (setf (show-page? newobj) nil) (setf (sheet-id newobj) nil) (setf (page-mode newobj) nil) newobj) (quote g) 24 2)) t nil nil nil) (om-load-editor-box1 "TEXT-BOX 2" (quote text-box) (quote ((om-load-inputfun (quote input-funbox) "dialog-item text (string)" "text" "untitled"))) (om-make-point 92 354) (om-make-point 431 54) (om-make-dialog-item (quote text-box) (om-make-point 1 1) (om-make-point 411 27) "(7700 7600 7400 7200 7000 6900 6700 6500 6300 6200)" :font (om-make-font "DejaVu Sans" 10.998697916666666D0 :family "DejaVu Sans" :style (quote (:plain)) :mode (quote nil))) nil nil (pairlis (quote (winpos winsize)) (list (om-make-point 10 40) (om-make-point 335 275))) t nil nil nil) (om-load-boxcall (quote bastype) "aux 2" (quote t) (quote nil) (om-make-point 252 299) (om-make-point 41 32) 100 "100" nil) (om-load-boxcall (quote genfun) "OM*" (quote om*) (quote ((om-load-inputfun (quote input-funbox) "number or list" "ARG1" 0) (om-load-inputfun (quote input-funbox) "number or list" "ARG2" 0))) (om-make-point 173 317) nil nil nil nil 1) (om-load-boxcomment "comment" (om-make-point 29 28) (quote "F4") "" (om-make-point 287 249) nil (om-make-color 0 0 0) (om-make-font "Bitstream Vera Sans" 12 :family "Bitstream Vera Sans" :style (quote (:plain)) :mode (quote nil))) (om-load-boxcall (quote bastype) "aux" (quote t) (quote nil) (om-make-point 254 252) (om-make-point 34 32) 77 "77" nil) (om-load-boxcall (quote genfun) "OM+" (quote om+) (quote ((om-load-inputfun (quote input-funbox) "number or list" "ARG1" 0) (om-load-inputfun (quote input-funbox) "number or list" "ARG2" 0))) (om-make-point 174 271) nil nil nil nil 1) (om-load-boxcomment "comment" (om-make-point 669 47) (quote "Jonathan Bernard Space and Symmetry in Bartok JMT 1986 p.189") "" (om-make-point 18 573) nil (om-make-color 0.9017315S0 0.049881697S0 0.049881697S0) (om-make-font "Courier" 15.998697916666666D0 :family "Courier" :style (quote (:bold)) :mode (quote nil))) (om-load-boxcall (quote genfun) "DX->X" (quote dx->x) (quote ((om-load-inputfun (quote input-funbox) "a number" "START" 0) (om-load-inputfun (quote input-funbox) "a list of numbers" "LIST" (list 1 1)))) (om-make-point 156 86) nil nil nil nil 1) (om-load-boxcall (quote bastype) "list" (quote list) (quote nil) (om-make-point 171 29) (om-make-point 159 32) (list -1 -2 -2 -2 -1 -2 -2 -2 -1) "(-1 -2 -2 -2 -1 -2 -2 -2 -1)" nil) (om-load-editor-box1 "TEXT-BOX" (quote text-box) (quote ((om-load-inputfun (quote input-funbox) "dialog-item text (string)" "text" "untitled"))) (om-make-point 81 173) (om-make-point 213 54) (om-make-dialog-item (quote text-box) (om-make-point 1 1) (om-make-point 193 27) "(0 -1 -3 -5 -7 -8 -10 -12 -14 -15)" :font (om-make-font "DejaVu Sans" 10.998697916666666D0 :family "DejaVu Sans" :style (quote (:plain)) :mode (quote nil))) nil nil (pairlis (quote (winpos winsize)) (list (om-make-point 10 40) (om-make-point 335 275))) t nil nil nil))) (quote ((1 0 0 0 nil 0) (3 0 1 0 nil 0) (3 0 2 1 nil 0) (5 0 3 0 nil 0) (8 0 5 0 nil 0) (4 0 5 1 nil 0) (12 0 8 0 nil 0) (7 0 8 1 nil 0) (11 0 10 1 nil 0) (10 0 12 0 nil 0))) nil 6.080003))
