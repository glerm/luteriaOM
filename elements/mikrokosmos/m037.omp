; OM File Header - Saved 2015/02/24 19:39:23
; (6.080003 :patc (om-make-point 118 60) (om-make-point 0 31) (om-make-point 1104 628) "" 183 0 "2014/12/08 22:59:18" "2015/02/24 19:39:23")
; End File Header
; External resources 
; (list (list (quote :midi) "#P\"../../../mestrado_glerm/mikrokosmos/midi/mikro037.mid\""))
(in-package :om)(load-lib-for (quote nil))(setf *om-current-persistent* (om-load-patch1 "m037" (quote ((om-load-boxcall (quote undefined) "undefined" (quote undefined) (quote nil) (om-make-point 1061 39) (om-make-point 66 18) nil nil nil 0) (om-load-editor-box1 "CHORD-SEQ" (quote chord-seq) (quote ((om-load-inputfun (quote input-funbox) "object" "self" nil) (om-load-inputfun (quote input-funbox) "pitches (mc): list or list of lists" "lmidic" (list 6000)) (om-load-inputfun (quote input-funbox) "onsets (ms): list" "lonset" (list 0 1000)) (om-load-inputfun (quote input-funbox) "durations (ms): list or list of lists" "ldur" (list 1000)) (om-load-inputfun (quote input-funbox) "velocities (0-127): list or list of lists" "lvel" (list 100)) (om-load-inputfun (quote input-funbox) "offsets (ms): list or list of lists" "loffset" (list 0)) (om-load-inputfun (quote input-funbox) "MIDI channels (1-16): list or list of lists" "lchan" (list 1)) (om-load-inputfun (quote input-funbox) "relative chords duration (0-100)" "legato" 0))) (om-make-point 34 119) (om-make-point 1059 152) (let ((newobj (when (find-class (quote chord-seq) nil) (make-instance (quote chord-seq) :lmidic (quote ((5300) (6000) (5900) (5700) (5900) (5500) (5300) (5700) (6000) (5900 6500) (5700) (5900) (5500) (7200) (7100) (6000 6900) (7100) (5900 6700) (5700 6500) (5500) (5300 6900) (5700 7200) (5500 7100) (6900) (7100) (6700) (5700) (5900) (5500) (6000 7200) (7200) (6000 7200) (7200) (6000 7100) (6700) (6900) (6700) (5900 6500) (5300 6700) (6000 6900) (5900) (5700 6500) (5900) (6000) (6000 7200) (6000) (6000 7200) (6000) (6000 7200) (7100) (6000 6900) (7100) (5900 6700) (5700) (5900) (5500) (6000 6900) (7100) (7200) (6900) (5300 7100) (6700) (5900 6900) (6700) (6900) (6500) (6700) (5700) (5900) (5500) (5700) (6500) (6900) (7100) (7200) (7100) (5300 6900) (5500 7100) (5700 6900) (6700) (5900 6500) (6700) (6000) (6900) (7100) (6900) (5300 6700) (5500) (5700 6500) (5900 6700) (6500) (6000))) :lonset (quote (0 536 1071 1607 1875 2143 2679 3214 3750 4286 4821 5089 5357 5893 6429 6964 7232 7500 8036 8304 8571 9107 9643 10179 10446 10714 11250 11518 11786 12321 12857 13393 13929 14464 14732 15000 15268 15536 15804 16071 16339 16607 16875 17143 17679 18214 18750 19286 19821 20357 20893 21161 21429 21964 22232 22500 23036 23304 23571 23839 24107 24375 24643 24911 25179 25446 25714 25982 26250 26518 26786 27054 27321 27589 27857 28125 28393 28661 28929 29196 29464 29732 30000 30536 30804 31071 31614 31897 32188 32803 33126 33459 37645)) :ldur (quote ((536) (535) (536) (268) (268) (536) (535) (536) (536) (535 1607) (268) (268) (1607) (536) (535) (536 268) (268) (536 536) (268 535) (267) (536 536) (536 536) (1607 536) (267) (268) (1072) (268) (268) (268) (1072 536) (536) (1071 536) (535) (1072 268) (268) (268) (268) (268 268) (267 267) (268 536) (268) (268 536) (268) (536) (535 1071) (536) (536 1071) (535) (536 536) (536) (536 268) (268) (535 1071) (268) (268) (536) (1071 268) (267) (268) (268) (536 268) (268) (1071 268) (268) (267) (268) (1072) (268) (268) (268) (1071) (267) (268) (268) (268) (268) (268 268) (268 268) (535 267) (268) (536 268) (268) (1614) (268) (267) (543) (283 574) (291) (615 615) (656 323) (333) (4186))) :lvel (quoteloffset (quote ((0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0 0) (0) (0 0) (0 0) (0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0 0) (0) (0 0) (0) (0) (0) (0 0) (0 0) (0 0) (0) (0 0) (0) (0) (0 0) (0) (0 0) (0) (0 0) (0) (0 0) (0) (0 0) (0) (0) (0) (0 0) (0) (0) (0) (0 0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0) (0 0) (0) (0) (0) (0) (0) (0 0) (0) (0 0) (0 0) (0) (0))) :lchan (quote ((1) (1) (1) (1) (1) (1) (1) (1) (1) (1 1) (1) (1) (1) (1) (1) (1 1) (1) (1 1) (1 1) (1) (1 1) (1 1) (1 1) (1) (1) (1) (1) (1) (1) (1 1) (1) (1 1) (1) (1 1) (1) (1) (1) (1 1) (1 1) (1 1) (1) (1 1) (1) (1) (1 1) (1) (1 1) (1) (1 1) (1) (1 1) (1) (1 1) (1) (1) (1) (1 1) (1) (1) (1) (1 1) (1) (1 1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1 1) (1 1) (1 1) (1) (1 1) (1) (1) (1) (1) (1) (1 1) (1) (1 1) (1 1) (1) (1))) :legato 0)))) (load-port-info newobj (quote ((0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0 0) (0) (0 0) (0 0) (0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0 0) (0) (0 0) (0) (0) (0) (0 0) (0 0) (0 0) (0) (0 0) (0) (0) (0 0) (0) (0 0) (0) (0 0) (0) (0 0) (0) (0 0) (0) (0) (0) (0 0) (0) (0) (0) (0 0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0) (0 0) (0) (0) (0) (0) (0) (0 0) (0) (0 0) (0 0) (0) (0)))) (init-mus-color newobj (quote nil)) (set-extra-pairs newobj (quote nil)) (set-patch-pairs newobj (quote nil)) (set-name newobj nil) (set-tonalite newobj nil) newobj) "x" nil (pairlis (quote (approx fontsize staff cmnpref deltapict outport inport player zoom notechancolor? grillestep mode winsize winpos score-mode obj-mode cursor-mode show-stems scale)) (list 2 24 (quote g) (let ((newobj (make-instance (quote edition-values)))) (setf (paper-size newobj) (om-make-point 600 800)) (setf (top-margin newobj) 2) (setf (left-margin newobj) 1) (setf (right-margin newobj) 1) (setf (bottom-margin newobj) 1) (setf (orientation newobj) nil) (setf (scale newobj) nil) (setf (system-space newobj) (quote (1))) (setf (system-color newobj) (quote nil)) (setf (line-space newobj) 1) (setf (title newobj) nil) (setf (show-title? newobj) nil) (setf (show-page? newobj) nil) (setf (sheet-id newobj) nil) (setf (page-mode newobj) nil) newobj) (om-make-point 0 0) nil nil (quote :jackmidi) 1 nil 1000 0 (om-make-point 370 280) (om-make-point 400 20) 0 1 (quote :normal) (quote t) nil)) t nil nil nil) (om-load-editor-box1 "mikro037.mid" (quote midifile) (quote ((om-load-inputfun (quote input-funbox) "object" "self" nil))) (om-make-point 356 11) (om-make-point 50 72) (let ((newobj (load-midi (om-make-pathname :directory (quote (:absolute "home" "lucida" "mestrado_glerm" "mikrokosmos" "midi")) :device nil :host nil :name "mikro037" :type "mid")))) (load-port-info newobj (quote nil)) (init-mus-color newobj (quote nil)) (set-extra-pairs newobj (quote nil)) (set-patch-pairs newobj (quote nil)) (set-name newobj "mikro037.mid") (set-tonalite newobj nil) newobj) nil nil (pairlis (quote (outport player deltapict zoom obj-mode cmnpref notechancolor? grillestep mode winsize winpos show-stems scale)) (list 0 (quote :midishare-rt) (om-make-point 0 0) 1 0 (let ((newobj (make-instance (quote edition-values)))) (setf (paper-size newobj) (om-make-point 600 800)) (setf (top-margin newobj) 2) (setf (left-margin newobj) 1) (setf (right-margin newobj) 1) (setf (bottom-margin newobj) 1) (setf (orientation newobj) nil) (setf (scale newobj) nil) (setf (system-space newobj) (quote (1))) (setf (system-color newobj) (quote nil)) (setf (line-space newobj) 1) (setf (title newobj) nil) (setf (show-title? newobj) nil) (setf (show-page? newobj) nil) (setf (sheet-id newobj) nil) (setf (page-mode newobj) nil) newobj) nil 1000 0 (om-make-point 370 280) (om-make-point 10 40) (quote t) nil)) nil nil nil nil) (om-load-editor-box1 "TEXT-VIEW" (quote text-view) (quote ((om-load-inputfun (quote input-funbox) "dialog-item text (string)" "text" "untitled"))) (om-make-point 225 300) (om-make-point 299 267) (let ((rep (om-make-dialog-item (quote text-view) (om-make-point 1 1) (om-make-point 287 238) "untitled"))) (om-set-dialog-item-text rep "(5300)
(6000)
(5900)
(5700)
(5900)
(5500)
(5300)
(5700)
(6000)
(5900 6500)
(5700)
(5900)
(5500)
(7200)
(7100)
(6000 6900)
(7100)
(5900 6700)
(5700 6500)
(5500)
(5300 6900)
(5700 7200)
(5500 7100)
(6900)
(7100)
(6700)
(5700)
(5900)
(5500)
(6000 7200)
(7200)
(6000 7200)
(7200)
(6000 7100)
(6700)
(6900)
(6700)
(5900 6500)
(5300 6700)
(6000 6900)
(5900)
(5700 6500)
(5900)
(6000)
(6000 7200)
(6000)
(6000 7200)
(6000)
(6000 7200)
(7100)
(6000 6900)
(7100)
(5900 6700)
(5700)
(5900)
(5500)
(6000 6900)
(7100)
(7200)
(6900)
(5300 7100)
(6700)
(5900 6900)
(6700)
(6900)
(6500)
(6700)
(5700)
(5900)
(5500)
(5700)
(6500)
(6900)
(7100)
(7200)
(7100)
(5300 6900)
(5500 7100)
(5700 6900)
(6700)
(5900 6500)
(6700)
(6000)
(6900)
(7100)
(6900)
(5300 6700)
(5500)
(5700 6500)
(5900 6700)
(6500)
(6000)
") rep) nil nil (pairlis (quote (winsize winpos)) (list (om-make-point 335 275) (om-make-point 10 40))) t nil nil nil))) (quote ((2 0 1 0 nil 0) (1 1 3 0 nil 0))) nil 6.080003))