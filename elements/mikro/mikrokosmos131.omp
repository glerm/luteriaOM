; OM File Header - Saved 2014/06/23 18:02:01
; (6.080003 :patc (om-make-point 10 210) (om-make-point 0 0) (om-make-point 785 541) "" 183 0 "2014/05/03 8:01:01" "2014/05/23 19:01:12")
; End File Header
; External resources 
; (list (list (quote :midi) "#P\"../../../../bartok/mikrokosmos/Bartok_Mikrokosmos_Quartes_131.mid\""))
(in-package :om)(load-lib-for (quote nil))(setf *om-current-persistent* (om-load-patch1 "mikrokosmos131" (quote ((om-load-editor-box1 "CHORD-SEQ" (quote chord-seq) (quote ((om-load-inputfun (quote input-funbox) "object" "self" nil) (om-load-inputfun (quote input-funbox) "pitches (mc): list or list of lists" "lmidic" (list 6000)) (om-load-inputfun (quote input-funbox) "onsets (ms): list" "lonset" (list 0 1000)) (om-load-inputfun (quote input-funbox) "durations (ms): list or list of lists" "ldur" (list 1000)) (om-load-inputfun (quote input-funbox) "velocities (0-127): list or list of lists" "lvel" (list 100)) (om-load-inputfun (quote input-funbox) "offsets (ms): list or list of lists" "loffset" (list 0)) (om-load-inputfun (quote input-funbox) "MIDI channels (1-16): list or list of lists" "lchan" (list 1)) (om-load-inputfun (quote input-funbox) "relative chords duration (0-100)" "legato" 0))) (om-make-point 83 227) (om-make-point 568 115) (let ((newobj (when (find-class (quote chord-seq) nil) (make-instance (quote chord-seq) :lmidic (quote ((7000 6500) (5900 5400) (6000 5500) (6800 6300) (7000 6500) (4700 4200) (4800 4300) (6800 6300) (6600 6100) (4800 4300 6600 6100) (6600 6100) (5000 4500 6800 6300) (7800 7300) (7700 7200) (6300 5800 7800 7300) (6400 5900) (6300 5800 7800 7300) (7900 7400) (6300 5800 7800 7300) (6200 5700) (6300 5800 7700 7200) (7800 7300) (6200 5700 7800 7300) (8000 7500) (6000 5500 8000 7500) (8200 7700) (5900 5400) (8200 7700) (8300 7800) (5800 5400 8200 7700) (6000 5500) (8200 7700) (8000 7500) (5800 5400 8200 7700) (6000 5500) (8000 7500))) :lonset (quote (484 726 968 1210 1452 1694 1935 2177 2419 2661 2903 3145 4113 4355 4597 4839 5081 5323 5565 5806 6048 6290 6532 6774 7016 7258 7500 7984 8226 8468 8710 8952 9194 9435 9677 9919 10156)) :ldur (quote ((645 645) (237 237) (403 403) (237 237) (645 645) (236 236) (404 404) (237 237) (237 237) (237 237 237 237) (237 237) (645 645 645 645) (237 237) (237 237) (237 237 237 237) (237 237) (237 237 237 237) (236 236) (236 236 236 236) (237 237) (237 237 237 237) (237 237) (237 237 237 237) (237 237) (237 237 237 237) (403 403) (403 403) (237 237) (237 237) (237 237 237 237) (237 237) (236 236) (236 236) (237 237 237 237) (237 237) (237 237))) :lvel (quote ((92 92) (92 92) (92 92) (92 92) (92 92) (92 92) (92 92) (92 92) (92 92) (90 90 90 90) (88 88) (86 86 86 86) (75 75) (75 75) (75 75 75 75) (75 75) (75 75 75 75) (75 75) (75 75 75 75) (75 75) (75 75 75 75) (75 75) (79 79 79 79) (83 83) (87 87 87 87) (92 92) (92 92) (92 92) (92 92) (92 92 92 92) (92 92) (92 92) (92 92) (92 92 92 92) (92 92) (92 92))) :loffset (quote ((0 0) (0 0) (0 0) (0 0) (0 0) (0 0) (0 0) (0 0) (0 0) (0 0 0 0) (0 0) (0 0 0 0) (0 0) (0 0) (0 0 0 0) (0 0) (0 0 0 0) (0 0) (0 0 0 0) (0 0) (0 0 0 0) (0 0) (0 0 0 0) (0 0) (0 0 0 0) (0 0) (0 0) (0 0) (0 0) (0 0 0 0) (0 0) (0 0) (0 0) (0 0 0 0) (0 0) (0 0))) :lchan (quote ((1 1) (2 2) (2 2) (1 1) (1 1) (2 2) (2 2) (1 1) (1 1) (2 2 1 1) (1 1) (2 2 1 1) (1 1) (1 1) (2 2 1 1) (2 2) (2 2 1 1) (1 1) (2 2 1 1) (2 2) (2 2 1 1) (1 1) (2 2 1 1) (1 1) (2 2 1 1) (1 1) (2 2) (1 1) (1 1) (2 2 1 1) (2 2) (1 1) (1 1) (2 2 1 1) (2 2) (1 1))) :legato 0)))) (load-port-info newobj (quote ((0 0) (0 0) (0 0) (0 0) (0 0) (0 0) (0 0) (0 0) (0 0) (0 0 0 0) (0 0) (0 0 0 0) (0 0) (0 0) (0 0 0 0) (0 0) (0 0 0 0) (0 0) (0 0 0 0) (0 0) (0 0 0 0) (0 0) (0 0 0 0) (0 0) (0 0 0 0) (0 0) (0 0) (0 0) (0 0) (0 0 0 0) (0 0) (0 0) (0 0) (0 0 0 0) (0 0) (0 0)))) (init-mus-color newobj (quote nil)) (set-extra-pairs newobj (quote nil)) (set-patch-pairs newobj (quote ((nil (om-load-patch-abs1 "patch" (quote nil) (quote nil) 6.080003 nil "" (om-make-point 200 200) (om-make-point 400 500)))))) (set-name newobj nil) (set-tonalite newobj nil) newobj) "x" nil (pairlis (quote (approx fontsize staff cmnpref deltapict outport inport player zoom notechancolor? grillestep mode winsize winpos score-mode obj-mode cursor-mode show-stems scale)) (list 2 24 (quote gf) (let ((newobj (make-instance (quote edition-values)))) (setf (paper-size newobj) (om-make-point 600 800)) (setf (top-margin newobj) 2) (setf (left-margin newobj) 1) (setf (right-margin newobj) 1) (setf (bottom-margin newobj) 1) (setf (orientation newobj) nil) (setf (scale newobj) nil) (setf (system-space newobj) (quote (1))) (setf (system-color newobj) (quote nil)) (setf (line-space newobj) 1) (setf (title newobj) nil) (setf (show-title? newobj) nil) (setf (show-page? newobj) nil) (setf (sheet-id newobj) nil) (setf (page-mode newobj) nil) newobj) (om-make-point 0 0) nil nil (quote :jackmidi) 1 nil 1000 0 (om-make-point 847 270) (om-make-point 0 0) 0 1 (quote :normal) (quote t) nil)) t nil nil nil) (om-load-editor-box1 "Bartok_Mikrokosmos_Quartes_131.mid" (quote midifile) (quote ((om-load-inputfun (quote input-funbox) "object" "self" nil))) (om-make-point 116 64) (om-make-point 329 91) (let ((newobj (load-midi (om-make-pathname :directory (quote (:absolute "home" "glerm" "Estudos" "aula_analise2014" "bartok" "mikrokosmos")) :device nil :host nil :name "Bartok_Mikrokosmos_Quartes_131" :type "mid")))) (load-port-info newobj (quote nil)) (init-mus-color newobj (quote nil)) (set-extra-pairs newobj (quote nil)) (set-patch-pairs newobj (quote nil)) (set-name newobj "Bartok_Mikrokosmos_Quartes_131.mid") (set-tonalite newobj nil) newobj) "x" nil (pairlis (quote (outport player winpos winsize deltapict zoom obj-mode cmnpref notechancolor? grillestep mode show-stems scale)) (list 0 (quote :midishare-rt) (om-make-point 0 0) (om-make-point 500 280) (om-make-point 0 0) 1 0 (let ((newobj (make-instance (quote edition-values)))) (setf (paper-size newobj) (om-make-point 600 800)) (setf (top-margin newobj) 2) (setf (left-margin newobj) 1) (setf (right-margin newobj) 1) (setf (bottom-margin newobj) 1) (setf (orientation newobj) nil) (setf (scale newobj) nil) (setf (system-space newobj) (quote (1))) (setf (system-color newobj) (quote nil)) (setf (line-space newobj) 1) (setf (title newobj) nil) (setf (show-title? newobj) nil) (setf (show-page? newobj) nil) (setf (sheet-id newobj) nil) (setf (page-mode newobj) nil) newobj) nil 1000 0 (quote t) nil)) t nil nil nil))) (quote ((1 0 0 0 nil 0))) nil 6.080003))
