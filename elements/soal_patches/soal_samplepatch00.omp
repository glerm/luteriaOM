; OM File Header - Saved 2014/12/17 16:21:51
; (6.0009 :patc (om-make-point 166 245) (om-make-point 50 50) (om-make-point 500 400) "No documentation " 183 0 nil nil)
; End File Header
(in-package :om)(load-lib-for (quote ("SOAL")))(setf *om-current-persistent* (om-load-patch1 "soal sample patch 1" (quote ((om-load-boxcomment "comment" (om-make-point 100 40) (quote "click D for online doc.") nil (om-make-point 193 311) nil (om-make-color 0 0 0) (om-make-font "Verdana" 12 :family "Verdana" :style (quote (:plain)) :mode (quote nil))) (om-load-boxcomment "comment" (om-make-point 168 57) (quote "<- \"textfile\" (Classes/BasicTools/texfileI/O)") nil (om-make-point 190 457) nil (om-make-color 0 0 0) (om-make-font "Verdana" 12 :family "Verdana" :style (quote (:plain)) :mode (quote nil))) (om-load-boxcomment "comment" (om-make-point 148 107) (quote "This is to get a vertical list (for inserting into a Table): 1) evaluate; 2) double-click; 3) copy-paste the list, or \"save as...\"") nil (om-make-point 54 520) nil (om-make-color 0 0 0) (om-make-font "Verdana" 12 :family "Verdana" :style (quote (:plain)) :mode (quote nil))) (om-load-editor-box1 "TEXTFILE" (quote textfile) (quote ((om-load-inputfun (quote input-funbox) "object or object list" "self" nil) (om-load-inputfun (quote input-funbox) "text to put in the file" "exp-list" nil) (om-load-inputfunmenu1 (quote input-funmenu) "append or supersede mode" "ed-mode" "supersede" (list (list "append" "append") (list "supersede" "supersede"))) (om-load-inputfunmenu1 (quote input-funmenu) "contents eval mode" "eval-mode" "text" (list (list "text" "text") (list "data list" "data") (list "list" "list"))))) (om-make-point 83 461) (om-make-point 72 52) (load-buffer-textfile (quote ("0.04" "0.02" "")) (quote textfile) "supersede" "text") "x" nil (pairlis (quote (winpos winsize)) (list (om-make-point 10 40) (om-make-point 335 275))) nil nil nil nil) (om-load-boxcomment "comment1" (om-make-point 167 65) (quote "Two samples of Boulez \"3. Sonate\" (see score image into the midi \"SOAL examples\" folder).") "" (om-make-point 207 66) nil (om-make-color 0 0 0) (om-make-font "Arial" 12 :family "Arial" :style (quote (:plain)) :mode (quote nil))) (om-load-boxcomment "comment" (om-make-point 120 49) (quote "option-right arrow to add input for more MIDI files.") "" (om-make-point 170 170) nil (om-make-color 0 0 0) (om-make-font "Arial" 12 :family "Arial" :style (quote (:plain)) :mode (quote nil))) (om-load-editor-box1 "midifile11" (quote midifile) (quote ((om-load-inputfun (quote input-funbox) "objs" "SELF" nil))) (om-make-point 133 60) (om-make-point 50 72) (let ((newobj (load-midi (make-pathname :directory (quote (:relative "elements" "soal exemples" "SOALmidi exemples")) :device :unspecific :name "blztxt02" :type "MID")))) (load-port-info newobj (quote nil)) (init-mus-color newobj (quote nil)) (set-extra-pairs newobj (quote nil)) (set-patch-pairs newobj (quote nil)) (set-tonalite newobj nil) newobj) "x" nil (pairlis (quote (scale player approx fontsize staff cmnpref deltapict outport inport zoom notechancolor? grillestep mode winsize winpos palette-mode obj-mode show-stems)) (list nil (quote :midishare) 2 24 (quote g) (let ((newobj (make-instance (quote edition-values)))) (setf (paper-size newobj) (om-make-point 600 800)) (setf (top-margin newobj) 2) (setf (left-margin newobj) 1) (setf (right-margin newobj) 1) (setf (bottom-margin newobj) 1) (setf (orientation newobj) nil) (setf (scale newobj) nil) (setf (system-space newobj) (quote (1))) (setf (line-space newobj) 1) (setf (title newobj) nil) (setf (show-title? newobj) nil) (setf (show-page? newobj) nil) (setf (sheet-id newobj) nil) (setf (page-mode newobj) nil) newobj) (om-make-point 0 0) 0 0 1 nil 1000 0 18350450 2621450 0 0 (quote t))) t nil nil nil) (om-load-boxcall (quote genfun) "SONIC-QUALITY-ANALYSIS" (quote sonic-quality-analysis) (quote ((om-load-inputfun (quote input-funbox) "list of midicents (2100 - 10800)" "MIDICENTS" (list (list 6000 2000) (list 4000))) (om-load-inputfun (quote input-funbox) "list of velocities (0-127)" "VELOCITIES" (list (list 50 20) (list 30))) (om-load-inputfun (quote input-funbox) "list of pedal (1 - 128) (see manual for explanations)" "PED" (list (list 64 64) (list 128))) (om-load-inputfunmenu1 (quote input-funmenu) "output choice (mode or average) of pedal" "AVARAGE" 0 (list (list "mean" 1) (list "moda" 0))) (om-load-inputfun (quote input-funbox) "the number of rounding" "ROUND" 2))) (om-make-point 64 306) nil nil nil nil 7) (om-load-boxcall (quote genfun) "MULTI-MIDI-READER" (quote multi-midi-reader) (quote ((om-load-inputfun (quote input-funbox) "Quantification of onset and duration (in ms)" "QUANT" 5) (om-load-inputfun (quote input-funbox) "Click option-right-arrow to increment the number of Midifile inputs." "MIDIFILES" (list 6000 7200)) (om-load-inputfun (quote input-funbox) "Click option-right-arrow to increment the number of Midifile inputs." "MIDIFILES" (list 6000 7200)))) (om-make-point 69 172) nil nil nil nil 6) (om-load-editor-box1 "midifile1" (quote midifile) (quote ((om-load-inputfun (quote input-funbox) "objs" "SELF" nil))) (om-make-point 69 60) (om-make-point 50 72) (let ((newobj (load-midi (make-pathname :directory (quote (:relative "elements" "soal exemples" "SOALmidi exemples")) :device :unspecific :name "BlzTxt01_50BPM" :type "MID")))) (load-port-info newobj (quote nil)) (init-mus-color newobj (quote nil)) (set-extra-pairs newobj (quote nil)) (set-patch-pairs newobj (quote nil)) (set-tonalite newobj nil) newobj) "x" nil (pairlis (quote (scale player approx fontsize staff cmnpref deltapict outport inport zoom notechancolor? grillestep mode winsize winpos palette-mode obj-mode show-stems)) (list nil (quote :midishare) 2 24 (quote g) (let ((newobj (make-instance (quote edition-values)))) (setf (paper-size newobj) (om-make-point 600 800)) (setf (top-margin newobj) 2) (setf (left-margin newobj) 1) (setf (right-margin newobj) 1) (setf (bottom-margin newobj) 1) (setf (orientation newobj) nil) (setf (scale newobj) nil) (setf (system-space newobj) (quote (1))) (setf (line-space newobj) 1) (setf (title newobj) nil) (setf (show-title? newobj) nil) (setf (show-page? newobj) nil) (setf (sheet-id newobj) nil) (setf (page-mode newobj) nil) newobj) (om-make-point 0 0) 0 0 1 nil 1000 0 18350450 2621450 0 0 (quote t))) t nil nil nil))) (quote ((7 2 3 1 nil 0) (8 0 7 0 nil 0) (8 3 7 1 nil 0) (8 5 7 2 nil 0) (9 0 8 1 nil 0) (6 0 8 2 nil 0))) nil 6.0009))
