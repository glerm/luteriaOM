; OM File Header - Saved 2014/12/17 16:21:51
; (6.010006 :patc (om-make-point 181 152) (om-make-point 57 51) (om-make-point 500 514) "" 183 0 nil nil)
; End File Header
; External resources 
; (list (list (quote :midi) "C:..\\SOAL midi examples\\BlzTxt01_50BPM.MID"))
(in-package :om)(load-lib-for (quote ("SOAL")))(setf *om-current-persistent* (om-load-patch1 "segmentation" (quote ((om-load-boxcall (quote bastype) "aux" (quote t) (quote nil) (om-make-point 262 407) (om-make-point 89 30) "midifiles name" "\"midifiles name\"" nil) (om-load-boxcall (quote genfun) "SAVE-SOAL-SEGMENTATION" (quote save-soal-segmentation) (quote ((om-load-inputfun (quote input-funbox) "midicents" "MIDICENTS" (list (list 6000 6400 6700))) (om-load-inputfun (quote input-funbox) "onsets" "ONSETS" (list (list 0 1000 2000))) (om-load-inputfun (quote input-funbox) "durations" "DURATIONS" (list (list 500 500 500))) (om-load-inputfun (quote input-funbox) "velocities" "VELOCITIES" (list (list 69 69 69))) (om-load-inputfun (quote input-funbox) "start name midi files" "NAMEFILE" "midifile"))) (om-make-point 148 437) nil nil nil nil 1) (om-load-boxcall (quote genfun) "SEGMENTATION-MIDI" (quote segmentation-midi) (quote ((om-load-inputfun (quote input-funbox) "midicents" "MIDICENTS" (list (list 3000 3500 4000 4400 5000 6000 6600 7700) (list 3000))) (om-load-inputfun (quote input-funbox) "onsets" "ONSETS" (list (list 0 10 10 30 35 35 45 80) (list 0))) (om-load-inputfun (quote input-funbox) "durations" "DURATIONS" (list (list 50 40 100 10 20 40 40 50) (list 200))) (om-load-inputfun (quote input-funbox) "velocities" "VELOCITIES" (list (list 40 40 50 70 69 39 100 127) (list 100))) (om-load-inputfun (quote input-funbox) "the percent value to be add upon the mode of the reference list" "PERCENTUAL" 20) (om-load-inputfunmenu1 (quote input-funmenu) "the basic parameter to be used for the 1st way of segmentation" "OPTION" 0 (list (list "notes" 0) (list "onsets" 1) (list "durations" 2) (list "velocities" 3))) (om-load-inputfunmenu1 (quote input-funmenu) "the operation to obtain the reference value" "OPERATION-OPTION" 0 (list (list "mode" 0) (list "media" 1) (list "lowest value" 2) (list "highest value" 3) (list "any value" 4))) (om-load-inputfun (quote input-funbox) "the output of a 'per-onset' function (2nd way of segmentation) (may need the SOAL-Multilist-flat)" "REFERENCE" nil) (om-load-inputfun (quote input-funbox) "the fixed duration for the 3rd way of segmentation" "TIME" 100) (om-load-inputfunmenu1 (quote input-funmenu) "pop-up menu to select the segmentation main option (way) the algorithm will work with" "USE-OPTION" 1 (list (list "distances between the values of one of the input lists" 1) (list "result of one of the 'per-onset' functions" 2) (list "by fixed duration" 3))) (om-load-inputfun (quote input-funbox) "the chosen value to be the reference value" "CHOSEN-VALUE" 1000))) (om-make-point 155 360) nil nil nil nil 5) (om-load-boxcall (quote genfun) "SOAL-MULTILISTS-FLAT" (quote soal-multilists-flat) (quote ((om-load-inputfun (quote input-funbox) "data" "INFORMATION" (list (list (list 100 (list 795)) (list 62 (list 1570)) (list 69 (list 0)) (list 59 (list 0)) (list 65 (list 1620))) (list (list 69 (list 0)) (list 82 (list 0)) (list 59 (list 75)) (list 35 (list 1500))))))) (om-make-point 283 280) nil nil nil nil 4) (om-load-boxcall (quote genfun) "NOTES-PER-ONSET" (quote notes-per-onset) (quote ((om-load-inputfun (quote input-funbox) "list of notes (midicents)" "NOTES" (list (list 6000 6400 6700))) (om-load-inputfun (quote input-funbox) "list of onsets (ms)" "ONSETS" (list (list 0 1000 2000))))) (om-make-point 286 207) nil nil nil nil 6) (om-load-boxcall (quote genfun) "MULTI-MIDI-READER" (quote multi-midi-reader) (quote ((om-load-inputfun (quote input-funbox) "Quantification of onset and duration (in ms)" "QUANT" 5) (om-load-inputfun (quote input-funbox) "Click option-right-arrow to increment the number of Midifile inputs." "MIDIFILE" (list 6000 7200)))) (om-make-point 150 111) nil nil nil nil 6) (om-load-editor-box1 "MIDIFILE" (quote midifile) (quote ((om-load-inputfun (quote input-funbox) "object" "SELF" nil))) (om-make-point 173 17) (om-make-point 50 72) (let ((newobj (load-midi (make-pathname :directory (quote (:relative "elements" "examples" "SOAL midi examples")) :device :unspecific :host "C" :name "BlzTxt01_50BPM" :type "MID")))) (load-port-info newobj (quote nil)) (init-mus-color newobj (quote nil)) (set-extra-pairs newobj (quote nil)) (set-patch-pairs newobj (quote nil)) (set-name newobj nil) (set-tonalite newobj nil) newobj) "x" nil (pairlis (quote (palette-mode scale show-stems obj-mode score-mode winpos winsize mode grillestep notechancolor? zoom player inport outport deltapict cmnpref staff fontsize approx)) (list 0 nil (quote t) 1 0 (om-make-point 400 20) (om-make-point 370 280) 0 1000 nil 1 (quote :midishare) 0 nil (om-make-point 0 0) (let ((newobj (make-instance (quote edition-values)))) (setf (paper-size newobj) (om-make-point 600 800)) (setf (top-margin newobj) 2) (setf (left-margin newobj) 1) (setf (right-margin newobj) 1) (setf (bottom-margin newobj) 1) (setf (orientation newobj) nil) (setf (scale newobj) nil) (setf (system-space newobj) (quote (1))) (setf (system-color newobj) (quote nil)) (setf (line-space newobj) 1) (setf (title newobj) nil) (setf (show-title? newobj) nil) (setf (show-page? newobj) nil) (setf (sheet-id newobj) nil) (setf (page-mode newobj) nil) newobj) (quote g) 24 2)) t nil nil nil))) (quote ((2 0 1 0 nil 0) (2 1 1 1 nil 0) (2 2 1 2 nil 0) (2 3 1 3 nil 0) (0 0 1 4 nil 0) (5 0 2 0 nil 0) (5 1 2 1 nil 0) (5 2 2 2 nil 0) (5 3 2 3 nil 0) (3 2 2 7 nil 0) (4 1 3 0 nil 0) (5 0 4 0 nil 0) (5 1 4 1 nil 0) (6 0 5 1 nil 0))) nil 6.010006))
